"use strict";(self["webpackChunkmy_chrome_extension"]=self["webpackChunkmy_chrome_extension"]||[]).push([[504],{144:function(e,a,r){r.d(a,{C4:function(){return f},EW:function(){return xe},Gc:function(){return ge},IG:function(){return Ae},KR:function(){return Ee},Kh:function(){return ye},Pr:function(){return We},QW:function(){return Fe},R1:function(){return He},X2:function(){return c},bl:function(){return b},fE:function(){return we},g8:function(){return ke},hZ:function(){return R},i9:function(){return Pe},ju:function(){return Ce},o5:function(){return s},u4:function(){return x},ux:function(){return Se},yC:function(){return o}});r(4114);var t=r(4232);let n,i;class o{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this.parent=n,!e&&n&&(this.index=(n.scopes||(n.scopes=[])).push(this)-1)}get active(){return this._active}run(e){if(this._active){const a=n;try{return n=this,e()}finally{n=a}}else 0}on(){n=this}off(){n=this.parent}stop(e){if(this._active){let a,r;for(a=0,r=this.effects.length;a<r;a++)this.effects[a].stop();for(a=0,r=this.cleanups.length;a<r;a++)this.cleanups[a]();if(this.scopes)for(a=0,r=this.scopes.length;a<r;a++)this.scopes[a].stop(!0);if(!this.detached&&this.parent&&!e){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.parent=void 0,this._active=!1}}}function l(e,a=n){a&&a.active&&a.effects.push(e)}function s(){return n}class c{constructor(e,a,r,t){this.fn=e,this.trigger=a,this.scheduler=r,this.active=!0,this.deps=[],this._dirtyLevel=4,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,l(this,t)}get dirty(){if(2===this._dirtyLevel||3===this._dirtyLevel){this._dirtyLevel=1,f();for(let e=0;e<this._depsLength;e++){const a=this.deps[e];if(a.computed&&(u(a.computed),this._dirtyLevel>=4))break}1===this._dirtyLevel&&(this._dirtyLevel=0),b()}return this._dirtyLevel>=4}set dirty(e){this._dirtyLevel=e?4:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let e=m,a=i;try{return m=!0,i=this,this._runnings++,d(this),this.fn()}finally{h(this),this._runnings--,i=a,m=e}}stop(){var e;this.active&&(d(this),h(this),null==(e=this.onStop)||e.call(this),this.active=!1)}}function u(e){return e.value}function d(e){e._trackId++,e._depsLength=0}function h(e){if(e.deps.length>e._depsLength){for(let a=e._depsLength;a<e.deps.length;a++)p(e.deps[a],e);e.deps.length=e._depsLength}}function p(e,a){const r=e.get(a);void 0!==r&&a._trackId!==r&&(e.delete(a),0===e.size&&e.cleanup())}let m=!0,y=0;const g=[];function f(){g.push(m),m=!1}function b(){const e=g.pop();m=void 0===e||e}function k(){y++}function v(){y--;while(!y&&C.length)C.shift()()}function w(e,a,r){if(a.get(e)!==e._trackId){a.set(e,e._trackId);const r=e.deps[e._depsLength];r!==a?(r&&p(r,e),e.deps[e._depsLength++]=a):e._depsLength++}}const C=[];function S(e,a,r){k();for(const t of e.keys()){let r;t._dirtyLevel<a&&(null!=r?r:r=e.get(t)===t._trackId)&&(t._shouldSchedule||(t._shouldSchedule=0===t._dirtyLevel),t._dirtyLevel=a),t._shouldSchedule&&(null!=r?r:r=e.get(t)===t._trackId)&&(t.trigger(),t._runnings&&!t.allowRecurse||2===t._dirtyLevel||(t._shouldSchedule=!1,t.scheduler&&C.push(t.scheduler)))}v()}const A=(e,a)=>{const r=new Map;return r.cleanup=e,r.computed=a,r},M=new WeakMap,B=Symbol(""),T=Symbol("");function x(e,a,r){if(m&&i){let a=M.get(e);a||M.set(e,a=new Map);let t=a.get(r);t||a.set(r,t=A((()=>a.delete(r)))),w(i,t,void 0)}}function R(e,a,r,n,i,o){const l=M.get(e);if(!l)return;let s=[];if("clear"===a)s=[...l.values()];else if("length"===r&&(0,t.cy)(e)){const e=Number(n);l.forEach(((a,r)=>{("length"===r||!(0,t.Bm)(r)&&r>=e)&&s.push(a)}))}else switch(void 0!==r&&s.push(l.get(r)),a){case"add":(0,t.cy)(e)?(0,t.yI)(r)&&s.push(l.get("length")):(s.push(l.get(B)),(0,t.CE)(e)&&s.push(l.get(T)));break;case"delete":(0,t.cy)(e)||(s.push(l.get(B)),(0,t.CE)(e)&&s.push(l.get(T)));break;case"set":(0,t.CE)(e)&&s.push(l.get(B));break}k();for(const t of s)t&&S(t,4,void 0);v()}function L(e,a){var r;return null==(r=M.get(e))?void 0:r.get(a)}const P=(0,t.pD)("__proto__,__v_isRef,__isVue"),E=new Set(Object.getOwnPropertyNames(Symbol).filter((e=>"arguments"!==e&&"caller"!==e)).map((e=>Symbol[e])).filter(t.Bm)),D=N();function N(){const e={};return["includes","indexOf","lastIndexOf"].forEach((a=>{e[a]=function(...e){const r=Se(this);for(let a=0,n=this.length;a<n;a++)x(r,"get",a+"");const t=r[a](...e);return-1===t||!1===t?r[a](...e.map(Se)):t}})),["push","pop","shift","unshift","splice"].forEach((a=>{e[a]=function(...e){f(),k();const r=Se(this)[a].apply(this,e);return v(),b(),r}})),e}function H(e){const a=Se(this);return x(a,"has",e),a.hasOwnProperty(e)}class G{constructor(e=!1,a=!1){this._isReadonly=e,this._isShallow=a}get(e,a,r){const n=this._isReadonly,i=this._isShallow;if("__v_isReactive"===a)return!n;if("__v_isReadonly"===a)return n;if("__v_isShallow"===a)return i;if("__v_raw"===a)return r===(n?i?he:de:i?ue:ce).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(r)?e:void 0;const o=(0,t.cy)(e);if(!n){if(o&&(0,t.$3)(D,a))return Reflect.get(D,a,r);if("hasOwnProperty"===a)return H}const l=Reflect.get(e,a,r);return((0,t.Bm)(a)?E.has(a):P(a))?l:(n||x(e,"get",a),i?l:Pe(l)?o&&(0,t.yI)(a)?l:l.value:(0,t.Gv)(l)?n?fe(l):ye(l):l)}}class W extends G{constructor(e=!1){super(!1,e)}set(e,a,r,n){let i=e[a];if(!this._isShallow){const a=ve(i);if(we(r)||ve(r)||(i=Se(i),r=Se(r)),!(0,t.cy)(e)&&Pe(i)&&!Pe(r))return!a&&(i.value=r,!0)}const o=(0,t.cy)(e)&&(0,t.yI)(a)?Number(a)<e.length:(0,t.$3)(e,a),l=Reflect.set(e,a,r,n);return e===Se(n)&&(o?(0,t.$H)(r,i)&&R(e,"set",a,r,i):R(e,"add",a,r)),l}deleteProperty(e,a){const r=(0,t.$3)(e,a),n=e[a],i=Reflect.deleteProperty(e,a);return i&&r&&R(e,"delete",a,void 0,n),i}has(e,a){const r=Reflect.has(e,a);return(0,t.Bm)(a)&&E.has(a)||x(e,"has",a),r}ownKeys(e){return x(e,"iterate",(0,t.cy)(e)?"length":B),Reflect.ownKeys(e)}}class F extends G{constructor(e=!1){super(!0,e)}set(e,a){return!0}deleteProperty(e,a){return!0}}const z=new W,I=new F,O=new W(!0),_=e=>e,K=e=>Reflect.getPrototypeOf(e);function J(e,a,r=!1,n=!1){e=e["__v_raw"];const i=Se(e),o=Se(a);r||((0,t.$H)(a,o)&&x(i,"get",a),x(i,"get",o));const{has:l}=K(i),s=n?_:r?Be:Me;return l.call(i,a)?s(e.get(a)):l.call(i,o)?s(e.get(o)):void(e!==i&&e.get(a))}function j(e,a=!1){const r=this["__v_raw"],n=Se(r),i=Se(e);return a||((0,t.$H)(e,i)&&x(n,"has",e),x(n,"has",i)),e===i?r.has(e):r.has(e)||r.has(i)}function $(e,a=!1){return e=e["__v_raw"],!a&&x(Se(e),"iterate",B),Reflect.get(e,"size",e)}function V(e){e=Se(e);const a=Se(this),r=K(a),t=r.has.call(a,e);return t||(a.add(e),R(a,"add",e,e)),this}function U(e,a){a=Se(a);const r=Se(this),{has:n,get:i}=K(r);let o=n.call(r,e);o||(e=Se(e),o=n.call(r,e));const l=i.call(r,e);return r.set(e,a),o?(0,t.$H)(a,l)&&R(r,"set",e,a,l):R(r,"add",e,a),this}function Y(e){const a=Se(this),{has:r,get:t}=K(a);let n=r.call(a,e);n||(e=Se(e),n=r.call(a,e));const i=t?t.call(a,e):void 0,o=a.delete(e);return n&&R(a,"delete",e,void 0,i),o}function q(){const e=Se(this),a=0!==e.size,r=void 0,t=e.clear();return a&&R(e,"clear",void 0,void 0,r),t}function Z(e,a){return function(r,t){const n=this,i=n["__v_raw"],o=Se(i),l=a?_:e?Be:Me;return!e&&x(o,"iterate",B),i.forEach(((e,a)=>r.call(t,l(e),l(a),n)))}}function X(e,a,r){return function(...n){const i=this["__v_raw"],o=Se(i),l=(0,t.CE)(o),s="entries"===e||e===Symbol.iterator&&l,c="keys"===e&&l,u=i[e](...n),d=r?_:a?Be:Me;return!a&&x(o,"iterate",c?T:B),{next(){const{value:e,done:a}=u.next();return a?{value:e,done:a}:{value:s?[d(e[0]),d(e[1])]:d(e),done:a}},[Symbol.iterator](){return this}}}}function Q(e){return function(...a){return"delete"!==e&&("clear"===e?void 0:this)}}function ee(){const e={get(e){return J(this,e)},get size(){return $(this)},has:j,add:V,set:U,delete:Y,clear:q,forEach:Z(!1,!1)},a={get(e){return J(this,e,!1,!0)},get size(){return $(this)},has:j,add:V,set:U,delete:Y,clear:q,forEach:Z(!1,!0)},r={get(e){return J(this,e,!0)},get size(){return $(this,!0)},has(e){return j.call(this,e,!0)},add:Q("add"),set:Q("set"),delete:Q("delete"),clear:Q("clear"),forEach:Z(!0,!1)},t={get(e){return J(this,e,!0,!0)},get size(){return $(this,!0)},has(e){return j.call(this,e,!0)},add:Q("add"),set:Q("set"),delete:Q("delete"),clear:Q("clear"),forEach:Z(!0,!0)},n=["keys","values","entries",Symbol.iterator];return n.forEach((n=>{e[n]=X(n,!1,!1),r[n]=X(n,!0,!1),a[n]=X(n,!1,!0),t[n]=X(n,!0,!0)})),[e,r,a,t]}const[ae,re,te,ne]=ee();function ie(e,a){const r=a?e?ne:te:e?re:ae;return(a,n,i)=>"__v_isReactive"===n?!e:"__v_isReadonly"===n?e:"__v_raw"===n?a:Reflect.get((0,t.$3)(r,n)&&n in a?r:a,n,i)}const oe={get:ie(!1,!1)},le={get:ie(!1,!0)},se={get:ie(!0,!1)};const ce=new WeakMap,ue=new WeakMap,de=new WeakMap,he=new WeakMap;function pe(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function me(e){return e["__v_skip"]||!Object.isExtensible(e)?0:pe((0,t.Zf)(e))}function ye(e){return ve(e)?e:be(e,!1,z,oe,ce)}function ge(e){return be(e,!1,O,le,ue)}function fe(e){return be(e,!0,I,se,de)}function be(e,a,r,n,i){if(!(0,t.Gv)(e))return e;if(e["__v_raw"]&&(!a||!e["__v_isReactive"]))return e;const o=i.get(e);if(o)return o;const l=me(e);if(0===l)return e;const s=new Proxy(e,2===l?n:r);return i.set(e,s),s}function ke(e){return ve(e)?ke(e["__v_raw"]):!(!e||!e["__v_isReactive"])}function ve(e){return!(!e||!e["__v_isReadonly"])}function we(e){return!(!e||!e["__v_isShallow"])}function Ce(e){return ke(e)||ve(e)}function Se(e){const a=e&&e["__v_raw"];return a?Se(a):e}function Ae(e){return Object.isExtensible(e)&&(0,t.yQ)(e,"__v_skip",!0),e}const Me=e=>(0,t.Gv)(e)?ye(e):e,Be=e=>(0,t.Gv)(e)?fe(e):e;class Te{constructor(e,a,r,t){this.getter=e,this._setter=a,this.dep=void 0,this.__v_isRef=!0,this["__v_isReadonly"]=!1,this.effect=new c((()=>e(this._value)),(()=>Le(this,2===this.effect._dirtyLevel?2:3))),this.effect.computed=this,this.effect.active=this._cacheable=!t,this["__v_isReadonly"]=r}get value(){const e=Se(this);return e._cacheable&&!e.effect.dirty||!(0,t.$H)(e._value,e._value=e.effect.run())||Le(e,4),Re(e),e.effect._dirtyLevel>=2&&Le(e,2),e._value}set value(e){this._setter(e)}get _dirty(){return this.effect.dirty}set _dirty(e){this.effect.dirty=e}}function xe(e,a,r=!1){let n,i;const o=(0,t.Tn)(e);o?(n=e,i=t.tE):(n=e.get,i=e.set);const l=new Te(n,i,o||!i,r);return l}function Re(e){var a;m&&i&&(e=Se(e),w(i,null!=(a=e.dep)?a:e.dep=A((()=>e.dep=void 0),e instanceof Te?e:void 0),void 0))}function Le(e,a=4,r){e=Se(e);const t=e.dep;t&&S(t,a,void 0)}function Pe(e){return!(!e||!0!==e.__v_isRef)}function Ee(e){return De(e,!1)}function De(e,a){return Pe(e)?e:new Ne(e,a)}class Ne{constructor(e,a){this.__v_isShallow=a,this.dep=void 0,this.__v_isRef=!0,this._rawValue=a?e:Se(e),this._value=a?e:Me(e)}get value(){return Re(this),this._value}set value(e){const a=this.__v_isShallow||we(e)||ve(e);e=a?e:Se(e),(0,t.$H)(e,this._rawValue)&&(this._rawValue=e,this._value=a?e:Me(e),Le(this,4,e))}}function He(e){return Pe(e)?e.value:e}const Ge={get:(e,a,r)=>He(Reflect.get(e,a,r)),set:(e,a,r,t)=>{const n=e[a];return Pe(n)&&!Pe(r)?(n.value=r,!0):Reflect.set(e,a,r,t)}};function We(e){return ke(e)?e:new Proxy(e,Ge)}function Fe(e){const a=(0,t.cy)(e)?new Array(e.length):{};for(const r in e)a[r]=Ie(e,r);return a}class ze{constructor(e,a,r){this._object=e,this._key=a,this._defaultValue=r,this.__v_isRef=!0}get value(){const e=this._object[this._key];return void 0===e?this._defaultValue:e}set value(e){this._object[this._key]=e}get dep(){return L(Se(this._object),this._key)}}function Ie(e,a,r){const t=e[a];return Pe(t)?t:new ze(e,a,r)}},6768:function(e,a,r){r.d(a,{$u:function(){return ze},$y:function(){return U},CE:function(){return ur},Df:function(){return Se},EW:function(){return Xr},FK:function(){return Qa},Fv:function(){return Sr},Gt:function(){return Sa},Gy:function(){return pe},Ht:function(){return aa},K9:function(){return Ja},Lk:function(){return fr},MZ:function(){return Ce},Ng:function(){return vr},OW:function(){return ke},Q3:function(){return Ar},QP:function(){return ye},Qi:function(){return H},RG:function(){return Ue},Tb:function(){return qe},WQ:function(){return Aa},Wv:function(){return dr},bF:function(){return br},bo:function(){return ce},dY:function(){return b},eW:function(){return Cr},eX:function(){return Ve},g2:function(){return $},gN:function(){return Y},h:function(){return Qr},hi:function(){return Oe},jC:function(){return rr},jt:function(){return G},k6:function(){return W},nI:function(){return Nr},p9:function(){return re},pI:function(){return $e},pM:function(){return Ae},pR:function(){return fe},qL:function(){return o},sV:function(){return We},uX:function(){return ir},v6:function(){return xr},wB:function(){return ne},xo:function(){return Ie}});r(4114);var t=r(144),n=r(4232);function i(e,a,r,t){try{return t?e(...t):e()}catch(n){l(n,a,r)}}function o(e,a,r,t){if((0,n.Tn)(e)){const o=i(e,a,r,t);return o&&(0,n.yL)(o)&&o.catch((e=>{l(e,a,r)})),o}const s=[];for(let n=0;n<e.length;n++)s.push(o(e[n],a,r,t));return s}function l(e,a,r,t=!0){const n=a?a.vnode:null;if(a){let t=a.parent;const n=a.proxy,o=`https://vuejs.org/error-reference/#runtime-${r}`;while(t){const a=t.ec;if(a)for(let r=0;r<a.length;r++)if(!1===a[r](e,n,o))return;t=t.parent}const l=a.appContext.config.errorHandler;if(l)return void i(l,null,10,[e,n,o])}s(e,r,n,t)}function s(e,a,r,t=!0){console.error(e)}let c=!1,u=!1;const d=[];let h=0;const p=[];let m=null,y=0;const g=Promise.resolve();let f=null;function b(e){const a=f||g;return e?a.then(this?e.bind(this):e):a}function k(e){let a=h+1,r=d.length;while(a<r){const t=a+r>>>1,n=d[t],i=B(n);i<e||i===e&&n.pre?a=t+1:r=t}return a}function v(e){d.length&&d.includes(e,c&&e.allowRecurse?h+1:h)||(null==e.id?d.push(e):d.splice(k(e.id),0,e),w())}function w(){c||u||(u=!0,f=g.then(x))}function C(e){const a=d.indexOf(e);a>h&&d.splice(a,1)}function S(e){(0,n.cy)(e)?p.push(...e):m&&m.includes(e,e.allowRecurse?y+1:y)||p.push(e),w()}function A(e,a,r=(c?h+1:0)){for(0;r<d.length;r++){const a=d[r];if(a&&a.pre){if(e&&a.id!==e.uid)continue;0,d.splice(r,1),r--,a()}}}function M(e){if(p.length){const e=[...new Set(p)].sort(((e,a)=>B(e)-B(a)));if(p.length=0,m)return void m.push(...e);for(m=e,y=0;y<m.length;y++)m[y]();m=null,y=0}}const B=e=>null==e.id?1/0:e.id,T=(e,a)=>{const r=B(e)-B(a);if(0===r){if(e.pre&&!a.pre)return-1;if(a.pre&&!e.pre)return 1}return r};function x(e){u=!1,c=!0,d.sort(T);n.tE;try{for(h=0;h<d.length;h++){const e=d[h];e&&!1!==e.active&&i(e,null,14)}}finally{h=0,d.length=0,M(e),c=!1,f=null,(d.length||p.length)&&x(e)}}function R(e,a,...r){if(e.isUnmounted)return;const t=e.vnode.props||n.MZ;let i=r;const l=a.startsWith("update:"),s=l&&a.slice(7);if(s&&s in t){const e=`${"modelValue"===s?"model":s}Modifiers`,{number:a,trim:o}=t[e]||n.MZ;o&&(i=r.map((e=>(0,n.Kg)(e)?e.trim():e))),a&&(i=r.map(n.bB))}let c;let u=t[c=(0,n.rU)(a)]||t[c=(0,n.rU)((0,n.PT)(a))];!u&&l&&(u=t[c=(0,n.rU)((0,n.Tg)(a))]),u&&o(u,e,6,i);const d=t[c+"Once"];if(d){if(e.emitted){if(e.emitted[c])return}else e.emitted={};e.emitted[c]=!0,o(d,e,6,i)}}function L(e,a,r=!1){const t=a.emitsCache,i=t.get(e);if(void 0!==i)return i;const o=e.emits;let l={},s=!1;if(!(0,n.Tn)(e)){const t=e=>{const r=L(e,a,!0);r&&(s=!0,(0,n.X$)(l,r))};!r&&a.mixins.length&&a.mixins.forEach(t),e.extends&&t(e.extends),e.mixins&&e.mixins.forEach(t)}return o||s?((0,n.cy)(o)?o.forEach((e=>l[e]=null)):(0,n.X$)(l,o),(0,n.Gv)(e)&&t.set(e,l),l):((0,n.Gv)(e)&&t.set(e,null),null)}function P(e,a){return!(!e||!(0,n.Mp)(a))&&(a=a.slice(2).replace(/Once$/,""),(0,n.$3)(e,a[0].toLowerCase()+a.slice(1))||(0,n.$3)(e,(0,n.Tg)(a))||(0,n.$3)(e,a))}let E=null,D=null;function N(e){const a=E;return E=e,D=e&&e.type.__scopeId||null,a}function H(e){D=e}function G(){D=null}function W(e,a=E,r){if(!a)return e;if(e._n)return e;const t=(...r)=>{t._d&&sr(-1);const n=N(a);let i;try{i=e(...r)}finally{N(n),t._d&&sr(1)}return i};return t._n=!0,t._c=!0,t._d=!0,t}function F(e){const{type:a,vnode:r,proxy:t,withProxy:i,props:o,propsOptions:[s],slots:c,attrs:u,emit:d,render:h,renderCache:p,data:m,setupState:y,ctx:g,inheritAttrs:f}=e;let b,k;const v=N(e);try{if(4&r.shapeFlag){const e=i||t,a=e;b=Mr(h.call(a,e,p,o,y,m,g)),k=u}else{const e=a;0,b=Mr(e.length>1?e(o,{attrs:u,slots:c,emit:d}):e(o,null)),k=a.props?u:z(u)}}catch(C){tr.length=0,l(C,e,1),b=br(ar)}let w=b;if(k&&!1!==f){const e=Object.keys(k),{shapeFlag:a}=w;e.length&&7&a&&(s&&e.some(n.CP)&&(k=I(k,s)),w=wr(w,k))}return r.dirs&&(w=wr(w),w.dirs=w.dirs?w.dirs.concat(r.dirs):r.dirs),r.transition&&(w.transition=r.transition),b=w,N(v),b}const z=e=>{let a;for(const r in e)("class"===r||"style"===r||(0,n.Mp)(r))&&((a||(a={}))[r]=e[r]);return a},I=(e,a)=>{const r={};for(const t in e)(0,n.CP)(t)&&t.slice(9)in a||(r[t]=e[t]);return r};function O(e,a,r){const{props:t,children:n,component:i}=e,{props:o,children:l,patchFlag:s}=a,c=i.emitsOptions;if(a.dirs||a.transition)return!0;if(!(r&&s>=0))return!(!n&&!l||l&&l.$stable)||t!==o&&(t?!o||_(t,o,c):!!o);if(1024&s)return!0;if(16&s)return t?_(t,o,c):!!o;if(8&s){const e=a.dynamicProps;for(let a=0;a<e.length;a++){const r=e[a];if(o[r]!==t[r]&&!P(c,r))return!0}}return!1}function _(e,a,r){const t=Object.keys(a);if(t.length!==Object.keys(e).length)return!0;for(let n=0;n<t.length;n++){const i=t[n];if(a[i]!==e[i]&&!P(r,i))return!0}return!1}function K({vnode:e,parent:a},r){while(a){const t=a.subTree;if(t.suspense&&t.suspense.activeBranch===e&&(t.el=e.el),t!==e)break;(e=a.vnode).el=r,a=a.parent}}const J="components",j="directives";function $(e,a){return q(J,e,!0,a)||e}const V=Symbol.for("v-ndc");function U(e){return(0,n.Kg)(e)?q(J,e,!1)||e:e||V}function Y(e){return q(j,e)}function q(e,a,r=!0,t=!1){const i=E||Dr;if(i){const r=i.type;if(e===J){const e=qr(r,!1);if(e&&(e===a||e===(0,n.PT)(a)||e===(0,n.ZH)((0,n.PT)(a))))return r}const o=Z(i[e]||r[e],a)||Z(i.appContext[e],a);return!o&&t?r:o}}function Z(e,a){return e&&(e[a]||e[(0,n.PT)(a)]||e[(0,n.ZH)((0,n.PT)(a))])}const X=e=>e.__isSuspense;function Q(e,a){a&&a.pendingBranch?(0,n.cy)(e)?a.effects.push(...e):a.effects.push(e):S(e)}const ee=Symbol.for("v-scx"),ae=()=>{{const e=Aa(ee);return e}};function re(e,a){return ie(e,null,{flush:"post"})}const te={};function ne(e,a,r){return ie(e,a,r)}function ie(e,a,{immediate:r,deep:l,flush:s,once:c,onTrack:u,onTrigger:d}=n.MZ){if(a&&c){const e=a;a=(...a)=>{e(...a),B()}}const h=Dr,p=e=>!0===l?e:se(e,!1===l?1:void 0);let m,y,g=!1,f=!1;if((0,t.i9)(e)?(m=()=>e.value,g=(0,t.fE)(e)):(0,t.g8)(e)?(m=()=>p(e),g=!0):(0,n.cy)(e)?(f=!0,g=e.some((e=>(0,t.g8)(e)||(0,t.fE)(e))),m=()=>e.map((e=>(0,t.i9)(e)?e.value:(0,t.g8)(e)?p(e):(0,n.Tn)(e)?i(e,h,2):void 0))):m=(0,n.Tn)(e)?a?()=>i(e,h,2):()=>(y&&y(),o(e,h,3,[k])):n.tE,a&&l){const e=m;m=()=>se(e())}let b,k=e=>{y=A.onStop=()=>{i(e,h,4),y=A.onStop=void 0}};if(_r){if(k=n.tE,a?r&&o(a,h,3,[m(),f?[]:void 0,k]):m(),"sync"!==s)return n.tE;{const e=ae();b=e.__watcherHandles||(e.__watcherHandles=[])}}let w=f?new Array(e.length).fill(te):te;const C=()=>{if(A.active&&A.dirty)if(a){const e=A.run();(l||g||(f?e.some(((e,a)=>(0,n.$H)(e,w[a]))):(0,n.$H)(e,w)))&&(y&&y(),o(a,h,3,[e,w===te?void 0:f&&w[0]===te?[]:w,k]),w=e)}else A.run()};let S;C.allowRecurse=!!a,"sync"===s?S=C:"post"===s?S=()=>Ka(C,h&&h.suspense):(C.pre=!0,h&&(C.id=h.uid),S=()=>v(C));const A=new t.X2(m,n.tE,S),M=(0,t.o5)(),B=()=>{A.stop(),M&&(0,n.TF)(M.effects,A)};return a?r?C():w=A.run():"post"===s?Ka(A.run.bind(A),h&&h.suspense):A.run(),b&&b.push(B),B}function oe(e,a,r){const t=this.proxy,i=(0,n.Kg)(e)?e.includes(".")?le(t,e):()=>t[e]:e.bind(t,t);let o;(0,n.Tn)(a)?o=a:(o=a.handler,r=a);const l=Wr(this),s=ie(i,o.bind(t),r);return l(),s}function le(e,a){const r=a.split(".");return()=>{let a=e;for(let e=0;e<r.length&&a;e++)a=a[r[e]];return a}}function se(e,a,r=0,i){if(!(0,n.Gv)(e)||e["__v_skip"])return e;if(a&&a>0){if(r>=a)return e;r++}if(i=i||new Set,i.has(e))return e;if(i.add(e),(0,t.i9)(e))se(e.value,a,r,i);else if((0,n.cy)(e))for(let t=0;t<e.length;t++)se(e[t],a,r,i);else if((0,n.vM)(e)||(0,n.CE)(e))e.forEach((e=>{se(e,a,r,i)}));else if((0,n.Qd)(e))for(const t in e)se(e[t],a,r,i);return e}function ce(e,a){if(null===E)return e;const r=Yr(E)||E.proxy,t=e.dirs||(e.dirs=[]);for(let i=0;i<a.length;i++){let[e,o,l,s=n.MZ]=a[i];e&&((0,n.Tn)(e)&&(e={mounted:e,updated:e}),e.deep&&se(o),t.push({dir:e,instance:r,value:o,oldValue:void 0,arg:l,modifiers:s}))}return e}function ue(e,a,r,n){const i=e.dirs,l=a&&a.dirs;for(let s=0;s<i.length;s++){const c=i[s];l&&(c.oldValue=l[s].value);let u=c.dir[n];u&&((0,t.C4)(),o(u,r,8,[e.el,c,e,a]),(0,t.bl)())}}const de=Symbol("_leaveCb"),he=Symbol("_enterCb");function pe(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return We((()=>{e.isMounted=!0})),Ie((()=>{e.isUnmounting=!0})),e}const me=[Function,Array],ye={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:me,onEnter:me,onAfterEnter:me,onEnterCancelled:me,onBeforeLeave:me,onLeave:me,onAfterLeave:me,onLeaveCancelled:me,onBeforeAppear:me,onAppear:me,onAfterAppear:me,onAppearCancelled:me},ge={name:"BaseTransition",props:ye,setup(e,{slots:a}){const r=Nr(),n=pe();return()=>{const i=a.default&&Se(a.default(),!0);if(!i||!i.length)return;let o=i[0];if(i.length>1){let e=!1;for(const a of i)if(a.type!==ar){0,o=a,e=!0;break}}const l=(0,t.ux)(e),{mode:s}=l;if(n.isLeaving)return ve(o);const c=we(o);if(!c)return ve(o);const u=ke(c,l,n,r);Ce(c,u);const d=r.subTree,h=d&&we(d);if(h&&h.type!==ar&&!pr(c,h)){const e=ke(h,l,n,r);if(Ce(h,e),"out-in"===s)return n.isLeaving=!0,e.afterLeave=()=>{n.isLeaving=!1,!1!==r.update.active&&(r.effect.dirty=!0,r.update())},ve(o);"in-out"===s&&c.type!==ar&&(e.delayLeave=(e,a,r)=>{const t=be(n,h);t[String(h.key)]=h,e[de]=()=>{a(),e[de]=void 0,delete u.delayedLeave},u.delayedLeave=r})}return o}}},fe=ge;function be(e,a){const{leavingVNodes:r}=e;let t=r.get(a.type);return t||(t=Object.create(null),r.set(a.type,t)),t}function ke(e,a,r,t){const{appear:i,mode:l,persisted:s=!1,onBeforeEnter:c,onEnter:u,onAfterEnter:d,onEnterCancelled:h,onBeforeLeave:p,onLeave:m,onAfterLeave:y,onLeaveCancelled:g,onBeforeAppear:f,onAppear:b,onAfterAppear:k,onAppearCancelled:v}=a,w=String(e.key),C=be(r,e),S=(e,a)=>{e&&o(e,t,9,a)},A=(e,a)=>{const r=a[1];S(e,a),(0,n.cy)(e)?e.every((e=>e.length<=1))&&r():e.length<=1&&r()},M={mode:l,persisted:s,beforeEnter(a){let t=c;if(!r.isMounted){if(!i)return;t=f||c}a[de]&&a[de](!0);const n=C[w];n&&pr(e,n)&&n.el[de]&&n.el[de](),S(t,[a])},enter(e){let a=u,t=d,n=h;if(!r.isMounted){if(!i)return;a=b||u,t=k||d,n=v||h}let o=!1;const l=e[he]=a=>{o||(o=!0,S(a?n:t,[e]),M.delayedLeave&&M.delayedLeave(),e[he]=void 0)};a?A(a,[e,l]):l()},leave(a,t){const n=String(e.key);if(a[he]&&a[he](!0),r.isUnmounting)return t();S(p,[a]);let i=!1;const o=a[de]=r=>{i||(i=!0,t(),S(r?g:y,[a]),a[de]=void 0,C[n]===e&&delete C[n])};C[n]=e,m?A(m,[a,o]):o()},clone(e){return ke(e,a,r,t)}};return M}function ve(e){if(Be(e))return e=wr(e),e.children=null,e}function we(e){return Be(e)?e.children?e.children[0]:void 0:e}function Ce(e,a){6&e.shapeFlag&&e.component?Ce(e.component.subTree,a):128&e.shapeFlag?(e.ssContent.transition=a.clone(e.ssContent),e.ssFallback.transition=a.clone(e.ssFallback)):e.transition=a}function Se(e,a=!1,r){let t=[],n=0;for(let i=0;i<e.length;i++){let o=e[i];const l=null==r?o.key:String(r)+String(null!=o.key?o.key:i);o.type===Qa?(128&o.patchFlag&&n++,t=t.concat(Se(o.children,a,l))):(a||o.type!==ar)&&t.push(null!=l?wr(o,{key:l}):o)}if(n>1)for(let i=0;i<t.length;i++)t[i].patchFlag=-2;return t}
/*! #__NO_SIDE_EFFECTS__ */function Ae(e,a){return(0,n.Tn)(e)?(()=>(0,n.X$)({name:e.name},a,{setup:e}))():e}const Me=e=>!!e.type.__asyncLoader
/*! #__NO_SIDE_EFFECTS__ */;const Be=e=>e.type.__isKeepAlive;RegExp,RegExp;function Te(e,a){return(0,n.cy)(e)?e.some((e=>Te(e,a))):(0,n.Kg)(e)?e.split(",").includes(a):!!(0,n.gd)(e)&&e.test(a)}function xe(e,a){Le(e,"a",a)}function Re(e,a){Le(e,"da",a)}function Le(e,a,r=Dr){const t=e.__wdc||(e.__wdc=()=>{let a=r;while(a){if(a.isDeactivated)return;a=a.parent}return e()});if(Ne(a,t,r),r){let e=r.parent;while(e&&e.parent)Be(e.parent.vnode)&&Pe(t,a,r,e),e=e.parent}}function Pe(e,a,r,t){const i=Ne(a,e,t,!0);Oe((()=>{(0,n.TF)(t[a],i)}),r)}function Ee(e){e.shapeFlag&=-257,e.shapeFlag&=-513}function De(e){return 128&e.shapeFlag?e.ssContent:e}function Ne(e,a,r=Dr,n=!1){if(r){const i=r[e]||(r[e]=[]),l=a.__weh||(a.__weh=(...n)=>{if(r.isUnmounted)return;(0,t.C4)();const i=Wr(r),l=o(a,r,e,n);return i(),(0,t.bl)(),l});return n?i.unshift(l):i.push(l),l}}const He=e=>(a,r=Dr)=>(!_r||"sp"===e)&&Ne(e,((...e)=>a(...e)),r),Ge=He("bm"),We=He("m"),Fe=He("bu"),ze=He("u"),Ie=He("bum"),Oe=He("um"),_e=He("sp"),Ke=He("rtg"),Je=He("rtc");function je(e,a=Dr){Ne("ec",e,a)}function $e(e,a,r,t){let i;const o=r&&r[t];if((0,n.cy)(e)||(0,n.Kg)(e)){i=new Array(e.length);for(let r=0,t=e.length;r<t;r++)i[r]=a(e[r],r,void 0,o&&o[r])}else if("number"===typeof e){0,i=new Array(e);for(let r=0;r<e;r++)i[r]=a(r+1,r,void 0,o&&o[r])}else if((0,n.Gv)(e))if(e[Symbol.iterator])i=Array.from(e,((e,r)=>a(e,r,void 0,o&&o[r])));else{const r=Object.keys(e);i=new Array(r.length);for(let t=0,n=r.length;t<n;t++){const n=r[t];i[t]=a(e[n],n,t,o&&o[t])}}else i=[];return r&&(r[t]=i),i}function Ve(e,a){for(let r=0;r<a.length;r++){const t=a[r];if((0,n.cy)(t))for(let a=0;a<t.length;a++)e[t[a].name]=t[a].fn;else t&&(e[t.name]=t.key?(...e)=>{const a=t.fn(...e);return a&&(a.key=t.key),a}:t.fn)}return e}function Ue(e,a,r={},t,n){if(E.isCE||E.parent&&Me(E.parent)&&E.parent.isCE)return"default"!==a&&(r.name=a),br("slot",r,t&&t());let i=e[a];i&&i._c&&(i._d=!1),ir();const o=i&&Ye(i(r)),l=dr(Qa,{key:r.key||o&&o.key||`_${a}`},o||(t?t():[]),o&&1===e._?64:-2);return!n&&l.scopeId&&(l.slotScopeIds=[l.scopeId+"-s"]),i&&i._c&&(i._d=!0),l}function Ye(e){return e.some((e=>!hr(e)||e.type!==ar&&!(e.type===Qa&&!Ye(e.children))))?e:null}function qe(e,a){const r={};for(const t in e)r[a&&/[A-Z]/.test(t)?`on:${t}`:(0,n.rU)(t)]=e[t];return r}const Ze=e=>e?zr(e)?Yr(e)||e.proxy:Ze(e.parent):null,Xe=(0,n.X$)(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Ze(e.parent),$root:e=>Ze(e.root),$emit:e=>e.emit,$options:e=>ca(e),$forceUpdate:e=>e.f||(e.f=()=>{e.effect.dirty=!0,v(e.update)}),$nextTick:e=>e.n||(e.n=b.bind(e.proxy)),$watch:e=>oe.bind(e)}),Qe=(e,a)=>e!==n.MZ&&!e.__isScriptSetup&&(0,n.$3)(e,a),ea={get({_:e},a){const{ctx:r,setupState:i,data:o,props:l,accessCache:s,type:c,appContext:u}=e;let d;if("$"!==a[0]){const t=s[a];if(void 0!==t)switch(t){case 1:return i[a];case 2:return o[a];case 4:return r[a];case 3:return l[a]}else{if(Qe(i,a))return s[a]=1,i[a];if(o!==n.MZ&&(0,n.$3)(o,a))return s[a]=2,o[a];if((d=e.propsOptions[0])&&(0,n.$3)(d,a))return s[a]=3,l[a];if(r!==n.MZ&&(0,n.$3)(r,a))return s[a]=4,r[a];na&&(s[a]=0)}}const h=Xe[a];let p,m;return h?("$attrs"===a&&(0,t.u4)(e,"get",a),h(e)):(p=c.__cssModules)&&(p=p[a])?p:r!==n.MZ&&(0,n.$3)(r,a)?(s[a]=4,r[a]):(m=u.config.globalProperties,(0,n.$3)(m,a)?m[a]:void 0)},set({_:e},a,r){const{data:t,setupState:i,ctx:o}=e;return Qe(i,a)?(i[a]=r,!0):t!==n.MZ&&(0,n.$3)(t,a)?(t[a]=r,!0):!(0,n.$3)(e.props,a)&&(("$"!==a[0]||!(a.slice(1)in e))&&(o[a]=r,!0))},has({_:{data:e,setupState:a,accessCache:r,ctx:t,appContext:i,propsOptions:o}},l){let s;return!!r[l]||e!==n.MZ&&(0,n.$3)(e,l)||Qe(a,l)||(s=o[0])&&(0,n.$3)(s,l)||(0,n.$3)(t,l)||(0,n.$3)(Xe,l)||(0,n.$3)(i.config.globalProperties,l)},defineProperty(e,a,r){return null!=r.get?e._.accessCache[a]=0:(0,n.$3)(r,"value")&&this.set(e,a,r.value,null),Reflect.defineProperty(e,a,r)}};function aa(){return ra().slots}function ra(){const e=Nr();return e.setupContext||(e.setupContext=Ur(e))}function ta(e){return(0,n.cy)(e)?e.reduce(((e,a)=>(e[a]=null,e)),{}):e}let na=!0;function ia(e){const a=ca(e),r=e.proxy,i=e.ctx;na=!1,a.beforeCreate&&la(a.beforeCreate,e,"bc");const{data:o,computed:l,methods:s,watch:c,provide:u,inject:d,created:h,beforeMount:p,mounted:m,beforeUpdate:y,updated:g,activated:f,deactivated:b,beforeDestroy:k,beforeUnmount:v,destroyed:w,unmounted:C,render:S,renderTracked:A,renderTriggered:M,errorCaptured:B,serverPrefetch:T,expose:x,inheritAttrs:R,components:L,directives:P,filters:E}=a,D=null;if(d&&oa(d,i,D),s)for(const t in s){const e=s[t];(0,n.Tn)(e)&&(i[t]=e.bind(r))}if(o){0;const a=o.call(r,r);0,(0,n.Gv)(a)&&(e.data=(0,t.Kh)(a))}if(na=!0,l)for(const t in l){const e=l[t],a=(0,n.Tn)(e)?e.bind(r,r):(0,n.Tn)(e.get)?e.get.bind(r,r):n.tE;0;const o=!(0,n.Tn)(e)&&(0,n.Tn)(e.set)?e.set.bind(r):n.tE,s=Xr({get:a,set:o});Object.defineProperty(i,t,{enumerable:!0,configurable:!0,get:()=>s.value,set:e=>s.value=e})}if(c)for(const t in c)sa(c[t],i,r,t);if(u){const e=(0,n.Tn)(u)?u.call(r):u;Reflect.ownKeys(e).forEach((a=>{Sa(a,e[a])}))}function N(e,a){(0,n.cy)(a)?a.forEach((a=>e(a.bind(r)))):a&&e(a.bind(r))}if(h&&la(h,e,"c"),N(Ge,p),N(We,m),N(Fe,y),N(ze,g),N(xe,f),N(Re,b),N(je,B),N(Je,A),N(Ke,M),N(Ie,v),N(Oe,C),N(_e,T),(0,n.cy)(x))if(x.length){const a=e.exposed||(e.exposed={});x.forEach((e=>{Object.defineProperty(a,e,{get:()=>r[e],set:a=>r[e]=a})}))}else e.exposed||(e.exposed={});S&&e.render===n.tE&&(e.render=S),null!=R&&(e.inheritAttrs=R),L&&(e.components=L),P&&(e.directives=P)}function oa(e,a,r=n.tE){(0,n.cy)(e)&&(e=ma(e));for(const i in e){const r=e[i];let o;o=(0,n.Gv)(r)?"default"in r?Aa(r.from||i,r.default,!0):Aa(r.from||i):Aa(r),(0,t.i9)(o)?Object.defineProperty(a,i,{enumerable:!0,configurable:!0,get:()=>o.value,set:e=>o.value=e}):a[i]=o}}function la(e,a,r){o((0,n.cy)(e)?e.map((e=>e.bind(a.proxy))):e.bind(a.proxy),a,r)}function sa(e,a,r,t){const i=t.includes(".")?le(r,t):()=>r[t];if((0,n.Kg)(e)){const r=a[e];(0,n.Tn)(r)&&ne(i,r)}else if((0,n.Tn)(e))ne(i,e.bind(r));else if((0,n.Gv)(e))if((0,n.cy)(e))e.forEach((e=>sa(e,a,r,t)));else{const t=(0,n.Tn)(e.handler)?e.handler.bind(r):a[e.handler];(0,n.Tn)(t)&&ne(i,t,e)}else 0}function ca(e){const a=e.type,{mixins:r,extends:t}=a,{mixins:i,optionsCache:o,config:{optionMergeStrategies:l}}=e.appContext,s=o.get(a);let c;return s?c=s:i.length||r||t?(c={},i.length&&i.forEach((e=>ua(c,e,l,!0))),ua(c,a,l)):c=a,(0,n.Gv)(a)&&o.set(a,c),c}function ua(e,a,r,t=!1){const{mixins:n,extends:i}=a;i&&ua(e,i,r,!0),n&&n.forEach((a=>ua(e,a,r,!0)));for(const o in a)if(t&&"expose"===o);else{const t=da[o]||r&&r[o];e[o]=t?t(e[o],a[o]):a[o]}return e}const da={data:ha,props:fa,emits:fa,methods:ga,computed:ga,beforeCreate:ya,created:ya,beforeMount:ya,mounted:ya,beforeUpdate:ya,updated:ya,beforeDestroy:ya,beforeUnmount:ya,destroyed:ya,unmounted:ya,activated:ya,deactivated:ya,errorCaptured:ya,serverPrefetch:ya,components:ga,directives:ga,watch:ba,provide:ha,inject:pa};function ha(e,a){return a?e?function(){return(0,n.X$)((0,n.Tn)(e)?e.call(this,this):e,(0,n.Tn)(a)?a.call(this,this):a)}:a:e}function pa(e,a){return ga(ma(e),ma(a))}function ma(e){if((0,n.cy)(e)){const a={};for(let r=0;r<e.length;r++)a[e[r]]=e[r];return a}return e}function ya(e,a){return e?[...new Set([].concat(e,a))]:a}function ga(e,a){return e?(0,n.X$)(Object.create(null),e,a):a}function fa(e,a){return e?(0,n.cy)(e)&&(0,n.cy)(a)?[...new Set([...e,...a])]:(0,n.X$)(Object.create(null),ta(e),ta(null!=a?a:{})):a}function ba(e,a){if(!e)return a;if(!a)return e;const r=(0,n.X$)(Object.create(null),e);for(const t in a)r[t]=ya(e[t],a[t]);return r}function ka(){return{app:null,config:{isNativeTag:n.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let va=0;function wa(e,a){return function(r,t=null){(0,n.Tn)(r)||(r=(0,n.X$)({},r)),null==t||(0,n.Gv)(t)||(t=null);const i=ka(),o=new WeakSet;let l=!1;const s=i.app={_uid:va++,_component:r,_props:t,_container:null,_context:i,_instance:null,version:et,get config(){return i.config},set config(e){0},use(e,...a){return o.has(e)||(e&&(0,n.Tn)(e.install)?(o.add(e),e.install(s,...a)):(0,n.Tn)(e)&&(o.add(e),e(s,...a))),s},mixin(e){return i.mixins.includes(e)||i.mixins.push(e),s},component(e,a){return a?(i.components[e]=a,s):i.components[e]},directive(e,a){return a?(i.directives[e]=a,s):i.directives[e]},mount(n,o,c){if(!l){0;const u=br(r,t);return u.appContext=i,!0===c?c="svg":!1===c&&(c=void 0),o&&a?a(u,n):e(u,n,c),l=!0,s._container=n,n.__vue_app__=s,Yr(u.component)||u.component.proxy}},unmount(){l&&(e(null,s._container),delete s._container.__vue_app__)},provide(e,a){return i.provides[e]=a,s},runWithContext(e){const a=Ca;Ca=s;try{return e()}finally{Ca=a}}};return s}}let Ca=null;function Sa(e,a){if(Dr){let r=Dr.provides;const t=Dr.parent&&Dr.parent.provides;t===r&&(r=Dr.provides=Object.create(t)),r[e]=a}else 0}function Aa(e,a,r=!1){const t=Dr||E;if(t||Ca){const i=t?null==t.parent?t.vnode.appContext&&t.vnode.appContext.provides:t.parent.provides:Ca._context.provides;if(i&&e in i)return i[e];if(arguments.length>1)return r&&(0,n.Tn)(a)?a.call(t&&t.proxy):a}else 0}function Ma(e,a,r,i=!1){const o={},l={};(0,n.yQ)(l,mr,1),e.propsDefaults=Object.create(null),Ta(e,a,o,l);for(const t in e.propsOptions[0])t in o||(o[t]=void 0);r?e.props=i?o:(0,t.Gc)(o):e.type.props?e.props=o:e.props=l,e.attrs=l}function Ba(e,a,r,i){const{props:o,attrs:l,vnode:{patchFlag:s}}=e,c=(0,t.ux)(o),[u]=e.propsOptions;let d=!1;if(!(i||s>0)||16&s){let t;Ta(e,a,o,l)&&(d=!0);for(const i in c)a&&((0,n.$3)(a,i)||(t=(0,n.Tg)(i))!==i&&(0,n.$3)(a,t))||(u?!r||void 0===r[i]&&void 0===r[t]||(o[i]=xa(u,c,i,void 0,e,!0)):delete o[i]);if(l!==c)for(const e in l)a&&(0,n.$3)(a,e)||(delete l[e],d=!0)}else if(8&s){const r=e.vnode.dynamicProps;for(let t=0;t<r.length;t++){let i=r[t];if(P(e.emitsOptions,i))continue;const s=a[i];if(u)if((0,n.$3)(l,i))s!==l[i]&&(l[i]=s,d=!0);else{const a=(0,n.PT)(i);o[a]=xa(u,c,a,s,e,!1)}else s!==l[i]&&(l[i]=s,d=!0)}}d&&(0,t.hZ)(e,"set","$attrs")}function Ta(e,a,r,i){const[o,l]=e.propsOptions;let s,c=!1;if(a)for(let t in a){if((0,n.SU)(t))continue;const u=a[t];let d;o&&(0,n.$3)(o,d=(0,n.PT)(t))?l&&l.includes(d)?(s||(s={}))[d]=u:r[d]=u:P(e.emitsOptions,t)||t in i&&u===i[t]||(i[t]=u,c=!0)}if(l){const a=(0,t.ux)(r),i=s||n.MZ;for(let t=0;t<l.length;t++){const s=l[t];r[s]=xa(o,a,s,i[s],e,!(0,n.$3)(i,s))}}return c}function xa(e,a,r,t,i,o){const l=e[r];if(null!=l){const e=(0,n.$3)(l,"default");if(e&&void 0===t){const e=l.default;if(l.type!==Function&&!l.skipFactory&&(0,n.Tn)(e)){const{propsDefaults:n}=i;if(r in n)t=n[r];else{const o=Wr(i);t=n[r]=e.call(null,a),o()}}else t=e}l[0]&&(o&&!e?t=!1:!l[1]||""!==t&&t!==(0,n.Tg)(r)||(t=!0))}return t}function Ra(e,a,r=!1){const t=a.propsCache,i=t.get(e);if(i)return i;const o=e.props,l={},s=[];let c=!1;if(!(0,n.Tn)(e)){const t=e=>{c=!0;const[r,t]=Ra(e,a,!0);(0,n.X$)(l,r),t&&s.push(...t)};!r&&a.mixins.length&&a.mixins.forEach(t),e.extends&&t(e.extends),e.mixins&&e.mixins.forEach(t)}if(!o&&!c)return(0,n.Gv)(e)&&t.set(e,n.Oj),n.Oj;if((0,n.cy)(o))for(let d=0;d<o.length;d++){0;const e=(0,n.PT)(o[d]);La(e)&&(l[e]=n.MZ)}else if(o){0;for(const e in o){const a=(0,n.PT)(e);if(La(a)){const r=o[e],t=l[a]=(0,n.cy)(r)||(0,n.Tn)(r)?{type:r}:(0,n.X$)({},r);if(t){const e=Da(Boolean,t.type),r=Da(String,t.type);t[0]=e>-1,t[1]=r<0||e<r,(e>-1||(0,n.$3)(t,"default"))&&s.push(a)}}}}const u=[l,s];return(0,n.Gv)(e)&&t.set(e,u),u}function La(e){return"$"!==e[0]&&!(0,n.SU)(e)}function Pa(e){if(null===e)return"null";if("function"===typeof e)return e.name||"";if("object"===typeof e){const a=e.constructor&&e.constructor.name;return a||""}return""}function Ea(e,a){return Pa(e)===Pa(a)}function Da(e,a){return(0,n.cy)(a)?a.findIndex((a=>Ea(a,e))):(0,n.Tn)(a)&&Ea(a,e)?0:-1}const Na=e=>"_"===e[0]||"$stable"===e,Ha=e=>(0,n.cy)(e)?e.map(Mr):[Mr(e)],Ga=(e,a,r)=>{if(a._n)return a;const t=W(((...e)=>Ha(a(...e))),r);return t._c=!1,t},Wa=(e,a,r)=>{const t=e._ctx;for(const i in e){if(Na(i))continue;const r=e[i];if((0,n.Tn)(r))a[i]=Ga(i,r,t);else if(null!=r){0;const e=Ha(r);a[i]=()=>e}}},Fa=(e,a)=>{const r=Ha(a);e.slots.default=()=>r},za=(e,a)=>{if(32&e.vnode.shapeFlag){const r=a._;r?(e.slots=(0,t.ux)(a),(0,n.yQ)(a,"_",r)):Wa(a,e.slots={})}else e.slots={},a&&Fa(e,a);(0,n.yQ)(e.slots,mr,1)},Ia=(e,a,r)=>{const{vnode:t,slots:i}=e;let o=!0,l=n.MZ;if(32&t.shapeFlag){const e=a._;e?r&&1===e?o=!1:((0,n.X$)(i,a),r||1!==e||delete i._):(o=!a.$stable,Wa(a,i)),l=a}else a&&(Fa(e,a),l={default:1});if(o)for(const n in i)Na(n)||null!=l[n]||delete i[n]};function Oa(e,a,r,o,l=!1){if((0,n.cy)(e))return void e.forEach(((e,t)=>Oa(e,a&&((0,n.cy)(a)?a[t]:a),r,o,l)));if(Me(o)&&!l)return;const s=4&o.shapeFlag?Yr(o.component)||o.component.proxy:o.el,c=l?null:s,{i:u,r:d}=e;const h=a&&a.r,p=u.refs===n.MZ?u.refs={}:u.refs,m=u.setupState;if(null!=h&&h!==d&&((0,n.Kg)(h)?(p[h]=null,(0,n.$3)(m,h)&&(m[h]=null)):(0,t.i9)(h)&&(h.value=null)),(0,n.Tn)(d))i(d,u,12,[c,p]);else{const a=(0,n.Kg)(d),i=(0,t.i9)(d);if(a||i){const t=()=>{if(e.f){const r=a?(0,n.$3)(m,d)?m[d]:p[d]:d.value;l?(0,n.cy)(r)&&(0,n.TF)(r,s):(0,n.cy)(r)?r.includes(s)||r.push(s):a?(p[d]=[s],(0,n.$3)(m,d)&&(m[d]=p[d])):(d.value=[s],e.k&&(p[e.k]=d.value))}else a?(p[d]=c,(0,n.$3)(m,d)&&(m[d]=c)):i&&(d.value=c,e.k&&(p[e.k]=c))};c?(t.id=-1,Ka(t,r)):t()}else 0}}function _a(){"boolean"!==typeof __VUE_PROD_HYDRATION_MISMATCH_DETAILS__&&((0,n.We)().__VUE_PROD_HYDRATION_MISMATCH_DETAILS__=!1)}const Ka=Q;function Ja(e){return ja(e)}function ja(e,a){_a();const r=(0,n.We)();r.__VUE__=!0;const{insert:i,remove:o,patchProp:l,createElement:s,createText:c,createComment:u,setText:d,setElementText:h,parentNode:p,nextSibling:m,setScopeId:y=n.tE,insertStaticContent:g}=e,f=(e,a,r,t=null,n=null,i=null,o=void 0,l=null,s=!!a.dynamicChildren)=>{if(e===a)return;e&&!pr(e,a)&&(t=X(e),V(e,n,i,!0),e=null),-2===a.patchFlag&&(s=!1,a.dynamicChildren=null);const{type:c,ref:u,shapeFlag:d}=a;switch(c){case er:b(e,a,r,t);break;case ar:k(e,a,r,t);break;case rr:null==e&&w(a,r,t,o);break;case Qa:N(e,a,r,t,n,i,o,l,s);break;default:1&d?T(e,a,r,t,n,i,o,l,s):6&d?H(e,a,r,t,n,i,o,l,s):(64&d||128&d)&&c.process(e,a,r,t,n,i,o,l,s,ae)}null!=u&&n&&Oa(u,e&&e.ref,i,a||e,!a)},b=(e,a,r,t)=>{if(null==e)i(a.el=c(a.children),r,t);else{const r=a.el=e.el;a.children!==e.children&&d(r,a.children)}},k=(e,a,r,t)=>{null==e?i(a.el=u(a.children||""),r,t):a.el=e.el},w=(e,a,r,t)=>{[e.el,e.anchor]=g(e.children,a,r,t,e.el,e.anchor)},S=({el:e,anchor:a},r,t)=>{let n;while(e&&e!==a)n=m(e),i(e,r,t),e=n;i(a,r,t)},B=({el:e,anchor:a})=>{let r;while(e&&e!==a)r=m(e),o(e),e=r;o(a)},T=(e,a,r,t,n,i,o,l,s)=>{"svg"===a.type?o="svg":"math"===a.type&&(o="mathml"),null==e?x(a,r,t,n,i,o,l,s):P(e,a,n,i,o,l,s)},x=(e,a,r,t,o,c,u,d)=>{let p,m;const{props:y,shapeFlag:g,transition:f,dirs:b}=e;if(p=e.el=s(e.type,c,y&&y.is,y),8&g?h(p,e.children):16&g&&L(e.children,p,null,t,o,$a(e,c),u,d),b&&ue(e,null,t,"created"),R(p,e,e.scopeId,u,t),y){for(const a in y)"value"===a||(0,n.SU)(a)||l(p,a,null,y[a],c,e.children,t,o,Z);"value"in y&&l(p,"value",null,y.value,c),(m=y.onVnodeBeforeMount)&&Rr(m,t,e)}b&&ue(e,null,t,"beforeMount");const k=Ua(o,f);k&&f.beforeEnter(p),i(p,a,r),((m=y&&y.onVnodeMounted)||k||b)&&Ka((()=>{m&&Rr(m,t,e),k&&f.enter(p),b&&ue(e,null,t,"mounted")}),o)},R=(e,a,r,t,n)=>{if(r&&y(e,r),t)for(let i=0;i<t.length;i++)y(e,t[i]);if(n){let r=n.subTree;if(a===r){const a=n.vnode;R(e,a,a.scopeId,a.slotScopeIds,n.parent)}}},L=(e,a,r,t,n,i,o,l,s=0)=>{for(let c=s;c<e.length;c++){const s=e[c]=l?Br(e[c]):Mr(e[c]);f(null,s,a,r,t,n,i,o,l)}},P=(e,a,r,t,i,o,s)=>{const c=a.el=e.el;let{patchFlag:u,dynamicChildren:d,dirs:p}=a;u|=16&e.patchFlag;const m=e.props||n.MZ,y=a.props||n.MZ;let g;if(r&&Va(r,!1),(g=y.onVnodeBeforeUpdate)&&Rr(g,r,a,e),p&&ue(a,e,r,"beforeUpdate"),r&&Va(r,!0),d?E(e.dynamicChildren,d,c,r,t,$a(a,i),o):s||_(e,a,c,null,r,t,$a(a,i),o,!1),u>0){if(16&u)D(c,a,m,y,r,t,i);else if(2&u&&m.class!==y.class&&l(c,"class",null,y.class,i),4&u&&l(c,"style",m.style,y.style,i),8&u){const n=a.dynamicProps;for(let a=0;a<n.length;a++){const o=n[a],s=m[o],u=y[o];u===s&&"value"!==o||l(c,o,s,u,i,e.children,r,t,Z)}}1&u&&e.children!==a.children&&h(c,a.children)}else s||null!=d||D(c,a,m,y,r,t,i);((g=y.onVnodeUpdated)||p)&&Ka((()=>{g&&Rr(g,r,a,e),p&&ue(a,e,r,"updated")}),t)},E=(e,a,r,t,n,i,o)=>{for(let l=0;l<a.length;l++){const s=e[l],c=a[l],u=s.el&&(s.type===Qa||!pr(s,c)||70&s.shapeFlag)?p(s.el):r;f(s,c,u,null,t,n,i,o,!0)}},D=(e,a,r,t,i,o,s)=>{if(r!==t){if(r!==n.MZ)for(const c in r)(0,n.SU)(c)||c in t||l(e,c,r[c],null,s,a.children,i,o,Z);for(const c in t){if((0,n.SU)(c))continue;const u=t[c],d=r[c];u!==d&&"value"!==c&&l(e,c,d,u,s,a.children,i,o,Z)}"value"in t&&l(e,"value",r.value,t.value,s)}},N=(e,a,r,t,n,o,l,s,u)=>{const d=a.el=e?e.el:c(""),h=a.anchor=e?e.anchor:c("");let{patchFlag:p,dynamicChildren:m,slotScopeIds:y}=a;y&&(s=s?s.concat(y):y),null==e?(i(d,r,t),i(h,r,t),L(a.children||[],r,h,n,o,l,s,u)):p>0&&64&p&&m&&e.dynamicChildren?(E(e.dynamicChildren,m,r,n,o,l,s),(null!=a.key||n&&a===n.subTree)&&Ya(e,a,!0)):_(e,a,r,h,n,o,l,s,u)},H=(e,a,r,t,n,i,o,l,s)=>{a.slotScopeIds=l,null==e?512&a.shapeFlag?n.ctx.activate(a,r,t,o,s):G(a,r,t,n,i,o,s):W(e,a,s)},G=(e,a,r,t,n,i,o)=>{const l=e.component=Er(e,t,n);if(Be(e)&&(l.ctx.renderer=ae),Kr(l),l.asyncDep){if(n&&n.registerDep(l,z),!e.el){const e=l.subTree=br(ar);k(null,e,a,r)}}else z(l,e,a,r,n,i,o)},W=(e,a,r)=>{const t=a.component=e.component;if(O(e,a,r)){if(t.asyncDep&&!t.asyncResolved)return void I(t,a,r);t.next=a,C(t.update),t.effect.dirty=!0,t.update()}else a.el=e.el,t.vnode=a},z=(e,a,r,i,o,l,s)=>{const c=()=>{if(e.isMounted){let{next:a,bu:r,u:t,parent:i,vnode:u}=e;{const r=Za(e);if(r)return a&&(a.el=u.el,I(e,a,s)),void r.asyncDep.then((()=>{e.isUnmounted||c()}))}let d,h=a;0,Va(e,!1),a?(a.el=u.el,I(e,a,s)):a=u,r&&(0,n.DY)(r),(d=a.props&&a.props.onVnodeBeforeUpdate)&&Rr(d,i,a,u),Va(e,!0);const m=F(e);0;const y=e.subTree;e.subTree=m,f(y,m,p(y.el),X(y),e,o,l),a.el=m.el,null===h&&K(e,m.el),t&&Ka(t,o),(d=a.props&&a.props.onVnodeUpdated)&&Ka((()=>Rr(d,i,a,u)),o)}else{let t;const{el:s,props:c}=a,{bm:u,m:d,parent:h}=e,p=Me(a);if(Va(e,!1),u&&(0,n.DY)(u),!p&&(t=c&&c.onVnodeBeforeMount)&&Rr(t,h,a),Va(e,!0),s&&te){const r=()=>{e.subTree=F(e),te(s,e.subTree,e,o,null)};p?a.type.__asyncLoader().then((()=>!e.isUnmounted&&r())):r()}else{0;const t=e.subTree=F(e);0,f(null,t,r,i,e,o,l),a.el=t.el}if(d&&Ka(d,o),!p&&(t=c&&c.onVnodeMounted)){const e=a;Ka((()=>Rr(t,h,e)),o)}(256&a.shapeFlag||h&&Me(h.vnode)&&256&h.vnode.shapeFlag)&&e.a&&Ka(e.a,o),e.isMounted=!0,a=r=i=null}},u=e.effect=new t.X2(c,n.tE,(()=>v(d)),e.scope),d=e.update=()=>{u.dirty&&u.run()};d.id=e.uid,Va(e,!0),d()},I=(e,a,r)=>{a.component=e;const n=e.vnode.props;e.vnode=a,e.next=null,Ba(e,a.props,n,r),Ia(e,a.children,r),(0,t.C4)(),A(e),(0,t.bl)()},_=(e,a,r,t,n,i,o,l,s=!1)=>{const c=e&&e.children,u=e?e.shapeFlag:0,d=a.children,{patchFlag:p,shapeFlag:m}=a;if(p>0){if(128&p)return void j(c,d,r,t,n,i,o,l,s);if(256&p)return void J(c,d,r,t,n,i,o,l,s)}8&m?(16&u&&Z(c,n,i),d!==c&&h(r,d)):16&u?16&m?j(c,d,r,t,n,i,o,l,s):Z(c,n,i,!0):(8&u&&h(r,""),16&m&&L(d,r,t,n,i,o,l,s))},J=(e,a,r,t,i,o,l,s,c)=>{e=e||n.Oj,a=a||n.Oj;const u=e.length,d=a.length,h=Math.min(u,d);let p;for(p=0;p<h;p++){const t=a[p]=c?Br(a[p]):Mr(a[p]);f(e[p],t,r,null,i,o,l,s,c)}u>d?Z(e,i,o,!0,!1,h):L(a,r,t,i,o,l,s,c,h)},j=(e,a,r,t,i,o,l,s,c)=>{let u=0;const d=a.length;let h=e.length-1,p=d-1;while(u<=h&&u<=p){const t=e[u],n=a[u]=c?Br(a[u]):Mr(a[u]);if(!pr(t,n))break;f(t,n,r,null,i,o,l,s,c),u++}while(u<=h&&u<=p){const t=e[h],n=a[p]=c?Br(a[p]):Mr(a[p]);if(!pr(t,n))break;f(t,n,r,null,i,o,l,s,c),h--,p--}if(u>h){if(u<=p){const e=p+1,n=e<d?a[e].el:t;while(u<=p)f(null,a[u]=c?Br(a[u]):Mr(a[u]),r,n,i,o,l,s,c),u++}}else if(u>p)while(u<=h)V(e[u],i,o,!0),u++;else{const m=u,y=u,g=new Map;for(u=y;u<=p;u++){const e=a[u]=c?Br(a[u]):Mr(a[u]);null!=e.key&&g.set(e.key,u)}let b,k=0;const v=p-y+1;let w=!1,C=0;const S=new Array(v);for(u=0;u<v;u++)S[u]=0;for(u=m;u<=h;u++){const t=e[u];if(k>=v){V(t,i,o,!0);continue}let n;if(null!=t.key)n=g.get(t.key);else for(b=y;b<=p;b++)if(0===S[b-y]&&pr(t,a[b])){n=b;break}void 0===n?V(t,i,o,!0):(S[n-y]=u+1,n>=C?C=n:w=!0,f(t,a[n],r,null,i,o,l,s,c),k++)}const A=w?qa(S):n.Oj;for(b=A.length-1,u=v-1;u>=0;u--){const e=y+u,n=a[e],h=e+1<d?a[e+1].el:t;0===S[u]?f(null,n,r,h,i,o,l,s,c):w&&(b<0||u!==A[b]?$(n,r,h,2):b--)}}},$=(e,a,r,t,n=null)=>{const{el:o,type:l,transition:s,children:c,shapeFlag:u}=e;if(6&u)return void $(e.component.subTree,a,r,t);if(128&u)return void e.suspense.move(a,r,t);if(64&u)return void l.move(e,a,r,ae);if(l===Qa){i(o,a,r);for(let e=0;e<c.length;e++)$(c[e],a,r,t);return void i(e.anchor,a,r)}if(l===rr)return void S(e,a,r);const d=2!==t&&1&u&&s;if(d)if(0===t)s.beforeEnter(o),i(o,a,r),Ka((()=>s.enter(o)),n);else{const{leave:e,delayLeave:t,afterLeave:n}=s,l=()=>i(o,a,r),c=()=>{e(o,(()=>{l(),n&&n()}))};t?t(o,l,c):c()}else i(o,a,r)},V=(e,a,r,t=!1,n=!1)=>{const{type:i,props:o,ref:l,children:s,dynamicChildren:c,shapeFlag:u,patchFlag:d,dirs:h}=e;if(null!=l&&Oa(l,null,r,e,!0),256&u)return void a.ctx.deactivate(e);const p=1&u&&h,m=!Me(e);let y;if(m&&(y=o&&o.onVnodeBeforeUnmount)&&Rr(y,a,e),6&u)q(e.component,r,t);else{if(128&u)return void e.suspense.unmount(r,t);p&&ue(e,null,a,"beforeUnmount"),64&u?e.type.remove(e,a,r,n,ae,t):c&&(i!==Qa||d>0&&64&d)?Z(c,a,r,!1,!0):(i===Qa&&384&d||!n&&16&u)&&Z(s,a,r),t&&U(e)}(m&&(y=o&&o.onVnodeUnmounted)||p)&&Ka((()=>{y&&Rr(y,a,e),p&&ue(e,null,a,"unmounted")}),r)},U=e=>{const{type:a,el:r,anchor:t,transition:n}=e;if(a===Qa)return void Y(r,t);if(a===rr)return void B(e);const i=()=>{o(r),n&&!n.persisted&&n.afterLeave&&n.afterLeave()};if(1&e.shapeFlag&&n&&!n.persisted){const{leave:a,delayLeave:t}=n,o=()=>a(r,i);t?t(e.el,i,o):o()}else i()},Y=(e,a)=>{let r;while(e!==a)r=m(e),o(e),e=r;o(a)},q=(e,a,r)=>{const{bum:t,scope:i,update:o,subTree:l,um:s}=e;t&&(0,n.DY)(t),i.stop(),o&&(o.active=!1,V(l,e,a,r)),s&&Ka(s,a),Ka((()=>{e.isUnmounted=!0}),a),a&&a.pendingBranch&&!a.isUnmounted&&e.asyncDep&&!e.asyncResolved&&e.suspenseId===a.pendingId&&(a.deps--,0===a.deps&&a.resolve())},Z=(e,a,r,t=!1,n=!1,i=0)=>{for(let o=i;o<e.length;o++)V(e[o],a,r,t,n)},X=e=>6&e.shapeFlag?X(e.component.subTree):128&e.shapeFlag?e.suspense.next():m(e.anchor||e.el);let Q=!1;const ee=(e,a,r)=>{null==e?a._vnode&&V(a._vnode,null,null,!0):f(a._vnode||null,e,a,null,null,null,r),Q||(Q=!0,A(),M(),Q=!1),a._vnode=e},ae={p:f,um:V,m:$,r:U,mt:G,mc:L,pc:_,pbc:E,n:X,o:e};let re,te;return a&&([re,te]=a(ae)),{render:ee,hydrate:re,createApp:wa(ee,re)}}function $a({type:e,props:a},r){return"svg"===r&&"foreignObject"===e||"mathml"===r&&"annotation-xml"===e&&a&&a.encoding&&a.encoding.includes("html")?void 0:r}function Va({effect:e,update:a},r){e.allowRecurse=a.allowRecurse=r}function Ua(e,a){return(!e||e&&!e.pendingBranch)&&a&&!a.persisted}function Ya(e,a,r=!1){const t=e.children,i=a.children;if((0,n.cy)(t)&&(0,n.cy)(i))for(let n=0;n<t.length;n++){const e=t[n];let a=i[n];1&a.shapeFlag&&!a.dynamicChildren&&((a.patchFlag<=0||32===a.patchFlag)&&(a=i[n]=Br(i[n]),a.el=e.el),r||Ya(e,a)),a.type===er&&(a.el=e.el)}}function qa(e){const a=e.slice(),r=[0];let t,n,i,o,l;const s=e.length;for(t=0;t<s;t++){const s=e[t];if(0!==s){if(n=r[r.length-1],e[n]<s){a[t]=n,r.push(t);continue}i=0,o=r.length-1;while(i<o)l=i+o>>1,e[r[l]]<s?i=l+1:o=l;s<e[r[i]]&&(i>0&&(a[t]=r[i-1]),r[i]=t)}}i=r.length,o=r[i-1];while(i-- >0)r[i]=o,o=a[o];return r}function Za(e){const a=e.subTree.component;if(a)return a.asyncDep&&!a.asyncResolved?a:Za(a)}const Xa=e=>e.__isTeleport;const Qa=Symbol.for("v-fgt"),er=Symbol.for("v-txt"),ar=Symbol.for("v-cmt"),rr=Symbol.for("v-stc"),tr=[];let nr=null;function ir(e=!1){tr.push(nr=e?null:[])}function or(){tr.pop(),nr=tr[tr.length-1]||null}let lr=1;function sr(e){lr+=e}function cr(e){return e.dynamicChildren=lr>0?nr||n.Oj:null,or(),lr>0&&nr&&nr.push(e),e}function ur(e,a,r,t,n,i){return cr(fr(e,a,r,t,n,i,!0))}function dr(e,a,r,t,n){return cr(br(e,a,r,t,n,!0))}function hr(e){return!!e&&!0===e.__v_isVNode}function pr(e,a){return e.type===a.type&&e.key===a.key}const mr="__vInternal",yr=({key:e})=>null!=e?e:null,gr=({ref:e,ref_key:a,ref_for:r})=>("number"===typeof e&&(e=""+e),null!=e?(0,n.Kg)(e)||(0,t.i9)(e)||(0,n.Tn)(e)?{i:E,r:e,k:a,f:!!r}:e:null);function fr(e,a=null,r=null,t=0,i=null,o=(e===Qa?0:1),l=!1,s=!1){const c={__v_isVNode:!0,__v_skip:!0,type:e,props:a,key:a&&yr(a),ref:a&&gr(a),scopeId:D,slotScopeIds:null,children:r,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:t,dynamicProps:i,dynamicChildren:null,appContext:null,ctx:E};return s?(Tr(c,r),128&o&&e.normalize(c)):r&&(c.shapeFlag|=(0,n.Kg)(r)?8:16),lr>0&&!l&&nr&&(c.patchFlag>0||6&o)&&32!==c.patchFlag&&nr.push(c),c}const br=kr;function kr(e,a=null,r=null,i=0,o=null,l=!1){if(e&&e!==V||(e=ar),hr(e)){const t=wr(e,a,!0);return r&&Tr(t,r),lr>0&&!l&&nr&&(6&t.shapeFlag?nr[nr.indexOf(e)]=t:nr.push(t)),t.patchFlag|=-2,t}if(Zr(e)&&(e=e.__vccOpts),a){a=vr(a);let{class:e,style:r}=a;e&&!(0,n.Kg)(e)&&(a.class=(0,n.C4)(e)),(0,n.Gv)(r)&&((0,t.ju)(r)&&!(0,n.cy)(r)&&(r=(0,n.X$)({},r)),a.style=(0,n.Tr)(r))}const s=(0,n.Kg)(e)?1:X(e)?128:Xa(e)?64:(0,n.Gv)(e)?4:(0,n.Tn)(e)?2:0;return fr(e,a,r,i,o,s,l,!0)}function vr(e){return e?(0,t.ju)(e)||mr in e?(0,n.X$)({},e):e:null}function wr(e,a,r=!1){const{props:t,ref:i,patchFlag:o,children:l}=e,s=a?xr(t||{},a):t,c={__v_isVNode:!0,__v_skip:!0,type:e.type,props:s,key:s&&yr(s),ref:a&&a.ref?r&&i?(0,n.cy)(i)?i.concat(gr(a)):[i,gr(a)]:gr(a):i,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:l,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:a&&e.type!==Qa?-1===o?16:16|o:o,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&wr(e.ssContent),ssFallback:e.ssFallback&&wr(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce};return c}function Cr(e=" ",a=0){return br(er,null,e,a)}function Sr(e,a){const r=br(rr,null,e);return r.staticCount=a,r}function Ar(e="",a=!1){return a?(ir(),dr(ar,null,e)):br(ar,null,e)}function Mr(e){return null==e||"boolean"===typeof e?br(ar):(0,n.cy)(e)?br(Qa,null,e.slice()):"object"===typeof e?Br(e):br(er,null,String(e))}function Br(e){return null===e.el&&-1!==e.patchFlag||e.memo?e:wr(e)}function Tr(e,a){let r=0;const{shapeFlag:t}=e;if(null==a)a=null;else if((0,n.cy)(a))r=16;else if("object"===typeof a){if(65&t){const r=a.default;return void(r&&(r._c&&(r._d=!1),Tr(e,r()),r._c&&(r._d=!0)))}{r=32;const t=a._;t||mr in a?3===t&&E&&(1===E.slots._?a._=1:(a._=2,e.patchFlag|=1024)):a._ctx=E}}else(0,n.Tn)(a)?(a={default:a,_ctx:E},r=32):(a=String(a),64&t?(r=16,a=[Cr(a)]):r=8);e.children=a,e.shapeFlag|=r}function xr(...e){const a={};for(let r=0;r<e.length;r++){const t=e[r];for(const e in t)if("class"===e)a.class!==t.class&&(a.class=(0,n.C4)([a.class,t.class]));else if("style"===e)a.style=(0,n.Tr)([a.style,t.style]);else if((0,n.Mp)(e)){const r=a[e],i=t[e];!i||r===i||(0,n.cy)(r)&&r.includes(i)||(a[e]=r?[].concat(r,i):i)}else""!==e&&(a[e]=t[e])}return a}function Rr(e,a,r,t=null){o(e,a,7,[r,t])}const Lr=ka();let Pr=0;function Er(e,a,r){const i=e.type,o=(a?a.appContext:e.appContext)||Lr,l={uid:Pr++,vnode:e,type:i,parent:a,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new t.yC(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:a?a.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Ra(i,o),emitsOptions:L(i,o),emit:null,emitted:null,propsDefaults:n.MZ,inheritAttrs:i.inheritAttrs,ctx:n.MZ,data:n.MZ,props:n.MZ,attrs:n.MZ,slots:n.MZ,refs:n.MZ,setupState:n.MZ,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:r,suspenseId:r?r.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return l.ctx={_:l},l.root=a?a.root:l,l.emit=R.bind(null,l),e.ce&&e.ce(l),l}let Dr=null;const Nr=()=>Dr||E;let Hr,Gr;{const e=(0,n.We)(),a=(a,r)=>{let t;return(t=e[a])||(t=e[a]=[]),t.push(r),e=>{t.length>1?t.forEach((a=>a(e))):t[0](e)}};Hr=a("__VUE_INSTANCE_SETTERS__",(e=>Dr=e)),Gr=a("__VUE_SSR_SETTERS__",(e=>_r=e))}const Wr=e=>{const a=Dr;return Hr(e),e.scope.on(),()=>{e.scope.off(),Hr(a)}},Fr=()=>{Dr&&Dr.scope.off(),Hr(null)};function zr(e){return 4&e.vnode.shapeFlag}let Ir,Or,_r=!1;function Kr(e,a=!1){a&&Gr(a);const{props:r,children:t}=e.vnode,n=zr(e);Ma(e,r,n,a),za(e,t);const i=n?Jr(e,a):void 0;return a&&Gr(!1),i}function Jr(e,a){const r=e.type;e.accessCache=Object.create(null),e.proxy=(0,t.IG)(new Proxy(e.ctx,ea));const{setup:o}=r;if(o){const r=e.setupContext=o.length>1?Ur(e):null,s=Wr(e);(0,t.C4)();const c=i(o,e,0,[e.props,r]);if((0,t.bl)(),s(),(0,n.yL)(c)){if(c.then(Fr,Fr),a)return c.then((r=>{jr(e,r,a)})).catch((a=>{l(a,e,0)}));e.asyncDep=c}else jr(e,c,a)}else $r(e,a)}function jr(e,a,r){(0,n.Tn)(a)?e.type.__ssrInlineRender?e.ssrRender=a:e.render=a:(0,n.Gv)(a)&&(e.setupState=(0,t.Pr)(a)),$r(e,r)}function $r(e,a,r){const i=e.type;if(!e.render){if(!a&&Ir&&!i.render){const a=i.template||ca(e).template;if(a){0;const{isCustomElement:r,compilerOptions:t}=e.appContext.config,{delimiters:o,compilerOptions:l}=i,s=(0,n.X$)((0,n.X$)({isCustomElement:r,delimiters:o},t),l);i.render=Ir(a,s)}}e.render=i.render||n.tE,Or&&Or(e)}{const a=Wr(e);(0,t.C4)();try{ia(e)}finally{(0,t.bl)(),a()}}}function Vr(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(a,r){return(0,t.u4)(e,"get","$attrs"),a[r]}}))}function Ur(e){const a=a=>{e.exposed=a||{}};return{get attrs(){return Vr(e)},slots:e.slots,emit:e.emit,expose:a}}function Yr(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy((0,t.Pr)((0,t.IG)(e.exposed)),{get(a,r){return r in a?a[r]:r in Xe?Xe[r](e):void 0},has(e,a){return a in e||a in Xe}}))}function qr(e,a=!0){return(0,n.Tn)(e)?e.displayName||e.name:e.name||a&&e.__name}function Zr(e){return(0,n.Tn)(e)&&"__vccOpts"in e}const Xr=(e,a)=>{const r=(0,t.EW)(e,a,_r);return r};function Qr(e,a,r){const t=arguments.length;return 2===t?(0,n.Gv)(a)&&!(0,n.cy)(a)?hr(a)?br(e,null,[a]):br(e,a):br(e,null,a):(t>3?r=Array.prototype.slice.call(arguments,2):3===t&&hr(r)&&(r=[r]),br(e,a,r))}const et="3.4.21"},5130:function(e,a,r){r.d(a,{$9:function(){return W},D$:function(){return xe},Ef:function(){return Ee},F:function(){return ye},aG:function(){return N},eB:function(){return m},lH:function(){return Ce}});r(4114);var t=r(6768),n=r(4232),i=r(144);
/**
* @vue/runtime-dom v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
const o="http://www.w3.org/2000/svg",l="http://www.w3.org/1998/Math/MathML",s="undefined"!==typeof document?document:null,c=s&&s.createElement("template"),u={insert:(e,a,r)=>{a.insertBefore(e,r||null)},remove:e=>{const a=e.parentNode;a&&a.removeChild(e)},createElement:(e,a,r,t)=>{const n="svg"===a?s.createElementNS(o,e):"mathml"===a?s.createElementNS(l,e):s.createElement(e,r?{is:r}:void 0);return"select"===e&&t&&null!=t.multiple&&n.setAttribute("multiple",t.multiple),n},createText:e=>s.createTextNode(e),createComment:e=>s.createComment(e),setText:(e,a)=>{e.nodeValue=a},setElementText:(e,a)=>{e.textContent=a},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>s.querySelector(e),setScopeId(e,a){e.setAttribute(a,"")},insertStaticContent(e,a,r,t,n,i){const o=r?r.previousSibling:a.lastChild;if(n&&(n===i||n.nextSibling)){while(1)if(a.insertBefore(n.cloneNode(!0),r),n===i||!(n=n.nextSibling))break}else{c.innerHTML="svg"===t?`<svg>${e}</svg>`:"mathml"===t?`<math>${e}</math>`:e;const n=c.content;if("svg"===t||"mathml"===t){const e=n.firstChild;while(e.firstChild)n.appendChild(e.firstChild);n.removeChild(e)}a.insertBefore(n,r)}return[o?o.nextSibling:a.firstChild,r?r.previousSibling:a.lastChild]}},d="transition",h="animation",p=Symbol("_vtc"),m=(e,{slots:a})=>(0,t.h)(t.pR,k(e),a);m.displayName="Transition";const y={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},g=m.props=(0,n.X$)({},t.QP,y),f=(e,a=[])=>{(0,n.cy)(e)?e.forEach((e=>e(...a))):e&&e(...a)},b=e=>!!e&&((0,n.cy)(e)?e.some((e=>e.length>1)):e.length>1);function k(e){const a={};for(const n in e)n in y||(a[n]=e[n]);if(!1===e.css)return a;const{name:r="v",type:t,duration:i,enterFromClass:o=`${r}-enter-from`,enterActiveClass:l=`${r}-enter-active`,enterToClass:s=`${r}-enter-to`,appearFromClass:c=o,appearActiveClass:u=l,appearToClass:d=s,leaveFromClass:h=`${r}-leave-from`,leaveActiveClass:p=`${r}-leave-active`,leaveToClass:m=`${r}-leave-to`}=e,g=v(i),k=g&&g[0],w=g&&g[1],{onBeforeEnter:M,onEnter:T,onEnterCancelled:x,onLeave:R,onLeaveCancelled:P,onBeforeAppear:E=M,onAppear:D=T,onAppearCancelled:N=x}=a,H=(e,a,r)=>{S(e,a?d:s),S(e,a?u:l),r&&r()},G=(e,a)=>{e._isLeaving=!1,S(e,h),S(e,m),S(e,p),a&&a()},W=e=>(a,r)=>{const n=e?D:T,i=()=>H(a,e,r);f(n,[a,i]),A((()=>{S(a,e?c:o),C(a,e?d:s),b(n)||B(a,t,k,i)}))};return(0,n.X$)(a,{onBeforeEnter(e){f(M,[e]),C(e,o),C(e,l)},onBeforeAppear(e){f(E,[e]),C(e,c),C(e,u)},onEnter:W(!1),onAppear:W(!0),onLeave(e,a){e._isLeaving=!0;const r=()=>G(e,a);C(e,h),L(),C(e,p),A((()=>{e._isLeaving&&(S(e,h),C(e,m),b(R)||B(e,t,w,r))})),f(R,[e,r])},onEnterCancelled(e){H(e,!1),f(x,[e])},onAppearCancelled(e){H(e,!0),f(N,[e])},onLeaveCancelled(e){G(e),f(P,[e])}})}function v(e){if(null==e)return null;if((0,n.Gv)(e))return[w(e.enter),w(e.leave)];{const a=w(e);return[a,a]}}function w(e){const a=(0,n.Ro)(e);return a}function C(e,a){a.split(/\s+/).forEach((a=>a&&e.classList.add(a))),(e[p]||(e[p]=new Set)).add(a)}function S(e,a){a.split(/\s+/).forEach((a=>a&&e.classList.remove(a)));const r=e[p];r&&(r.delete(a),r.size||(e[p]=void 0))}function A(e){requestAnimationFrame((()=>{requestAnimationFrame(e)}))}let M=0;function B(e,a,r,t){const n=e._endId=++M,i=()=>{n===e._endId&&t()};if(r)return setTimeout(i,r);const{type:o,timeout:l,propCount:s}=T(e,a);if(!o)return t();const c=o+"end";let u=0;const d=()=>{e.removeEventListener(c,h),i()},h=a=>{a.target===e&&++u>=s&&d()};setTimeout((()=>{u<s&&d()}),l+1),e.addEventListener(c,h)}function T(e,a){const r=window.getComputedStyle(e),t=e=>(r[e]||"").split(", "),n=t(`${d}Delay`),i=t(`${d}Duration`),o=x(n,i),l=t(`${h}Delay`),s=t(`${h}Duration`),c=x(l,s);let u=null,p=0,m=0;a===d?o>0&&(u=d,p=o,m=i.length):a===h?c>0&&(u=h,p=c,m=s.length):(p=Math.max(o,c),u=p>0?o>c?d:h:null,m=u?u===d?i.length:s.length:0);const y=u===d&&/\b(transform|all)(,|$)/.test(t(`${d}Property`).toString());return{type:u,timeout:p,propCount:m,hasTransform:y}}function x(e,a){while(e.length<a.length)e=e.concat(e);return Math.max(...a.map(((a,r)=>R(a)+R(e[r]))))}function R(e){return"auto"===e?0:1e3*Number(e.slice(0,-1).replace(",","."))}function L(){return document.body.offsetHeight}function P(e,a,r){const t=e[p];t&&(a=(a?[a,...t]:[...t]).join(" ")),null==a?e.removeAttribute("class"):r?e.setAttribute("class",a):e.className=a}const E=Symbol("_vod"),D=Symbol("_vsh"),N={beforeMount(e,{value:a},{transition:r}){e[E]="none"===e.style.display?"":e.style.display,r&&a?r.beforeEnter(e):H(e,a)},mounted(e,{value:a},{transition:r}){r&&a&&r.enter(e)},updated(e,{value:a,oldValue:r},{transition:t}){!a!==!r&&(t?a?(t.beforeEnter(e),H(e,!0),t.enter(e)):t.leave(e,(()=>{H(e,!1)})):H(e,a))},beforeUnmount(e,{value:a}){H(e,a)}};function H(e,a){e.style.display=a?e[E]:"none",e[D]=!a}const G=Symbol("");function W(e){const a=(0,t.nI)();if(!a)return;const r=a.ut=(r=e(a.proxy))=>{Array.from(document.querySelectorAll(`[data-v-owner="${a.uid}"]`)).forEach((e=>z(e,r)))};const n=()=>{const t=e(a.proxy);F(a.subTree,t),r(t)};(0,t.p9)(n),(0,t.sV)((()=>{const e=new MutationObserver(n);e.observe(a.subTree.el.parentNode,{childList:!0}),(0,t.hi)((()=>e.disconnect()))}))}function F(e,a){if(128&e.shapeFlag){const r=e.suspense;e=r.activeBranch,r.pendingBranch&&!r.isHydrating&&r.effects.push((()=>{F(r.activeBranch,a)}))}while(e.component)e=e.component.subTree;if(1&e.shapeFlag&&e.el)z(e.el,a);else if(e.type===t.FK)e.children.forEach((e=>F(e,a)));else if(e.type===t.jC){let{el:r,anchor:t}=e;while(r){if(z(r,a),r===t)break;r=r.nextSibling}}}function z(e,a){if(1===e.nodeType){const r=e.style;let t="";for(const e in a)r.setProperty(`--${e}`,a[e]),t+=`--${e}: ${a[e]};`;r[G]=t}}const I=/(^|;)\s*display\s*:/;function O(e,a,r){const t=e.style,i=(0,n.Kg)(r);let o=!1;if(r&&!i){if(a)if((0,n.Kg)(a))for(const e of a.split(";")){const a=e.slice(0,e.indexOf(":")).trim();null==r[a]&&K(t,a,"")}else for(const e in a)null==r[e]&&K(t,e,"");for(const e in r)"display"===e&&(o=!0),K(t,e,r[e])}else if(i){if(a!==r){const e=t[G];e&&(r+=";"+e),t.cssText=r,o=I.test(r)}}else a&&e.removeAttribute("style");E in e&&(e[E]=o?t.display:"",e[D]&&(t.display="none"))}const _=/\s*!important$/;function K(e,a,r){if((0,n.cy)(r))r.forEach((r=>K(e,a,r)));else if(null==r&&(r=""),a.startsWith("--"))e.setProperty(a,r);else{const t=$(e,a);_.test(r)?e.setProperty((0,n.Tg)(t),r.replace(_,""),"important"):e[t]=r}}const J=["Webkit","Moz","ms"],j={};function $(e,a){const r=j[a];if(r)return r;let t=(0,n.PT)(a);if("filter"!==t&&t in e)return j[a]=t;t=(0,n.ZH)(t);for(let n=0;n<J.length;n++){const r=J[n]+t;if(r in e)return j[a]=r}return a}const V="http://www.w3.org/1999/xlink";function U(e,a,r,t,i){if(t&&a.startsWith("xlink:"))null==r?e.removeAttributeNS(V,a.slice(6,a.length)):e.setAttributeNS(V,a,r);else{const t=(0,n.J$)(a);null==r||t&&!(0,n.Y2)(r)?e.removeAttribute(a):e.setAttribute(a,t?"":r)}}function Y(e,a,r,t,i,o,l){if("innerHTML"===a||"textContent"===a)return t&&l(t,i,o),void(e[a]=null==r?"":r);const s=e.tagName;if("value"===a&&"PROGRESS"!==s&&!s.includes("-")){const t="OPTION"===s?e.getAttribute("value")||"":e.value,n=null==r?"":r;return t===n&&"_value"in e||(e.value=n),null==r&&e.removeAttribute(a),void(e._value=r)}let c=!1;if(""===r||null==r){const t=typeof e[a];"boolean"===t?r=(0,n.Y2)(r):null==r&&"string"===t?(r="",c=!0):"number"===t&&(r=0,c=!0)}try{e[a]=r}catch(u){0}c&&e.removeAttribute(a)}function q(e,a,r,t){e.addEventListener(a,r,t)}function Z(e,a,r,t){e.removeEventListener(a,r,t)}const X=Symbol("_vei");function Q(e,a,r,t,n=null){const i=e[X]||(e[X]={}),o=i[a];if(t&&o)o.value=t;else{const[r,l]=ae(a);if(t){const o=i[a]=ie(t,n);q(e,r,o,l)}else o&&(Z(e,r,o,l),i[a]=void 0)}}const ee=/(?:Once|Passive|Capture)$/;function ae(e){let a;if(ee.test(e)){let r;a={};while(r=e.match(ee))e=e.slice(0,e.length-r[0].length),a[r[0].toLowerCase()]=!0}const r=":"===e[2]?e.slice(3):(0,n.Tg)(e.slice(2));return[r,a]}let re=0;const te=Promise.resolve(),ne=()=>re||(te.then((()=>re=0)),re=Date.now());function ie(e,a){const r=e=>{if(e._vts){if(e._vts<=r.attached)return}else e._vts=Date.now();(0,t.qL)(oe(e,r.value),a,5,[e])};return r.value=e,r.attached=ne(),r}function oe(e,a){if((0,n.cy)(a)){const r=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{r.call(e),e._stopped=!0},a.map((e=>a=>!a._stopped&&e&&e(a)))}return a}const le=e=>111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,se=(e,a,r,t,i,o,l,s,c)=>{const u="svg"===i;"class"===a?P(e,t,u):"style"===a?O(e,r,t):(0,n.Mp)(a)?(0,n.CP)(a)||Q(e,a,r,t,l):("."===a[0]?(a=a.slice(1),1):"^"===a[0]?(a=a.slice(1),0):ce(e,a,t,u))?Y(e,a,t,o,l,s,c):("true-value"===a?e._trueValue=t:"false-value"===a&&(e._falseValue=t),U(e,a,t,u))};function ce(e,a,r,t){if(t)return"innerHTML"===a||"textContent"===a||!!(a in e&&le(a)&&(0,n.Tn)(r));if("spellcheck"===a||"draggable"===a||"translate"===a)return!1;if("form"===a)return!1;if("list"===a&&"INPUT"===e.tagName)return!1;if("type"===a&&"TEXTAREA"===e.tagName)return!1;if("width"===a||"height"===a){const a=e.tagName;if("IMG"===a||"VIDEO"===a||"CANVAS"===a||"SOURCE"===a)return!1}return(!le(a)||!(0,n.Kg)(r))&&a in e}
/*! #__NO_SIDE_EFFECTS__ */
/*! #__NO_SIDE_EFFECTS__ */
"undefined"!==typeof HTMLElement&&HTMLElement;const ue=new WeakMap,de=new WeakMap,he=Symbol("_moveCb"),pe=Symbol("_enterCb"),me={name:"TransitionGroup",props:(0,n.X$)({},g,{tag:String,moveClass:String}),setup(e,{slots:a}){const r=(0,t.nI)(),n=(0,t.Gy)();let o,l;return(0,t.$u)((()=>{if(!o.length)return;const a=e.moveClass||`${e.name||"v"}-move`;if(!ke(o[0].el,r.vnode.el,a))return;o.forEach(ge),o.forEach(fe);const t=o.filter(be);L(),t.forEach((e=>{const r=e.el,t=r.style;C(r,a),t.transform=t.webkitTransform=t.transitionDuration="";const n=r[he]=e=>{e&&e.target!==r||e&&!/transform$/.test(e.propertyName)||(r.removeEventListener("transitionend",n),r[he]=null,S(r,a))};r.addEventListener("transitionend",n)}))})),()=>{const s=(0,i.ux)(e),c=k(s);let u=s.tag||t.FK;o=l,l=a.default?(0,t.Df)(a.default()):[];for(let e=0;e<l.length;e++){const a=l[e];null!=a.key&&(0,t.MZ)(a,(0,t.OW)(a,c,n,r))}if(o)for(let e=0;e<o.length;e++){const a=o[e];(0,t.MZ)(a,(0,t.OW)(a,c,n,r)),ue.set(a,a.el.getBoundingClientRect())}return(0,t.bF)(u,null,l)}}};me.props;const ye=524==r.j?me:null;function ge(e){const a=e.el;a[he]&&a[he](),a[pe]&&a[pe]()}function fe(e){de.set(e,e.el.getBoundingClientRect())}function be(e){const a=ue.get(e),r=de.get(e),t=a.left-r.left,n=a.top-r.top;if(t||n){const a=e.el.style;return a.transform=a.webkitTransform=`translate(${t}px,${n}px)`,a.transitionDuration="0s",e}}function ke(e,a,r){const t=e.cloneNode(),n=e[p];n&&n.forEach((e=>{e.split(/\s+/).forEach((e=>e&&t.classList.remove(e)))})),r.split(/\s+/).forEach((e=>e&&t.classList.add(e))),t.style.display="none";const i=1===a.nodeType?a:a.parentNode;i.appendChild(t);const{hasTransform:o}=T(t);return i.removeChild(t),o}const ve=e=>{const a=e.props["onUpdate:modelValue"]||!1;return(0,n.cy)(a)?e=>(0,n.DY)(a,e):a};const we=Symbol("_assign"),Ce={deep:!0,created(e,a,r){e[we]=ve(r),q(e,"change",(()=>{const a=e._modelValue,r=Ae(e),t=e.checked,i=e[we];if((0,n.cy)(a)){const e=(0,n.u3)(a,r),o=-1!==e;if(t&&!o)i(a.concat(r));else if(!t&&o){const r=[...a];r.splice(e,1),i(r)}}else if((0,n.vM)(a)){const e=new Set(a);t?e.add(r):e.delete(r),i(e)}else i(Me(e,t))}))},mounted:Se,beforeUpdate(e,a,r){e[we]=ve(r),Se(e,a,r)}};function Se(e,{value:a,oldValue:r},t){e._modelValue=a,(0,n.cy)(a)?e.checked=(0,n.u3)(a,t.props.value)>-1:(0,n.vM)(a)?e.checked=a.has(t.props.value):a!==r&&(e.checked=(0,n.BX)(a,Me(e,!0)))}function Ae(e){return"_value"in e?e._value:e.value}function Me(e,a){const r=a?"_trueValue":"_falseValue";return r in e?e[r]:a}const Be=["ctrl","shift","alt","meta"],Te={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&0!==e.button,middle:e=>"button"in e&&1!==e.button,right:e=>"button"in e&&2!==e.button,exact:(e,a)=>Be.some((r=>e[`${r}Key`]&&!a.includes(r)))},xe=(e,a)=>{const r=e._withMods||(e._withMods={}),t=a.join(".");return r[t]||(r[t]=(r,...t)=>{for(let e=0;e<a.length;e++){const t=Te[a[e]];if(t&&t(r,a))return}return e(r,...t)})},Re=(0,n.X$)({patchProp:se},u);let Le;function Pe(){return Le||(Le=(0,t.K9)(Re))}const Ee=(...e)=>{const a=Pe().createApp(...e);const{mount:r}=a;return a.mount=e=>{const t=Ne(e);if(!t)return;const i=a._component;(0,n.Tn)(i)||i.render||i.template||(i.template=t.innerHTML),t.innerHTML="";const o=r(t,!1,De(t));return t instanceof Element&&(t.removeAttribute("v-cloak"),t.setAttribute("data-v-app","")),o},a};function De(e){return e instanceof SVGElement?"svg":"function"===typeof MathMLElement&&e instanceof MathMLElement?"mathml":void 0}function Ne(e){if((0,n.Kg)(e)){const a=document.querySelector(e);return a}return e}},4232:function(e,a,r){r.d(a,{$3:function(){return p},$H:function(){return W},BH:function(){return j},BX:function(){return te},Bm:function(){return w},C4:function(){return Z},CE:function(){return y},CP:function(){return c},DY:function(){return F},Gv:function(){return C},J$:function(){return ee},Kg:function(){return v},MZ:function(){return n},Mp:function(){return s},NO:function(){return l},Oj:function(){return i},PT:function(){return E},Qd:function(){return T},Ro:function(){return O},SU:function(){return R},TF:function(){return d},Tg:function(){return N},Tn:function(){return k},Tr:function(){return $},We:function(){return K},X$:function(){return u},Y2:function(){return ae},ZH:function(){return H},Zf:function(){return B},_B:function(){return X},bB:function(){return I},cy:function(){return m},gd:function(){return b},pD:function(){return t},rU:function(){return G},tE:function(){return o},u3:function(){return ne},vM:function(){return g},v_:function(){return ie},yI:function(){return x},yL:function(){return S},yQ:function(){return z}});r(4114);
/**
* @vue/shared v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
function t(e,a){const r=new Set(e.split(","));return a?e=>r.has(e.toLowerCase()):e=>r.has(e)}const n={},i=[],o=()=>{},l=()=>!1,s=e=>111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),c=e=>e.startsWith("onUpdate:"),u=Object.assign,d=(e,a)=>{const r=e.indexOf(a);r>-1&&e.splice(r,1)},h=Object.prototype.hasOwnProperty,p=(e,a)=>h.call(e,a),m=Array.isArray,y=e=>"[object Map]"===M(e),g=e=>"[object Set]"===M(e),f=e=>"[object Date]"===M(e),b=e=>"[object RegExp]"===M(e),k=e=>"function"===typeof e,v=e=>"string"===typeof e,w=e=>"symbol"===typeof e,C=e=>null!==e&&"object"===typeof e,S=e=>(C(e)||k(e))&&k(e.then)&&k(e.catch),A=Object.prototype.toString,M=e=>A.call(e),B=e=>M(e).slice(8,-1),T=e=>"[object Object]"===M(e),x=e=>v(e)&&"NaN"!==e&&"-"!==e[0]&&""+parseInt(e,10)===e,R=t(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),L=e=>{const a=Object.create(null);return r=>{const t=a[r];return t||(a[r]=e(r))}},P=/-(\w)/g,E=L((e=>e.replace(P,((e,a)=>a?a.toUpperCase():"")))),D=/\B([A-Z])/g,N=L((e=>e.replace(D,"-$1").toLowerCase())),H=L((e=>e.charAt(0).toUpperCase()+e.slice(1))),G=L((e=>{const a=e?`on${H(e)}`:"";return a})),W=(e,a)=>!Object.is(e,a),F=(e,a)=>{for(let r=0;r<e.length;r++)e[r](a)},z=(e,a,r)=>{Object.defineProperty(e,a,{configurable:!0,enumerable:!1,value:r})},I=e=>{const a=parseFloat(e);return isNaN(a)?e:a},O=e=>{const a=v(e)?Number(e):NaN;return isNaN(a)?e:a};let _;const K=()=>_||(_="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:"undefined"!==typeof window?window:"undefined"!==typeof r.g?r.g:{});const J="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error",j=t(J);function $(e){if(m(e)){const a={};for(let r=0;r<e.length;r++){const t=e[r],n=v(t)?q(t):$(t);if(n)for(const e in n)a[e]=n[e]}return a}if(v(e)||C(e))return e}const V=/;(?![^(]*\))/g,U=/:([^]+)/,Y=/\/\*[^]*?\*\//g;function q(e){const a={};return e.replace(Y,"").split(V).forEach((e=>{if(e){const r=e.split(U);r.length>1&&(a[r[0].trim()]=r[1].trim())}})),a}function Z(e){let a="";if(v(e))a=e;else if(m(e))for(let r=0;r<e.length;r++){const t=Z(e[r]);t&&(a+=t+" ")}else if(C(e))for(const r in e)e[r]&&(a+=r+" ");return a.trim()}function X(e){if(!e)return null;let{class:a,style:r}=e;return a&&!v(a)&&(e.class=Z(a)),r&&(e.style=$(r)),e}const Q="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",ee=t(Q);function ae(e){return!!e||""===e}function re(e,a){if(e.length!==a.length)return!1;let r=!0;for(let t=0;r&&t<e.length;t++)r=te(e[t],a[t]);return r}function te(e,a){if(e===a)return!0;let r=f(e),t=f(a);if(r||t)return!(!r||!t)&&e.getTime()===a.getTime();if(r=w(e),t=w(a),r||t)return e===a;if(r=m(e),t=m(a),r||t)return!(!r||!t)&&re(e,a);if(r=C(e),t=C(a),r||t){if(!r||!t)return!1;const n=Object.keys(e).length,i=Object.keys(a).length;if(n!==i)return!1;for(const r in e){const t=e.hasOwnProperty(r),n=a.hasOwnProperty(r);if(t&&!n||!t&&n||!te(e[r],a[r]))return!1}}return String(e)===String(a)}function ne(e,a){return e.findIndex((e=>te(e,a)))}const ie=e=>v(e)?e:null==e?"":m(e)||C(e)&&(e.toString===A||!k(e.toString))?JSON.stringify(e,oe,2):String(e),oe=(e,a)=>a&&a.__v_isRef?oe(e,a.value):y(a)?{[`Map(${a.size})`]:[...a.entries()].reduce(((e,[a,r],t)=>(e[le(a,t)+" =>"]=r,e)),{})}:g(a)?{[`Set(${a.size})`]:[...a.values()].map((e=>le(e)))}:w(a)?le(a):!C(a)||m(a)||T(a)?a:String(a),le=(e,a="")=>{var r;return w(e)?`Symbol(${null!=(r=e.description)?r:a})`:e}},1241:function(e,a){a.A=(e,a)=>{const r=e.__vccOpts||e;for(const[t,n]of a)r[t]=n;return r}},961:function(e,a,r){r.d(a,{A:function(){return q}});r(4114);var t=r(6768),n=r(4232),i=r(5130),o=Object.defineProperty,l=Object.defineProperties,s=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,h=(e,a,r)=>a in e?o(e,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[a]=r,p=(e,a)=>{for(var r in a||(a={}))u.call(a,r)&&h(e,r,a[r]);if(c)for(var r of c(a))d.call(a,r)&&h(e,r,a[r]);return e},m=(e,a)=>l(e,s(a));const y={props:{autoscroll:{type:Boolean,default:!0}},watch:{typeAheadPointer(){this.autoscroll&&this.maybeAdjustScroll()},open(e){this.autoscroll&&e&&this.$nextTick((()=>this.maybeAdjustScroll()))}},methods:{maybeAdjustScroll(){var e;const a=(null==(e=this.$refs.dropdownMenu)?void 0:e.children[this.typeAheadPointer])||!1;if(a){const e=this.getDropdownViewport(),{top:r,bottom:t,height:n}=a.getBoundingClientRect();if(r<e.top)return this.$refs.dropdownMenu.scrollTop=a.offsetTop;if(t>e.bottom)return this.$refs.dropdownMenu.scrollTop=a.offsetTop-(e.height-n)}},getDropdownViewport(){return this.$refs.dropdownMenu?this.$refs.dropdownMenu.getBoundingClientRect():{height:0,top:0,bottom:0}}}},g={data(){return{typeAheadPointer:-1}},watch:{filteredOptions(){for(let e=0;e<this.filteredOptions.length;e++)if(this.selectable(this.filteredOptions[e])){this.typeAheadPointer=e;break}},open(e){e&&this.typeAheadToLastSelected()},selectedValue(){this.open&&this.typeAheadToLastSelected()}},methods:{typeAheadUp(){for(let e=this.typeAheadPointer-1;e>=0;e--)if(this.selectable(this.filteredOptions[e])){this.typeAheadPointer=e;break}},typeAheadDown(){for(let e=this.typeAheadPointer+1;e<this.filteredOptions.length;e++)if(this.selectable(this.filteredOptions[e])){this.typeAheadPointer=e;break}},typeAheadSelect(){const e=this.filteredOptions[this.typeAheadPointer];e&&this.selectable(e)&&this.select(e)},typeAheadToLastSelected(){this.typeAheadPointer=0!==this.selectedValue.length?this.filteredOptions.indexOf(this.selectedValue[this.selectedValue.length-1]):-1}}},f={props:{loading:{type:Boolean,default:!1}},data(){return{mutableLoading:!1}},watch:{search(){this.$emit("search",this.search,this.toggleLoading)},loading(e){this.mutableLoading=e}},methods:{toggleLoading(e=null){return this.mutableLoading=null==e?!this.mutableLoading:e}}},b=(e,a)=>{const r=e.__vccOpts||e;for(const[t,n]of a)r[t]=n;return r},k={},v={xmlns:"http://www.w3.org/2000/svg",width:"10",height:"10"},w=(0,t.Lk)("path",{d:"M6.895455 5l2.842897-2.842898c.348864-.348863.348864-.914488 0-1.263636L9.106534.261648c-.348864-.348864-.914489-.348864-1.263636 0L5 3.104545 2.157102.261648c-.348863-.348864-.914488-.348864-1.263636 0L.261648.893466c-.348864.348864-.348864.914489 0 1.263636L3.104545 5 .261648 7.842898c-.348864.348863-.348864.914488 0 1.263636l.631818.631818c.348864.348864.914773.348864 1.263636 0L5 6.895455l2.842898 2.842897c.348863.348864.914772.348864 1.263636 0l.631818-.631818c.348864-.348864.348864-.914489 0-1.263636L6.895455 5z"},null,-1),C=[w];function S(e,a){return(0,t.uX)(),(0,t.CE)("svg",v,C)}const A=b(k,[["render",S]]),M={},B={xmlns:"http://www.w3.org/2000/svg",width:"14",height:"10"},T=(0,t.Lk)("path",{d:"M9.211364 7.59931l4.48338-4.867229c.407008-.441854.407008-1.158247 0-1.60046l-.73712-.80023c-.407008-.441854-1.066904-.441854-1.474243 0L7 5.198617 2.51662.33139c-.407008-.441853-1.066904-.441853-1.474243 0l-.737121.80023c-.407008.441854-.407008 1.158248 0 1.600461l4.48338 4.867228L7 10l2.211364-2.40069z"},null,-1),x=[T];function R(e,a){return(0,t.uX)(),(0,t.CE)("svg",B,x)}const L=b(M,[["render",R]]),P={Deselect:A,OpenIndicator:L},E={mounted(e,{instance:a}){if(a.appendToBody){const{height:r,top:t,left:n,width:i}=a.$refs.toggle.getBoundingClientRect();let o=window.scrollX||window.pageXOffset,l=window.scrollY||window.pageYOffset;e.unbindPosition=a.calculatePosition(e,a,{width:i+"px",left:o+n+"px",top:l+t+r+"px"}),document.body.appendChild(e)}},unmounted(e,{instance:a}){a.appendToBody&&(e.unbindPosition&&"function"==typeof e.unbindPosition&&e.unbindPosition(),e.parentNode&&e.parentNode.removeChild(e))}};function D(e){const a={};return Object.keys(e).sort().forEach((r=>{a[r]=e[r]})),JSON.stringify(a)}let N=0;function H(){return++N}const G={components:p({},P),directives:{appendToBody:E},mixins:[y,g,f],compatConfig:{MODE:3},emits:["open","close","update:modelValue","search","search:compositionstart","search:compositionend","search:keydown","search:blur","search:focus","search:input","option:created","option:selecting","option:selected","option:deselecting","option:deselected"],props:{modelValue:{},components:{type:Object,default:()=>({})},options:{type:Array,default(){return[]}},disabled:{type:Boolean,default:!1},clearable:{type:Boolean,default:!0},deselectFromDropdown:{type:Boolean,default:!1},searchable:{type:Boolean,default:!0},multiple:{type:Boolean,default:!1},placeholder:{type:String,default:""},transition:{type:String,default:"vs__fade"},clearSearchOnSelect:{type:Boolean,default:!0},closeOnSelect:{type:Boolean,default:!0},label:{type:String,default:"label"},autocomplete:{type:String,default:"off"},reduce:{type:Function,default:e=>e},selectable:{type:Function,default:e=>!0},getOptionLabel:{type:Function,default(e){return"object"==typeof e?e.hasOwnProperty(this.label)?e[this.label]:console.warn(`[vue-select warn]: Label key "option.${this.label}" does not exist in options object ${JSON.stringify(e)}.\nhttps://vue-select.org/api/props.html#getoptionlabel`):e}},getOptionKey:{type:Function,default(e){if("object"!=typeof e)return e;try{return e.hasOwnProperty("id")?e.id:D(e)}catch(a){return console.warn("[vue-select warn]: Could not stringify this option to generate unique key. Please provide'getOptionKey' prop to return a unique key for each option.\nhttps://vue-select.org/api/props.html#getoptionkey",e,a)}}},onTab:{type:Function,default:function(){this.selectOnTab&&!this.isComposing&&this.typeAheadSelect()}},taggable:{type:Boolean,default:!1},tabindex:{type:Number,default:null},pushTags:{type:Boolean,default:!1},filterable:{type:Boolean,default:!0},filterBy:{type:Function,default(e,a,r){return(a||"").toLocaleLowerCase().indexOf(r.toLocaleLowerCase())>-1}},filter:{type:Function,default(e,a){return e.filter((e=>{let r=this.getOptionLabel(e);return"number"==typeof r&&(r=r.toString()),this.filterBy(e,r,a)}))}},createOption:{type:Function,default(e){return"object"==typeof this.optionList[0]?{[this.label]:e}:e}},resetOnOptionsChange:{default:!1,validator:e=>["function","boolean"].includes(typeof e)},clearSearchOnBlur:{type:Function,default:function({clearSearchOnSelect:e,multiple:a}){return e&&!a}},noDrop:{type:Boolean,default:!1},inputId:{type:String},dir:{type:String,default:"auto"},selectOnTab:{type:Boolean,default:!1},selectOnKeyCodes:{type:Array,default:()=>[13]},searchInputQuerySelector:{type:String,default:"[type=search]"},mapKeydown:{type:Function,default:(e,a)=>e},appendToBody:{type:Boolean,default:!1},calculatePosition:{type:Function,default(e,a,{width:r,top:t,left:n}){e.style.top=t,e.style.left=n,e.style.width=r}},dropdownShouldOpen:{type:Function,default({noDrop:e,open:a,mutableLoading:r}){return!e&&(a&&!r)}},uid:{type:[String,Number],default:()=>H()}},data(){return{search:"",open:!1,isComposing:!1,pushedTags:[],_value:[],deselectButtons:[]}},computed:{isReducingValues(){return this.$props.reduce!==this.$options.props.reduce.default},isTrackingValues(){return"undefined"==typeof this.modelValue||this.isReducingValues},selectedValue(){let e=this.modelValue;return this.isTrackingValues&&(e=this.$data._value),null!=e&&""!==e?[].concat(e):[]},optionList(){return this.options.concat(this.pushTags?this.pushedTags:[])},searchEl(){return this.$slots.search?this.$refs.selectedOptions.querySelector(this.searchInputQuerySelector):this.$refs.search},scope(){const e={search:this.search,loading:this.loading,searching:this.searching,filteredOptions:this.filteredOptions};return{search:{attributes:p({disabled:this.disabled,placeholder:this.searchPlaceholder,tabindex:this.tabindex,readonly:!this.searchable,id:this.inputId,"aria-autocomplete":"list","aria-labelledby":`vs${this.uid}__combobox`,"aria-controls":`vs${this.uid}__listbox`,ref:"search",type:"search",autocomplete:this.autocomplete,value:this.search},this.dropdownOpen&&this.filteredOptions[this.typeAheadPointer]?{"aria-activedescendant":`vs${this.uid}__option-${this.typeAheadPointer}`}:{}),events:{compositionstart:()=>this.isComposing=!0,compositionend:()=>this.isComposing=!1,keydown:this.onSearchKeyDown,blur:this.onSearchBlur,focus:this.onSearchFocus,input:e=>this.search=e.target.value}},spinner:{loading:this.mutableLoading},noOptions:{search:this.search,loading:this.mutableLoading,searching:this.searching},openIndicator:{attributes:{ref:"openIndicator",role:"presentation",class:"vs__open-indicator"}},listHeader:e,listFooter:e,header:m(p({},e),{deselect:this.deselect}),footer:m(p({},e),{deselect:this.deselect})}},childComponents(){return p(p({},P),this.components)},stateClasses(){return{"vs--open":this.dropdownOpen,"vs--single":!this.multiple,"vs--multiple":this.multiple,"vs--searching":this.searching&&!this.noDrop,"vs--searchable":this.searchable&&!this.noDrop,"vs--unsearchable":!this.searchable,"vs--loading":this.mutableLoading,"vs--disabled":this.disabled}},searching(){return!!this.search},dropdownOpen(){return this.dropdownShouldOpen(this)},searchPlaceholder(){return this.isValueEmpty&&this.placeholder?this.placeholder:void 0},filteredOptions(){const e=[].concat(this.optionList);if(!this.filterable&&!this.taggable)return e;const a=this.search.length?this.filter(e,this.search,this):e;if(this.taggable&&this.search.length){const e=this.createOption(this.search);this.optionExists(e)||a.unshift(e)}return a},isValueEmpty(){return 0===this.selectedValue.length},showClearButton(){return!this.multiple&&this.clearable&&!this.open&&!this.isValueEmpty}},watch:{options(e,a){const r=()=>"function"==typeof this.resetOnOptionsChange?this.resetOnOptionsChange(e,a,this.selectedValue):this.resetOnOptionsChange;!this.taggable&&r()&&this.clearSelection(),this.modelValue&&this.isTrackingValues&&this.setInternalValueFromOptions(this.modelValue)},modelValue:{immediate:!0,handler(e){this.isTrackingValues&&this.setInternalValueFromOptions(e)}},multiple(){this.clearSelection()},open(e){this.$emit(e?"open":"close")}},created(){this.mutableLoading=this.loading},methods:{setInternalValueFromOptions(e){Array.isArray(e)?this.$data._value=e.map((e=>this.findOptionFromReducedValue(e))):this.$data._value=this.findOptionFromReducedValue(e)},select(e){this.$emit("option:selecting",e),this.isOptionSelected(e)?this.deselectFromDropdown&&(this.clearable||this.multiple&&this.selectedValue.length>1)&&this.deselect(e):(this.taggable&&!this.optionExists(e)&&(this.$emit("option:created",e),this.pushTag(e)),this.multiple&&(e=this.selectedValue.concat(e)),this.updateValue(e),this.$emit("option:selected",e)),this.onAfterSelect(e)},deselect(e){this.$emit("option:deselecting",e),this.updateValue(this.selectedValue.filter((a=>!this.optionComparator(a,e)))),this.$emit("option:deselected",e)},clearSelection(){this.updateValue(this.multiple?[]:null)},onAfterSelect(e){this.closeOnSelect&&(this.open=!this.open,this.searchEl.blur()),this.clearSearchOnSelect&&(this.search="")},updateValue(e){"undefined"==typeof this.modelValue&&(this.$data._value=e),null!==e&&(e=Array.isArray(e)?e.map((e=>this.reduce(e))):this.reduce(e)),this.$emit("update:modelValue",e)},toggleDropdown(e){const a=e.target!==this.searchEl;a&&e.preventDefault();const r=[...this.deselectButtons||[],this.$refs.clearButton];void 0===this.searchEl||r.filter(Boolean).some((a=>a.contains(e.target)||a===e.target))?e.preventDefault():this.open&&a?this.searchEl.blur():this.disabled||(this.open=!0,this.searchEl.focus())},isOptionSelected(e){return this.selectedValue.some((a=>this.optionComparator(a,e)))},isOptionDeselectable(e){return this.isOptionSelected(e)&&this.deselectFromDropdown},optionComparator(e,a){return this.getOptionKey(e)===this.getOptionKey(a)},findOptionFromReducedValue(e){const a=a=>JSON.stringify(this.reduce(a))===JSON.stringify(e),r=[...this.options,...this.pushedTags].filter(a);return 1===r.length?r[0]:r.find((e=>this.optionComparator(e,this.$data._value)))||e},closeSearchOptions(){this.open=!1,this.$emit("search:blur")},maybeDeleteValue(){if(!this.searchEl.value.length&&this.selectedValue&&this.selectedValue.length&&this.clearable){let e=null;this.multiple&&(e=[...this.selectedValue.slice(0,this.selectedValue.length-1)]),this.updateValue(e)}},optionExists(e){return this.optionList.some((a=>this.optionComparator(a,e)))},normalizeOptionForSlot(e){return"object"==typeof e?e:{[this.label]:e}},pushTag(e){this.pushedTags.push(e)},onEscape(){this.search.length?this.search="":this.searchEl.blur()},onSearchBlur(){if(!this.mousedown||this.searching){const{clearSearchOnSelect:e,multiple:a}=this;return this.clearSearchOnBlur({clearSearchOnSelect:e,multiple:a})&&(this.search=""),void this.closeSearchOptions()}this.mousedown=!1,0!==this.search.length||0!==this.options.length||this.closeSearchOptions()},onSearchFocus(){this.open=!0,this.$emit("search:focus")},onMousedown(){this.mousedown=!0},onMouseUp(){this.mousedown=!1},onSearchKeyDown(e){const a=e=>(e.preventDefault(),!this.isComposing&&this.typeAheadSelect()),r={8:e=>this.maybeDeleteValue(),9:e=>this.onTab(),27:e=>this.onEscape(),38:e=>(e.preventDefault(),this.typeAheadUp()),40:e=>(e.preventDefault(),this.typeAheadDown())};this.selectOnKeyCodes.forEach((e=>r[e]=a));const t=this.mapKeydown(r,this);if("function"==typeof t[e.keyCode])return t[e.keyCode](e)}}},W=["dir"],F=["id","aria-expanded","aria-owns"],z={ref:"selectedOptions",class:"vs__selected-options"},I=["disabled","title","aria-label","onClick"],O={ref:"actions",class:"vs__actions"},_=["disabled"],K={class:"vs__spinner"},J=["id"],j=["id","aria-selected","onMouseover","onClick"],$={key:0,class:"vs__no-options"},V=(0,t.eW)(" Sorry, no matching options. "),U=["id"];function Y(e,a,r,o,l,s){const c=(0,t.gN)("append-to-body");return(0,t.uX)(),(0,t.CE)("div",{dir:r.dir,class:(0,n.C4)(["v-select",s.stateClasses])},[(0,t.RG)(e.$slots,"header",(0,n._B)((0,t.Ng)(s.scope.header))),(0,t.Lk)("div",{id:`vs${r.uid}__combobox`,ref:"toggle",class:"vs__dropdown-toggle",role:"combobox","aria-expanded":s.dropdownOpen.toString(),"aria-owns":`vs${r.uid}__listbox`,"aria-label":"Search for option",onMousedown:a[1]||(a[1]=e=>s.toggleDropdown(e))},[(0,t.Lk)("div",z,[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)(s.selectedValue,((a,i)=>(0,t.RG)(e.$slots,"selected-option-container",{option:s.normalizeOptionForSlot(a),deselect:s.deselect,multiple:r.multiple,disabled:r.disabled},(()=>[((0,t.uX)(),(0,t.CE)("span",{key:r.getOptionKey(a),class:"vs__selected"},[(0,t.RG)(e.$slots,"selected-option",(0,n._B)((0,t.Ng)(s.normalizeOptionForSlot(a))),(()=>[(0,t.eW)((0,n.v_)(r.getOptionLabel(a)),1)])),r.multiple?((0,t.uX)(),(0,t.CE)("button",{key:0,ref_for:!0,ref:e=>l.deselectButtons[i]=e,disabled:r.disabled,type:"button",class:"vs__deselect",title:`Deselect ${r.getOptionLabel(a)}`,"aria-label":`Deselect ${r.getOptionLabel(a)}`,onClick:e=>s.deselect(a)},[((0,t.uX)(),(0,t.Wv)((0,t.$y)(s.childComponents.Deselect)))],8,I)):(0,t.Q3)("",!0)]))])))),256)),(0,t.RG)(e.$slots,"search",(0,n._B)((0,t.Ng)(s.scope.search)),(()=>[(0,t.Lk)("input",(0,t.v6)({class:"vs__search"},s.scope.search.attributes,(0,t.Tb)(s.scope.search.events)),null,16)]))],512),(0,t.Lk)("div",O,[(0,t.bo)((0,t.Lk)("button",{ref:"clearButton",disabled:r.disabled,type:"button",class:"vs__clear",title:"Clear Selected","aria-label":"Clear Selected",onClick:a[0]||(a[0]=(...e)=>s.clearSelection&&s.clearSelection(...e))},[((0,t.uX)(),(0,t.Wv)((0,t.$y)(s.childComponents.Deselect)))],8,_),[[i.aG,s.showClearButton]]),(0,t.RG)(e.$slots,"open-indicator",(0,n._B)((0,t.Ng)(s.scope.openIndicator)),(()=>[r.noDrop?(0,t.Q3)("",!0):((0,t.uX)(),(0,t.Wv)((0,t.$y)(s.childComponents.OpenIndicator),(0,n._B)((0,t.v6)({key:0},s.scope.openIndicator.attributes)),null,16))])),(0,t.RG)(e.$slots,"spinner",(0,n._B)((0,t.Ng)(s.scope.spinner)),(()=>[(0,t.bo)((0,t.Lk)("div",K,"Loading...",512),[[i.aG,e.mutableLoading]])]))],512)],40,F),(0,t.bF)(i.eB,{name:r.transition},{default:(0,t.k6)((()=>[s.dropdownOpen?(0,t.bo)(((0,t.uX)(),(0,t.CE)("ul",{id:`vs${r.uid}__listbox`,ref:"dropdownMenu",key:`vs${r.uid}__listbox`,class:"vs__dropdown-menu",role:"listbox",tabindex:"-1",onMousedown:a[2]||(a[2]=(0,i.D$)(((...e)=>s.onMousedown&&s.onMousedown(...e)),["prevent"])),onMouseup:a[3]||(a[3]=(...e)=>s.onMouseUp&&s.onMouseUp(...e))},[(0,t.RG)(e.$slots,"list-header",(0,n._B)((0,t.Ng)(s.scope.listHeader))),((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)(s.filteredOptions,((a,o)=>((0,t.uX)(),(0,t.CE)("li",{id:`vs${r.uid}__option-${o}`,key:r.getOptionKey(a),role:"option",class:(0,n.C4)(["vs__dropdown-option",{"vs__dropdown-option--deselect":s.isOptionDeselectable(a)&&o===e.typeAheadPointer,"vs__dropdown-option--selected":s.isOptionSelected(a),"vs__dropdown-option--highlight":o===e.typeAheadPointer,"vs__dropdown-option--disabled":!r.selectable(a)}]),"aria-selected":o===e.typeAheadPointer||null,onMouseover:t=>r.selectable(a)?e.typeAheadPointer=o:null,onClick:(0,i.D$)((e=>r.selectable(a)?s.select(a):null),["prevent","stop"])},[(0,t.RG)(e.$slots,"option",(0,n._B)((0,t.Ng)(s.normalizeOptionForSlot(a))),(()=>[(0,t.eW)((0,n.v_)(r.getOptionLabel(a)),1)]))],42,j)))),128)),0===s.filteredOptions.length?((0,t.uX)(),(0,t.CE)("li",$,[(0,t.RG)(e.$slots,"no-options",(0,n._B)((0,t.Ng)(s.scope.noOptions)),(()=>[V]))])):(0,t.Q3)("",!0),(0,t.RG)(e.$slots,"list-footer",(0,n._B)((0,t.Ng)(s.scope.listFooter)))],40,J)),[[c]]):((0,t.uX)(),(0,t.CE)("ul",{key:1,id:`vs${r.uid}__listbox`,role:"listbox",style:{display:"none",visibility:"hidden"}},null,8,U))])),_:3},8,["name"]),(0,t.RG)(e.$slots,"footer",(0,n._B)((0,t.Ng)(s.scope.footer)))],10,W)}const q=b(G,[["render",Y]])},9306:function(e,a,r){var t=r(4901),n=r(6823),i=TypeError;e.exports=function(e){if(t(e))return e;throw new i(n(e)+" is not a function")}},3506:function(e,a,r){var t=r(3925),n=String,i=TypeError;e.exports=function(e){if(t(e))return e;throw new i("Can't set "+n(e)+" as a prototype")}},8551:function(e,a,r){var t=r(34),n=String,i=TypeError;e.exports=function(e){if(t(e))return e;throw new i(n(e)+" is not an object")}},7811:function(e){e.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},7394:function(e,a,r){var t=r(6706),n=r(4576),i=TypeError;e.exports=t(ArrayBuffer.prototype,"byteLength","get")||function(e){if("ArrayBuffer"!==n(e))throw new i("ArrayBuffer expected");return e.byteLength}},3238:function(e,a,r){var t=r(9504),n=r(7394),i=t(ArrayBuffer.prototype.slice);e.exports=function(e){if(0!==n(e))return!1;try{return i(e,0,0),!1}catch(a){return!0}}},5636:function(e,a,r){var t=r(4475),n=r(9504),i=r(6706),o=r(7696),l=r(3238),s=r(7394),c=r(4483),u=r(1548),d=t.structuredClone,h=t.ArrayBuffer,p=t.DataView,m=t.TypeError,y=Math.min,g=h.prototype,f=p.prototype,b=n(g.slice),k=i(g,"resizable","get"),v=i(g,"maxByteLength","get"),w=n(f.getInt8),C=n(f.setInt8);e.exports=(u||c)&&function(e,a,r){var t,n=s(e),i=void 0===a?n:o(a),g=!k||!k(e);if(l(e))throw new m("ArrayBuffer is detached");if(u&&(e=d(e,{transfer:[e]}),n===i&&(r||g)))return e;if(n>=i&&(!r||g))t=b(e,0,i);else{var f=r&&!g&&v?{maxByteLength:v(e)}:void 0;t=new h(i,f);for(var S=new p(e),A=new p(t),M=y(i,n),B=0;B<M;B++)C(A,B,w(S,B))}return u||c(e),t}},4644:function(e,a,r){var t,n,i,o=r(7811),l=r(3724),s=r(4475),c=r(4901),u=r(34),d=r(9297),h=r(6955),p=r(6823),m=r(6699),y=r(6840),g=r(2106),f=r(1625),b=r(2787),k=r(2967),v=r(8227),w=r(3392),C=r(1181),S=C.enforce,A=C.get,M=s.Int8Array,B=M&&M.prototype,T=s.Uint8ClampedArray,x=T&&T.prototype,R=M&&b(M),L=B&&b(B),P=Object.prototype,E=s.TypeError,D=v("toStringTag"),N=w("TYPED_ARRAY_TAG"),H="TypedArrayConstructor",G=o&&!!k&&"Opera"!==h(s.opera),W=!1,F={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},z={BigInt64Array:8,BigUint64Array:8},I=function(e){if(!u(e))return!1;var a=h(e);return"DataView"===a||d(F,a)||d(z,a)},O=function(e){var a=b(e);if(u(a)){var r=A(a);return r&&d(r,H)?r[H]:O(a)}},_=function(e){if(!u(e))return!1;var a=h(e);return d(F,a)||d(z,a)},K=function(e){if(_(e))return e;throw new E("Target is not a typed array")},J=function(e){if(c(e)&&(!k||f(R,e)))return e;throw new E(p(e)+" is not a typed array constructor")},j=function(e,a,r,t){if(l){if(r)for(var n in F){var i=s[n];if(i&&d(i.prototype,e))try{delete i.prototype[e]}catch(o){try{i.prototype[e]=a}catch(c){}}}L[e]&&!r||y(L,e,r?a:G&&B[e]||a,t)}},$=function(e,a,r){var t,n;if(l){if(k){if(r)for(t in F)if(n=s[t],n&&d(n,e))try{delete n[e]}catch(i){}if(R[e]&&!r)return;try{return y(R,e,r?a:G&&R[e]||a)}catch(i){}}for(t in F)n=s[t],!n||n[e]&&!r||y(n,e,a)}};for(t in F)n=s[t],i=n&&n.prototype,i?S(i)[H]=n:G=!1;for(t in z)n=s[t],i=n&&n.prototype,i&&(S(i)[H]=n);if((!G||!c(R)||R===Function.prototype)&&(R=function(){throw new E("Incorrect invocation")},G))for(t in F)s[t]&&k(s[t],R);if((!G||!L||L===P)&&(L=R.prototype,G))for(t in F)s[t]&&k(s[t].prototype,L);if(G&&b(x)!==L&&k(x,L),l&&!d(L,D))for(t in W=!0,g(L,D,{configurable:!0,get:function(){return u(this)?this[N]:void 0}}),F)s[t]&&m(s[t],N,t);e.exports={NATIVE_ARRAY_BUFFER_VIEWS:G,TYPED_ARRAY_TAG:W&&N,aTypedArray:K,aTypedArrayConstructor:J,exportTypedArrayMethod:j,exportTypedArrayStaticMethod:$,getTypedArrayConstructor:O,isView:I,isTypedArray:_,TypedArray:R,TypedArrayPrototype:L}},5370:function(e,a,r){var t=r(6198);e.exports=function(e,a,r){var n=0,i=arguments.length>2?r:t(a),o=new e(i);while(i>n)o[n]=a[n++];return o}},9617:function(e,a,r){var t=r(5397),n=r(5610),i=r(6198),o=function(e){return function(a,r,o){var l=t(a),s=i(l);if(0===s)return!e&&-1;var c,u=n(o,s);if(e&&r!==r){while(s>u)if(c=l[u++],c!==c)return!0}else for(;s>u;u++)if((e||u in l)&&l[u]===r)return e||u||0;return!e&&-1}};e.exports={includes:o(!0),indexOf:o(!1)}},4527:function(e,a,r){var t=r(3724),n=r(4376),i=TypeError,o=Object.getOwnPropertyDescriptor,l=t&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=l?function(e,a){if(n(e)&&!o(e,"length").writable)throw new i("Cannot set read only .length");return e.length=a}:function(e,a){return e.length=a}},7628:function(e,a,r){var t=r(6198);e.exports=function(e,a){for(var r=t(e),n=new a(r),i=0;i<r;i++)n[i]=e[r-i-1];return n}},9928:function(e,a,r){var t=r(6198),n=r(1291),i=RangeError;e.exports=function(e,a,r,o){var l=t(e),s=n(r),c=s<0?l+s:s;if(c>=l||c<0)throw new i("Incorrect index");for(var u=new a(l),d=0;d<l;d++)u[d]=d===c?o:e[d];return u}},4576:function(e,a,r){var t=r(9504),n=t({}.toString),i=t("".slice);e.exports=function(e){return i(n(e),8,-1)}},6955:function(e,a,r){var t=r(2140),n=r(4901),i=r(4576),o=r(8227),l=o("toStringTag"),s=Object,c="Arguments"===i(function(){return arguments}()),u=function(e,a){try{return e[a]}catch(r){}};e.exports=t?i:function(e){var a,r,t;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=u(a=s(e),l))?r:c?i(a):"Object"===(t=i(a))&&n(a.callee)?"Arguments":t}},7740:function(e,a,r){var t=r(9297),n=r(5031),i=r(7347),o=r(4913);e.exports=function(e,a,r){for(var l=n(a),s=o.f,c=i.f,u=0;u<l.length;u++){var d=l[u];t(e,d)||r&&t(r,d)||s(e,d,c(a,d))}}},2211:function(e,a,r){var t=r(9039);e.exports=!t((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},6699:function(e,a,r){var t=r(3724),n=r(4913),i=r(6980);e.exports=t?function(e,a,r){return n.f(e,a,i(1,r))}:function(e,a,r){return e[a]=r,e}},6980:function(e){e.exports=function(e,a){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:a}}},2106:function(e,a,r){var t=r(283),n=r(4913);e.exports=function(e,a,r){return r.get&&t(r.get,a,{getter:!0}),r.set&&t(r.set,a,{setter:!0}),n.f(e,a,r)}},6840:function(e,a,r){var t=r(4901),n=r(4913),i=r(283),o=r(9433);e.exports=function(e,a,r,l){l||(l={});var s=l.enumerable,c=void 0!==l.name?l.name:a;if(t(r)&&i(r,c,l),l.global)s?e[a]=r:o(a,r);else{try{l.unsafe?e[a]&&(s=!0):delete e[a]}catch(u){}s?e[a]=r:n.f(e,a,{value:r,enumerable:!1,configurable:!l.nonConfigurable,writable:!l.nonWritable})}return e}},9433:function(e,a,r){var t=r(4475),n=Object.defineProperty;e.exports=function(e,a){try{n(t,e,{value:a,configurable:!0,writable:!0})}catch(r){t[e]=a}return a}},3724:function(e,a,r){var t=r(9039);e.exports=!t((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4483:function(e,a,r){var t,n,i,o,l=r(4475),s=r(9714),c=r(1548),u=l.structuredClone,d=l.ArrayBuffer,h=l.MessageChannel,p=!1;if(c)p=function(e){u(e,{transfer:[e]})};else if(d)try{h||(t=s("worker_threads"),t&&(h=t.MessageChannel)),h&&(n=new h,i=new d(2),o=function(e){n.port1.postMessage(null,[e])},2===i.byteLength&&(o(i),0===i.byteLength&&(p=o)))}catch(m){}e.exports=p},4055:function(e,a,r){var t=r(4475),n=r(34),i=t.document,o=n(i)&&n(i.createElement);e.exports=function(e){return o?i.createElement(e):{}}},6837:function(e){var a=TypeError,r=9007199254740991;e.exports=function(e){if(e>r)throw a("Maximum allowed index exceeded");return e}},7290:function(e,a,r){var t=r(516),n=r(9088);e.exports=!t&&!n&&"object"==typeof window&&"object"==typeof document},516:function(e){e.exports="object"==typeof Deno&&Deno&&"object"==typeof Deno.version},9088:function(e,a,r){var t=r(4475),n=r(4576);e.exports="process"===n(t.process)},9392:function(e){e.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},7388:function(e,a,r){var t,n,i=r(4475),o=r(9392),l=i.process,s=i.Deno,c=l&&l.versions||s&&s.version,u=c&&c.v8;u&&(t=u.split("."),n=t[0]>0&&t[0]<4?1:+(t[0]+t[1])),!n&&o&&(t=o.match(/Edge\/(\d+)/),(!t||t[1]>=74)&&(t=o.match(/Chrome\/(\d+)/),t&&(n=+t[1]))),e.exports=n},8727:function(e){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},6518:function(e,a,r){var t=r(4475),n=r(7347).f,i=r(6699),o=r(6840),l=r(9433),s=r(7740),c=r(2796);e.exports=function(e,a){var r,u,d,h,p,m,y=e.target,g=e.global,f=e.stat;if(u=g?t:f?t[y]||l(y,{}):t[y]&&t[y].prototype,u)for(d in a){if(p=a[d],e.dontCallGetSet?(m=n(u,d),h=m&&m.value):h=u[d],r=c(g?d:y+(f?".":"#")+d,e.forced),!r&&void 0!==h){if(typeof p==typeof h)continue;s(p,h)}(e.sham||h&&h.sham)&&i(p,"sham",!0),o(u,d,p,e)}}},9039:function(e){e.exports=function(e){try{return!!e()}catch(a){return!0}}},616:function(e,a,r){var t=r(9039);e.exports=!t((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},9565:function(e,a,r){var t=r(616),n=Function.prototype.call;e.exports=t?n.bind(n):function(){return n.apply(n,arguments)}},350:function(e,a,r){var t=r(3724),n=r(9297),i=Function.prototype,o=t&&Object.getOwnPropertyDescriptor,l=n(i,"name"),s=l&&"something"===function(){}.name,c=l&&(!t||t&&o(i,"name").configurable);e.exports={EXISTS:l,PROPER:s,CONFIGURABLE:c}},6706:function(e,a,r){var t=r(9504),n=r(9306);e.exports=function(e,a,r){try{return t(n(Object.getOwnPropertyDescriptor(e,a)[r]))}catch(i){}}},9504:function(e,a,r){var t=r(616),n=Function.prototype,i=n.call,o=t&&n.bind.bind(i,i);e.exports=t?o:function(e){return function(){return i.apply(e,arguments)}}},7751:function(e,a,r){var t=r(4475),n=r(4901),i=function(e){return n(e)?e:void 0};e.exports=function(e,a){return arguments.length<2?i(t[e]):t[e]&&t[e][a]}},5966:function(e,a,r){var t=r(9306),n=r(4117);e.exports=function(e,a){var r=e[a];return n(r)?void 0:t(r)}},4475:function(e,a,r){var t=function(e){return e&&e.Math===Math&&e};e.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof r.g&&r.g)||t("object"==typeof this&&this)||function(){return this}()||Function("return this")()},9297:function(e,a,r){var t=r(9504),n=r(8981),i=t({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,a){return i(n(e),a)}},421:function(e){e.exports={}},5917:function(e,a,r){var t=r(3724),n=r(9039),i=r(4055);e.exports=!t&&!n((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},7055:function(e,a,r){var t=r(9504),n=r(9039),i=r(4576),o=Object,l=t("".split);e.exports=n((function(){return!o("z").propertyIsEnumerable(0)}))?function(e){return"String"===i(e)?l(e,""):o(e)}:o},3706:function(e,a,r){var t=r(9504),n=r(4901),i=r(7629),o=t(Function.toString);n(i.inspectSource)||(i.inspectSource=function(e){return o(e)}),e.exports=i.inspectSource},1181:function(e,a,r){var t,n,i,o=r(8622),l=r(4475),s=r(34),c=r(6699),u=r(9297),d=r(7629),h=r(6119),p=r(421),m="Object already initialized",y=l.TypeError,g=l.WeakMap,f=function(e){return i(e)?n(e):t(e,{})},b=function(e){return function(a){var r;if(!s(a)||(r=n(a)).type!==e)throw new y("Incompatible receiver, "+e+" required");return r}};if(o||d.state){var k=d.state||(d.state=new g);k.get=k.get,k.has=k.has,k.set=k.set,t=function(e,a){if(k.has(e))throw new y(m);return a.facade=e,k.set(e,a),a},n=function(e){return k.get(e)||{}},i=function(e){return k.has(e)}}else{var v=h("state");p[v]=!0,t=function(e,a){if(u(e,v))throw new y(m);return a.facade=e,c(e,v,a),a},n=function(e){return u(e,v)?e[v]:{}},i=function(e){return u(e,v)}}e.exports={set:t,get:n,has:i,enforce:f,getterFor:b}},4376:function(e,a,r){var t=r(4576);e.exports=Array.isArray||function(e){return"Array"===t(e)}},1108:function(e,a,r){var t=r(6955);e.exports=function(e){var a=t(e);return"BigInt64Array"===a||"BigUint64Array"===a}},4901:function(e){var a="object"==typeof document&&document.all;e.exports="undefined"==typeof a&&void 0!==a?function(e){return"function"==typeof e||e===a}:function(e){return"function"==typeof e}},2796:function(e,a,r){var t=r(9039),n=r(4901),i=/#|\.prototype\./,o=function(e,a){var r=s[l(e)];return r===u||r!==c&&(n(a)?t(a):!!a)},l=o.normalize=function(e){return String(e).replace(i,".").toLowerCase()},s=o.data={},c=o.NATIVE="N",u=o.POLYFILL="P";e.exports=o},4117:function(e){e.exports=function(e){return null===e||void 0===e}},34:function(e,a,r){var t=r(4901);e.exports=function(e){return"object"==typeof e?null!==e:t(e)}},3925:function(e,a,r){var t=r(34);e.exports=function(e){return t(e)||null===e}},6395:function(e){e.exports=!1},757:function(e,a,r){var t=r(7751),n=r(4901),i=r(1625),o=r(7040),l=Object;e.exports=o?function(e){return"symbol"==typeof e}:function(e){var a=t("Symbol");return n(a)&&i(a.prototype,l(e))}},6198:function(e,a,r){var t=r(8014);e.exports=function(e){return t(e.length)}},283:function(e,a,r){var t=r(9504),n=r(9039),i=r(4901),o=r(9297),l=r(3724),s=r(350).CONFIGURABLE,c=r(3706),u=r(1181),d=u.enforce,h=u.get,p=String,m=Object.defineProperty,y=t("".slice),g=t("".replace),f=t([].join),b=l&&!n((function(){return 8!==m((function(){}),"length",{value:8}).length})),k=String(String).split("String"),v=e.exports=function(e,a,r){"Symbol("===y(p(a),0,7)&&(a="["+g(p(a),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),r&&r.getter&&(a="get "+a),r&&r.setter&&(a="set "+a),(!o(e,"name")||s&&e.name!==a)&&(l?m(e,"name",{value:a,configurable:!0}):e.name=a),b&&r&&o(r,"arity")&&e.length!==r.arity&&m(e,"length",{value:r.arity});try{r&&o(r,"constructor")&&r.constructor?l&&m(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(n){}var t=d(e);return o(t,"source")||(t.source=f(k,"string"==typeof a?a:"")),e};Function.prototype.toString=v((function(){return i(this)&&h(this).source||c(this)}),"toString")},741:function(e){var a=Math.ceil,r=Math.floor;e.exports=Math.trunc||function(e){var t=+e;return(t>0?r:a)(t)}},4913:function(e,a,r){var t=r(3724),n=r(5917),i=r(8686),o=r(8551),l=r(6969),s=TypeError,c=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d="enumerable",h="configurable",p="writable";a.f=t?i?function(e,a,r){if(o(e),a=l(a),o(r),"function"===typeof e&&"prototype"===a&&"value"in r&&p in r&&!r[p]){var t=u(e,a);t&&t[p]&&(e[a]=r.value,r={configurable:h in r?r[h]:t[h],enumerable:d in r?r[d]:t[d],writable:!1})}return c(e,a,r)}:c:function(e,a,r){if(o(e),a=l(a),o(r),n)try{return c(e,a,r)}catch(t){}if("get"in r||"set"in r)throw new s("Accessors not supported");return"value"in r&&(e[a]=r.value),e}},7347:function(e,a,r){var t=r(3724),n=r(9565),i=r(8773),o=r(6980),l=r(5397),s=r(6969),c=r(9297),u=r(5917),d=Object.getOwnPropertyDescriptor;a.f=t?d:function(e,a){if(e=l(e),a=s(a),u)try{return d(e,a)}catch(r){}if(c(e,a))return o(!n(i.f,e,a),e[a])}},8480:function(e,a,r){var t=r(1828),n=r(8727),i=n.concat("length","prototype");a.f=Object.getOwnPropertyNames||function(e){return t(e,i)}},3717:function(e,a){a.f=Object.getOwnPropertySymbols},2787:function(e,a,r){var t=r(9297),n=r(4901),i=r(8981),o=r(6119),l=r(2211),s=o("IE_PROTO"),c=Object,u=c.prototype;e.exports=l?c.getPrototypeOf:function(e){var a=i(e);if(t(a,s))return a[s];var r=a.constructor;return n(r)&&a instanceof r?r.prototype:a instanceof c?u:null}},1625:function(e,a,r){var t=r(9504);e.exports=t({}.isPrototypeOf)},1828:function(e,a,r){var t=r(9504),n=r(9297),i=r(5397),o=r(9617).indexOf,l=r(421),s=t([].push);e.exports=function(e,a){var r,t=i(e),c=0,u=[];for(r in t)!n(l,r)&&n(t,r)&&s(u,r);while(a.length>c)n(t,r=a[c++])&&(~o(u,r)||s(u,r));return u}},8773:function(e,a){var r={}.propertyIsEnumerable,t=Object.getOwnPropertyDescriptor,n=t&&!r.call({1:2},1);a.f=n?function(e){var a=t(this,e);return!!a&&a.enumerable}:r},2967:function(e,a,r){var t=r(6706),n=r(34),i=r(7750),o=r(3506);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,a=!1,r={};try{e=t(Object.prototype,"__proto__","set"),e(r,[]),a=r instanceof Array}catch(l){}return function(r,t){return i(r),o(t),n(r)?(a?e(r,t):r.__proto__=t,r):r}}():void 0)},4270:function(e,a,r){var t=r(9565),n=r(4901),i=r(34),o=TypeError;e.exports=function(e,a){var r,l;if("string"===a&&n(r=e.toString)&&!i(l=t(r,e)))return l;if(n(r=e.valueOf)&&!i(l=t(r,e)))return l;if("string"!==a&&n(r=e.toString)&&!i(l=t(r,e)))return l;throw new o("Can't convert object to primitive value")}},5031:function(e,a,r){var t=r(7751),n=r(9504),i=r(8480),o=r(3717),l=r(8551),s=n([].concat);e.exports=t("Reflect","ownKeys")||function(e){var a=i.f(l(e)),r=o.f;return r?s(a,r(e)):a}},7979:function(e,a,r){var t=r(8551);e.exports=function(){var e=t(this),a="";return e.hasIndices&&(a+="d"),e.global&&(a+="g"),e.ignoreCase&&(a+="i"),e.multiline&&(a+="m"),e.dotAll&&(a+="s"),e.unicode&&(a+="u"),e.unicodeSets&&(a+="v"),e.sticky&&(a+="y"),a}},7750:function(e,a,r){var t=r(4117),n=TypeError;e.exports=function(e){if(t(e))throw new n("Can't call method on "+e);return e}},6119:function(e,a,r){var t=r(5745),n=r(3392),i=t("keys");e.exports=function(e){return i[e]||(i[e]=n(e))}},7629:function(e,a,r){var t=r(6395),n=r(4475),i=r(9433),o="__core-js_shared__",l=e.exports=n[o]||i(o,{});(l.versions||(l.versions=[])).push({version:"3.36.1",mode:t?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.36.1/LICENSE",source:"https://github.com/zloirock/core-js"})},5745:function(e,a,r){var t=r(7629);e.exports=function(e,a){return t[e]||(t[e]=a||{})}},1548:function(e,a,r){var t=r(4475),n=r(9039),i=r(7388),o=r(7290),l=r(516),s=r(9088),c=t.structuredClone;e.exports=!!c&&!n((function(){if(l&&i>92||s&&i>94||o&&i>97)return!1;var e=new ArrayBuffer(8),a=c(e,{transfer:[e]});return 0!==e.byteLength||8!==a.byteLength}))},4495:function(e,a,r){var t=r(7388),n=r(9039),i=r(4475),o=i.String;e.exports=!!Object.getOwnPropertySymbols&&!n((function(){var e=Symbol("symbol detection");return!o(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&t&&t<41}))},5610:function(e,a,r){var t=r(1291),n=Math.max,i=Math.min;e.exports=function(e,a){var r=t(e);return r<0?n(r+a,0):i(r,a)}},5854:function(e,a,r){var t=r(2777),n=TypeError;e.exports=function(e){var a=t(e,"number");if("number"==typeof a)throw new n("Can't convert number to bigint");return BigInt(a)}},7696:function(e,a,r){var t=r(1291),n=r(8014),i=RangeError;e.exports=function(e){if(void 0===e)return 0;var a=t(e),r=n(a);if(a!==r)throw new i("Wrong length or index");return r}},5397:function(e,a,r){var t=r(7055),n=r(7750);e.exports=function(e){return t(n(e))}},1291:function(e,a,r){var t=r(741);e.exports=function(e){var a=+e;return a!==a||0===a?0:t(a)}},8014:function(e,a,r){var t=r(1291),n=Math.min;e.exports=function(e){var a=t(e);return a>0?n(a,9007199254740991):0}},8981:function(e,a,r){var t=r(7750),n=Object;e.exports=function(e){return n(t(e))}},2777:function(e,a,r){var t=r(9565),n=r(34),i=r(757),o=r(5966),l=r(4270),s=r(8227),c=TypeError,u=s("toPrimitive");e.exports=function(e,a){if(!n(e)||i(e))return e;var r,s=o(e,u);if(s){if(void 0===a&&(a="default"),r=t(s,e,a),!n(r)||i(r))return r;throw new c("Can't convert object to primitive value")}return void 0===a&&(a="number"),l(e,a)}},6969:function(e,a,r){var t=r(2777),n=r(757);e.exports=function(e){var a=t(e,"string");return n(a)?a:a+""}},2140:function(e,a,r){var t=r(8227),n=t("toStringTag"),i={};i[n]="z",e.exports="[object z]"===String(i)},655:function(e,a,r){var t=r(6955),n=String;e.exports=function(e){if("Symbol"===t(e))throw new TypeError("Cannot convert a Symbol value to a string");return n(e)}},9714:function(e,a,r){var t=r(9088);e.exports=function(e){try{if(t)return Function('return require("'+e+'")')()}catch(a){}}},6823:function(e){var a=String;e.exports=function(e){try{return a(e)}catch(r){return"Object"}}},3392:function(e,a,r){var t=r(9504),n=0,i=Math.random(),o=t(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+o(++n+i,36)}},7040:function(e,a,r){var t=r(4495);e.exports=t&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},8686:function(e,a,r){var t=r(3724),n=r(9039);e.exports=t&&n((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},2812:function(e){var a=TypeError;e.exports=function(e,r){if(e<r)throw new a("Not enough arguments");return e}},8622:function(e,a,r){var t=r(4475),n=r(4901),i=t.WeakMap;e.exports=n(i)&&/native code/.test(String(i))},8227:function(e,a,r){var t=r(4475),n=r(5745),i=r(9297),o=r(3392),l=r(4495),s=r(7040),c=t.Symbol,u=n("wks"),d=s?c["for"]||c:c&&c.withoutSetter||o;e.exports=function(e){return i(u,e)||(u[e]=l&&i(c,e)?c[e]:d("Symbol."+e)),u[e]}},6573:function(e,a,r){var t=r(3724),n=r(2106),i=r(3238),o=ArrayBuffer.prototype;t&&!("detached"in o)&&n(o,"detached",{configurable:!0,get:function(){return i(this)}})},7936:function(e,a,r){var t=r(6518),n=r(5636);n&&t({target:"ArrayBuffer",proto:!0},{transferToFixedLength:function(){return n(this,arguments.length?arguments[0]:void 0,!1)}})},8100:function(e,a,r){var t=r(6518),n=r(5636);n&&t({target:"ArrayBuffer",proto:!0},{transfer:function(){return n(this,arguments.length?arguments[0]:void 0,!0)}})},4114:function(e,a,r){var t=r(6518),n=r(8981),i=r(6198),o=r(4527),l=r(6837),s=r(9039),c=s((function(){return 4294967297!==[].push.call({length:4294967296},1)})),u=function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}},d=c||!u();t({target:"Array",proto:!0,arity:1,forced:d},{push:function(e){var a=n(this),r=i(a),t=arguments.length;l(r+t);for(var s=0;s<t;s++)a[r]=arguments[s],r++;return o(a,r),r}})},9479:function(e,a,r){var t=r(4475),n=r(3724),i=r(2106),o=r(7979),l=r(9039),s=t.RegExp,c=s.prototype,u=n&&l((function(){var e=!0;try{s(".","d")}catch(u){e=!1}var a={},r="",t=e?"dgimsy":"gimsy",n=function(e,t){Object.defineProperty(a,e,{get:function(){return r+=t,!0}})},i={dotAll:"s",global:"g",ignoreCase:"i",multiline:"m",sticky:"y"};for(var o in e&&(i.hasIndices="d"),i)n(o,i[o]);var l=Object.getOwnPropertyDescriptor(c,"flags").get.call(a);return l!==t||r!==t}));u&&i(c,"flags",{configurable:!0,get:o})},7467:function(e,a,r){var t=r(7628),n=r(4644),i=n.aTypedArray,o=n.exportTypedArrayMethod,l=n.getTypedArrayConstructor;o("toReversed",(function(){return t(i(this),l(this))}))},4732:function(e,a,r){var t=r(4644),n=r(9504),i=r(9306),o=r(5370),l=t.aTypedArray,s=t.getTypedArrayConstructor,c=t.exportTypedArrayMethod,u=n(t.TypedArrayPrototype.sort);c("toSorted",(function(e){void 0!==e&&i(e);var a=l(this),r=o(s(a),a);return u(r,e)}))},9577:function(e,a,r){var t=r(9928),n=r(4644),i=r(1108),o=r(1291),l=r(5854),s=n.aTypedArray,c=n.getTypedArrayConstructor,u=n.exportTypedArrayMethod,d=!!function(){try{new Int8Array(1)["with"](2,{valueOf:function(){throw 8}})}catch(e){return 8===e}}();u("with",{with:function(e,a){var r=s(this),n=o(e),u=i(r)?l(a):+a;return t(r,c(r),n,u)}}["with"],!d)},4603:function(e,a,r){var t=r(6840),n=r(9504),i=r(655),o=r(2812),l=URLSearchParams,s=l.prototype,c=n(s.append),u=n(s["delete"]),d=n(s.forEach),h=n([].push),p=new l("a=1&a=2&b=3");p["delete"]("a",1),p["delete"]("b",void 0),p+""!=="a=2"&&t(s,"delete",(function(e){var a=arguments.length,r=a<2?void 0:arguments[1];if(a&&void 0===r)return u(this,e);var t=[];d(this,(function(e,a){h(t,{key:a,value:e})})),o(a,1);var n,l=i(e),s=i(r),p=0,m=0,y=!1,g=t.length;while(p<g)n=t[p++],y||n.key===l?(y=!0,u(this,n.key)):m++;while(m<g)n=t[m++],n.key===l&&n.value===s||c(this,n.key,n.value)}),{enumerable:!0,unsafe:!0})},7566:function(e,a,r){var t=r(6840),n=r(9504),i=r(655),o=r(2812),l=URLSearchParams,s=l.prototype,c=n(s.getAll),u=n(s.has),d=new l("a=1");!d.has("a",2)&&d.has("a",void 0)||t(s,"has",(function(e){var a=arguments.length,r=a<2?void 0:arguments[1];if(a&&void 0===r)return u(this,e);var t=c(this,e);o(a,1);var n=i(r),l=0;while(l<t.length)if(t[l++]===n)return!0;return!1}),{enumerable:!0,unsafe:!0})},8721:function(e,a,r){var t=r(3724),n=r(9504),i=r(2106),o=URLSearchParams.prototype,l=n(o.forEach);t&&!("size"in o)&&i(o,"size",{get:function(){var e=0;return l(this,(function(){e++})),e},configurable:!0,enumerable:!0})},5757:function(e,a,r){r.d(a,{a:function(){return Qn}});var t=[{name:"Aegean Airlines",iataCode:"A3"},{name:"Aeroflot",iataCode:"SU"},{name:"Aerolineas Argentinas",iataCode:"AR"},{name:"Aeromexico",iataCode:"AM"},{name:"Air Algerie",iataCode:"AH"},{name:"Air Arabia",iataCode:"G9"},{name:"Air Canada",iataCode:"AC"},{name:"Air China",iataCode:"CA"},{name:"Air Europa",iataCode:"UX"},{name:"Air France-KLM",iataCode:"AF"},{name:"Air India",iataCode:"AI"},{name:"Air Mauritius",iataCode:"MK"},{name:"Air New Zealand",iataCode:"NZ"},{name:"Air Niugini",iataCode:"PX"},{name:"Air Tahiti",iataCode:"VT"},{name:"Air Tahiti Nui",iataCode:"TN"},{name:"Air Transat",iataCode:"TS"},{name:"AirAsia X",iataCode:"D7"},{name:"AirAsia",iataCode:"AK"},{name:"Aircalin",iataCode:"SB"},{name:"Alaska Airlines",iataCode:"AS"},{name:"Alitalia",iataCode:"AZ"},{name:"All Nippon Airways",iataCode:"NH"},{name:"Allegiant Air",iataCode:"G4"},{name:"American Airlines",iataCode:"AA"},{name:"Asiana Airlines",iataCode:"OZ"},{name:"Avianca",iataCode:"AV"},{name:"Azul Linhas Aereas Brasileiras",iataCode:"AD"},{name:"Azur Air",iataCode:"ZF"},{name:"Beijing Capital Airlines",iataCode:"JD"},{name:"Boliviana de Aviacion",iataCode:"OB"},{name:"British Airways",iataCode:"BA"},{name:"Cathay Pacific",iataCode:"CX"},{name:"Cebu Pacific Air",iataCode:"5J"},{name:"China Airlines",iataCode:"CI"},{name:"China Eastern Airlines",iataCode:"MU"},{name:"China Southern Airlines",iataCode:"CZ"},{name:"Condor",iataCode:"DE"},{name:"Copa Airlines",iataCode:"CM"},{name:"Delta Air Lines",iataCode:"DL"},{name:"Easyfly",iataCode:"VE"},{name:"EasyJet",iataCode:"U2"},{name:"EcoJet",iataCode:"8J"},{name:"Egyptair",iataCode:"MS"},{name:"El Al",iataCode:"LY"},{name:"Emirates Airlines",iataCode:"EK"},{name:"Ethiopian Airlines",iataCode:"ET"},{name:"Etihad Airways",iataCode:"EY"},{name:"EVA Air",iataCode:"BR"},{name:"Fiji Airways",iataCode:"FJ"},{name:"Finnair",iataCode:"AY"},{name:"Flybondi",iataCode:"FO"},{name:"Flydubai",iataCode:"FZ"},{name:"FlySafair",iataCode:"FA"},{name:"Frontier Airlines",iataCode:"F9"},{name:"Garuda Indonesia",iataCode:"GA"},{name:"Go First",iataCode:"G8"},{name:"Gol Linhas Aereas Inteligentes",iataCode:"G3"},{name:"Hainan Airlines",iataCode:"HU"},{name:"Hawaiian Airlines",iataCode:"HA"},{name:"IndiGo Airlines",iataCode:"6E"},{name:"Japan Airlines",iataCode:"JL"},{name:"Jeju Air",iataCode:"7C"},{name:"Jet2",iataCode:"LS"},{name:"JetBlue Airways",iataCode:"B6"},{name:"JetSMART",iataCode:"JA"},{name:"Juneyao Airlines",iataCode:"HO"},{name:"Kenya Airways",iataCode:"KQ"},{name:"Korean Air",iataCode:"KE"},{name:"Kulula.com",iataCode:"MN"},{name:"LATAM Airlines",iataCode:"LA"},{name:"Lion Air",iataCode:"JT"},{name:"LOT Polish Airlines",iataCode:"LO"},{name:"Lufthansa",iataCode:"LH"},{name:"Libyan Airlines",iataCode:"LN"},{name:"Linea Aerea Amaszonas",iataCode:"Z8"},{name:"Malaysia Airlines",iataCode:"MH"},{name:"Nordwind Airlines",iataCode:"N4"},{name:"Norwegian Air Shuttle",iataCode:"DY"},{name:"Oman Air",iataCode:"WY"},{name:"Pakistan International Airlines",iataCode:"PK"},{name:"Pegasus Airlines",iataCode:"PC"},{name:"Philippine Airlines",iataCode:"PR"},{name:"Qantas Group",iataCode:"QF"},{name:"Qatar Airways",iataCode:"QR"},{name:"Republic Airways",iataCode:"YX"},{name:"Royal Air Maroc",iataCode:"AT"},{name:"Ryanair",iataCode:"FR"},{name:"S7 Airlines",iataCode:"S7"},{name:"SAS",iataCode:"SK"},{name:"Satena",iataCode:"9R"},{name:"Saudia",iataCode:"SV"},{name:"Shandong Airlines",iataCode:"SC"},{name:"Sichuan Airlines",iataCode:"3U"},{name:"Singapore Airlines",iataCode:"SQ"},{name:"Sky Airline",iataCode:"H2"},{name:"SkyWest Airlines",iataCode:"OO"},{name:"South African Airways",iataCode:"SA"},{name:"Southwest Airlines",iataCode:"WN"},{name:"SpiceJet",iataCode:"SG"},{name:"Spirit Airlines",iataCode:"NK"},{name:"Spring Airlines",iataCode:"9S"},{name:"SriLankan Airlines",iataCode:"UL"},{name:"Star Peru",iataCode:"2I"},{name:"Sun Country Airlines",iataCode:"SY"},{name:"SunExpress",iataCode:"XQ"},{name:"TAP Air Portugal",iataCode:"TP"},{name:"Thai AirAsia",iataCode:"FD"},{name:"Thai Airways",iataCode:"TG"},{name:"TUI Airways",iataCode:"BY"},{name:"Tunisair",iataCode:"TU"},{name:"Turkish Airlines",iataCode:"TK"},{name:"Ukraine International",iataCode:"PS"},{name:"United Airlines",iataCode:"UA"},{name:"Ural Airlines",iataCode:"U6"},{name:"VietJet Air",iataCode:"VJ"},{name:"Vietnam Airlines",iataCode:"VN"},{name:"Virgin Atlantic Airways",iataCode:"VS"},{name:"Virgin Australia",iataCode:"VA"},{name:"VivaAerobus",iataCode:"VB"},{name:"VOEPASS Linhas Aereas",iataCode:"2Z"},{name:"Volaris",iataCode:"Y4"},{name:"WestJet",iataCode:"WS"},{name:"Wingo",iataCode:"P5"},{name:"Wizz Air",iataCode:"W6"}],n=[{name:"Aerospatiale/BAC Concorde",iataTypeCode:"SSC"},{name:"Airbus A300",iataTypeCode:"AB3"},{name:"Airbus A310",iataTypeCode:"310"},{name:"Airbus A310-200",iataTypeCode:"312"},{name:"Airbus A310-300",iataTypeCode:"313"},{name:"Airbus A318",iataTypeCode:"318"},{name:"Airbus A319",iataTypeCode:"319"},{name:"Airbus A319neo",iataTypeCode:"31N"},{name:"Airbus A320",iataTypeCode:"320"},{name:"Airbus A320neo",iataTypeCode:"32N"},{name:"Airbus A321",iataTypeCode:"321"},{name:"Airbus A321neo",iataTypeCode:"32Q"},{name:"Airbus A330",iataTypeCode:"330"},{name:"Airbus A330-200",iataTypeCode:"332"},{name:"Airbus A330-300",iataTypeCode:"333"},{name:"Airbus A330-800neo",iataTypeCode:"338"},{name:"Airbus A330-900neo",iataTypeCode:"339"},{name:"Airbus A340",iataTypeCode:"340"},{name:"Airbus A340-200",iataTypeCode:"342"},{name:"Airbus A340-300",iataTypeCode:"343"},{name:"Airbus A340-500",iataTypeCode:"345"},{name:"Airbus A340-600",iataTypeCode:"346"},{name:"Airbus A350",iataTypeCode:"350"},{name:"Airbus A350-900",iataTypeCode:"359"},{name:"Airbus A350-1000",iataTypeCode:"351"},{name:"Airbus A380",iataTypeCode:"380"},{name:"Airbus A380-800",iataTypeCode:"388"},{name:"Antonov An-12",iataTypeCode:"ANF"},{name:"Antonov An-24",iataTypeCode:"AN4"},{name:"Antonov An-26",iataTypeCode:"A26"},{name:"Antonov An-28",iataTypeCode:"A28"},{name:"Antonov An-30",iataTypeCode:"A30"},{name:"Antonov An-32",iataTypeCode:"A32"},{name:"Antonov An-72",iataTypeCode:"AN7"},{name:"Antonov An-124 Ruslan",iataTypeCode:"A4F"},{name:"Antonov An-140",iataTypeCode:"A40"},{name:"Antonov An-148",iataTypeCode:"A81"},{name:"Antonov An-158",iataTypeCode:"A58"},{name:"Antonov An-225 Mriya",iataTypeCode:"A5F"},{name:"Boeing 707",iataTypeCode:"703"},{name:"Boeing 717",iataTypeCode:"717"},{name:"Boeing 720B",iataTypeCode:"B72"},{name:"Boeing 727",iataTypeCode:"727"},{name:"Boeing 727-100",iataTypeCode:"721"},{name:"Boeing 727-200",iataTypeCode:"722"},{name:"Boeing 737 MAX 7",iataTypeCode:"7M7"},{name:"Boeing 737 MAX 8",iataTypeCode:"7M8"},{name:"Boeing 737 MAX 9",iataTypeCode:"7M9"},{name:"Boeing 737 MAX 10",iataTypeCode:"7MJ"},{name:"Boeing 737",iataTypeCode:"737"},{name:"Boeing 737-100",iataTypeCode:"731"},{name:"Boeing 737-200",iataTypeCode:"732"},{name:"Boeing 737-300",iataTypeCode:"733"},{name:"Boeing 737-400",iataTypeCode:"734"},{name:"Boeing 737-500",iataTypeCode:"735"},{name:"Boeing 737-600",iataTypeCode:"736"},{name:"Boeing 737-700",iataTypeCode:"73G"},{name:"Boeing 737-800",iataTypeCode:"738"},{name:"Boeing 737-900",iataTypeCode:"739"},{name:"Boeing 747",iataTypeCode:"747"},{name:"Boeing 747-100",iataTypeCode:"741"},{name:"Boeing 747-200",iataTypeCode:"742"},{name:"Boeing 747-300",iataTypeCode:"743"},{name:"Boeing 747-400",iataTypeCode:"744"},{name:"Boeing 747-400D",iataTypeCode:"74J"},{name:"Boeing 747-8",iataTypeCode:"748"},{name:"Boeing 747SP",iataTypeCode:"74L"},{name:"Boeing 747SR",iataTypeCode:"74R"},{name:"Boeing 757",iataTypeCode:"757"},{name:"Boeing 757-200",iataTypeCode:"752"},{name:"Boeing 757-300",iataTypeCode:"753"},{name:"Boeing 767",iataTypeCode:"767"},{name:"Boeing 767-200",iataTypeCode:"762"},{name:"Boeing 767-300",iataTypeCode:"763"},{name:"Boeing 767-400",iataTypeCode:"764"},{name:"Boeing 777",iataTypeCode:"777"},{name:"Boeing 777-200",iataTypeCode:"772"},{name:"Boeing 777-200LR",iataTypeCode:"77L"},{name:"Boeing 777-300",iataTypeCode:"773"},{name:"Boeing 777-300ER",iataTypeCode:"77W"},{name:"Boeing 787",iataTypeCode:"787"},{name:"Boeing 787-8",iataTypeCode:"788"},{name:"Boeing 787-9",iataTypeCode:"789"},{name:"Boeing 787-10",iataTypeCode:"781"},{name:"Canadair Challenger",iataTypeCode:"CCJ"},{name:"Canadair CL-44",iataTypeCode:"CL4"},{name:"Canadair Regional Jet 100",iataTypeCode:"CR1"},{name:"Canadair Regional Jet 200",iataTypeCode:"CR2"},{name:"Canadair Regional Jet 700",iataTypeCode:"CR7"},{name:"Canadair Regional Jet 705",iataTypeCode:"CRA"},{name:"Canadair Regional Jet 900",iataTypeCode:"CR9"},{name:"Canadair Regional Jet 1000",iataTypeCode:"CRK"},{name:"De Havilland Canada DHC-2 Beaver",iataTypeCode:"DHP"},{name:"De Havilland Canada DHC-2 Turbo-Beaver",iataTypeCode:"DHR"},{name:"De Havilland Canada DHC-3 Otter",iataTypeCode:"DHL"},{name:"De Havilland Canada DHC-4 Caribou",iataTypeCode:"DHC"},{name:"De Havilland Canada DHC-6 Twin Otter",iataTypeCode:"DHT"},{name:"De Havilland Canada DHC-7 Dash 7",iataTypeCode:"DH7"},{name:"De Havilland Canada DHC-8-100 Dash 8 / 8Q",iataTypeCode:"DH1"},{name:"De Havilland Canada DHC-8-200 Dash 8 / 8Q",iataTypeCode:"DH2"},{name:"De Havilland Canada DHC-8-300 Dash 8 / 8Q",iataTypeCode:"DH3"},{name:"De Havilland Canada DHC-8-400 Dash 8Q",iataTypeCode:"DH4"},{name:"De Havilland DH.104 Dove",iataTypeCode:"DHD"},{name:"De Havilland DH.114 Heron",iataTypeCode:"DHH"},{name:"Douglas DC-3",iataTypeCode:"D3F"},{name:"Douglas DC-6",iataTypeCode:"D6F"},{name:"Douglas DC-8-50",iataTypeCode:"D8T"},{name:"Douglas DC-8-62",iataTypeCode:"D8L"},{name:"Douglas DC-8-72",iataTypeCode:"D8Q"},{name:"Douglas DC-9-10",iataTypeCode:"D91"},{name:"Douglas DC-9-20",iataTypeCode:"D92"},{name:"Douglas DC-9-30",iataTypeCode:"D93"},{name:"Douglas DC-9-40",iataTypeCode:"D94"},{name:"Douglas DC-9-50",iataTypeCode:"D95"},{name:"Douglas DC-10",iataTypeCode:"D10"},{name:"Douglas DC-10-10",iataTypeCode:"D1X"},{name:"Douglas DC-10-30",iataTypeCode:"D1Y"},{name:"Embraer 170",iataTypeCode:"E70"},{name:"Embraer 175",iataTypeCode:"E75"},{name:"Embraer 190",iataTypeCode:"E90"},{name:"Embraer 195",iataTypeCode:"E95"},{name:"Embraer E190-E2",iataTypeCode:"290"},{name:"Embraer E195-E2",iataTypeCode:"295"},{name:"Embraer EMB.110 Bandeirante",iataTypeCode:"EMB"},{name:"Embraer EMB.120 Brasilia",iataTypeCode:"EM2"},{name:"Embraer Legacy 600",iataTypeCode:"ER3"},{name:"Embraer Phenom 100",iataTypeCode:"EP1"},{name:"Embraer Phenom 300",iataTypeCode:"EP3"},{name:"Embraer RJ135",iataTypeCode:"ER3"},{name:"Embraer RJ140",iataTypeCode:"ERD"},{name:"Embraer RJ145 Amazon",iataTypeCode:"ER4"},{name:"Ilyushin IL18",iataTypeCode:"IL8"},{name:"Ilyushin IL62",iataTypeCode:"IL6"},{name:"Ilyushin IL76",iataTypeCode:"IL7"},{name:"Ilyushin IL86",iataTypeCode:"ILW"},{name:"Ilyushin IL96-300",iataTypeCode:"I93"},{name:"Ilyushin IL114",iataTypeCode:"I14"},{name:"Lockheed L-182 / 282 / 382 (L-100) Hercules",iataTypeCode:"LOH"},{name:"Lockheed L-188 Electra",iataTypeCode:"LOE"},{name:"Lockheed L-1011 Tristar",iataTypeCode:"L10"},{name:"Lockheed L-1049 Super Constellation",iataTypeCode:"L49"},{name:"McDonnell Douglas MD11",iataTypeCode:"M11"},{name:"McDonnell Douglas MD80",iataTypeCode:"M80"},{name:"McDonnell Douglas MD81",iataTypeCode:"M81"},{name:"McDonnell Douglas MD82",iataTypeCode:"M82"},{name:"McDonnell Douglas MD83",iataTypeCode:"M83"},{name:"McDonnell Douglas MD87",iataTypeCode:"M87"},{name:"McDonnell Douglas MD88",iataTypeCode:"M88"},{name:"McDonnell Douglas MD90",iataTypeCode:"M90"},{name:"Sukhoi Superjet 100-95",iataTypeCode:"SU9"},{name:"Tupolev Tu-134",iataTypeCode:"TU3"},{name:"Tupolev Tu-154",iataTypeCode:"TU5"},{name:"Tupolev Tu-204",iataTypeCode:"T20"},{name:"Yakovlev Yak-40",iataTypeCode:"YK4"},{name:"Yakovlev Yak-42",iataTypeCode:"YK2"}],i=[{name:"Adelaide International Airport",iataCode:"ADL"},{name:"Adolfo Suarez Madrid-Barajas Airport",iataCode:"MAD"},{name:"Aeroparque Jorge Newbery Airport",iataCode:"AEP"},{name:"Afonso Pena International Airport",iataCode:"CWB"},{name:"Alfonso Bonilla Aragon International Airport",iataCode:"CLO"},{name:"Amsterdam Airport Schiphol",iataCode:"AMS"},{name:"Arturo Merino Benitez International Airport",iataCode:"SCL"},{name:"Auckland International Airport",iataCode:"AKL"},{name:"Beijing Capital International Airport",iataCode:"PEK"},{name:"Belem Val de Cans International Airport",iataCode:"BEL"},{name:"Belo Horizonte Tancredo Neves International Airport",iataCode:"CNF"},{name:"Berlin-Tegel Airport",iataCode:"TXL"},{name:"Bole International Airport",iataCode:"ADD"},{name:"Brasilia-Presidente Juscelino Kubitschek International Airport",iataCode:"BSB"},{name:"Brisbane International Airport",iataCode:"BNE"},{name:"Brussels Airport",iataCode:"BRU"},{name:"Cairns Airport",iataCode:"CNS"},{name:"Cairo International Airport",iataCode:"CAI"},{name:"Canberra Airport",iataCode:"CBR"},{name:"Capetown International Airport",iataCode:"CPT"},{name:"Charles de Gaulle International Airport",iataCode:"CDG"},{name:"Charlotte Douglas International Airport",iataCode:"CLT"},{name:"Chengdu Shuangliu International Airport",iataCode:"CTU"},{name:"Chhatrapati Shivaji International Airport",iataCode:"BOM"},{name:"Chicago O'Hare International Airport",iataCode:"ORD"},{name:"Chongqing Jiangbei International Airport",iataCode:"CKG"},{name:"Christchurch International Airport",iataCode:"CHC"},{name:"Copenhagen Kastrup Airport",iataCode:"CPH"},{name:"Dallas Fort Worth International Airport",iataCode:"DFW"},{name:"Daniel K. Inouye International Airport",iataCode:"HNL"},{name:"Denver International Airport",iataCode:"DEN"},{name:"Don Mueang International Airport",iataCode:"DMK"},{name:"Dubai International Airport",iataCode:"DXB"},{name:"Dublin Airport",iataCode:"DUB"},{name:"Dusseldorf Airport",iataCode:"DUS"},{name:"El Dorado International Airport",iataCode:"BOG"},{name:"Eleftherios Venizelos International Airport",iataCode:"ATH"},{name:"Faa'a International Airport",iataCode:"PPT"},{name:"Fort Lauderdale Hollywood International Airport",iataCode:"FLL"},{name:"Fortaleza Pinto Martins International Airport",iataCode:"FOR"},{name:"Frankfurt am Main Airport",iataCode:"FRA"},{name:"George Bush Intercontinental Houston Airport",iataCode:"IAH"},{name:"Gold Coast Airport",iataCode:"OOL"},{name:"Guarulhos - Governador Andre Franco Montoro International Airport",iataCode:"GRU"},{name:"Hartsfield-Jackson Atlanta International Airport",iataCode:"ATL"},{name:"Helsinki Vantaa Airport",iataCode:"HEL"},{name:"Hobart International Airport",iataCode:"HBA"},{name:"Hong Kong International Airport",iataCode:"HKG"},{name:"Houari Boumediene Airport",iataCode:"ALG"},{name:"Hurgada International Airport",iataCode:"HRG"},{name:"Incheon International Airport",iataCode:"ICN"},{name:"Indira Gandhi International Airport",iataCode:"DEL"},{name:"Istanbul Airport",iataCode:"IST"},{name:"Jacksons International Airport",iataCode:"POM"},{name:"Jeju International Airport",iataCode:"CJU"},{name:"John F Kennedy International Airport",iataCode:"JFK"},{name:"Jorge Chavez International Airport",iataCode:"LIM"},{name:"Jose Maria Cordova International Airport",iataCode:"MDE"},{name:"Josep Tarradellas Barcelona-El Prat Airport",iataCode:"BCN"},{name:"Kahului Airport",iataCode:"OGG"},{name:"King Abdulaziz International Airport",iataCode:"JED"},{name:"Kuala Lumpur International Airport",iataCode:"KUL"},{name:"Kunming Changshui International Airport",iataCode:"KMG"},{name:"La Tontouta International Airport",iataCode:"NOU"},{name:"Leonardo da Vinci-Fiumicino Airport",iataCode:"FCO"},{name:"London Heathrow Airport",iataCode:"LHR"},{name:"Los Angeles International Airport",iataCode:"LAX"},{name:"McCarran International Airport",iataCode:"LAS"},{name:"Melbourne International Airport",iataCode:"MEL"},{name:"Mexico City International Airport",iataCode:"MEX"},{name:"Miami International Airport",iataCode:"MIA"},{name:"Ministro Pistarini International Airport",iataCode:"EZE"},{name:"Minneapolis-St Paul International/Wold-Chamberlain Airport",iataCode:"MSP"},{name:"Mohammed V International Airport",iataCode:"CMN"},{name:"Moscow Domodedovo Airport",iataCode:"DME"},{name:"Munich Airport",iataCode:"MUC"},{name:"Murtala Muhammed International Airport",iataCode:"LOS"},{name:"Nadi International Airport",iataCode:"NAN"},{name:"Nairobi Jomo Kenyatta International Airport",iataCode:"NBO"},{name:"Narita International Airport",iataCode:"NRT"},{name:"Newark Liberty International Airport",iataCode:"EWR"},{name:"Ninoy Aquino International Airport",iataCode:"MNL"},{name:"Noumea Magenta Airport",iataCode:"GEA"},{name:"O. R. Tambo International Airport",iataCode:"JNB"},{name:"Orlando International Airport",iataCode:"MCO"},{name:"Oslo Lufthavn",iataCode:"OSL"},{name:"Perth Airport",iataCode:"PER"},{name:"Phoenix Sky Harbor International Airport",iataCode:"PHX"},{name:"Recife Guararapes-Gilberto Freyre International Airport",iataCode:"REC"},{name:"Rio de Janeiro Galeao International Airport",iataCode:"GIG"},{name:"Salgado Filho International Airport",iataCode:"POA"},{name:"Salvador Deputado Luis Eduardo Magalhaes International Airport",iataCode:"SSA"},{name:"San Francisco International Airport",iataCode:"SFO"},{name:"Santos Dumont Airport",iataCode:"SDU"},{name:"Sao Paulo-Congonhas Airport",iataCode:"CGH"},{name:"Seattle Tacoma International Airport",iataCode:"SEA"},{name:"Shanghai Hongqiao International Airport",iataCode:"SHA"},{name:"Shanghai Pudong International Airport",iataCode:"PVG"},{name:"Shenzhen Bao'an International Airport",iataCode:"SZX"},{name:"Sheremetyevo International Airport",iataCode:"SVO"},{name:"Singapore Changi Airport",iataCode:"SIN"},{name:"Soekarno-Hatta International Airport",iataCode:"CGK"},{name:'Stockholm-Arlanda Airport"',iataCode:"ARN"},{name:"Suvarnabhumi Airport",iataCode:"BKK"},{name:"Sydney Kingsford Smith International Airport",iataCode:"SYD"},{name:"Taiwan Taoyuan International Airport",iataCode:"TPE"},{name:"Tan Son Nhat International Airport",iataCode:"SGN"},{name:"Tokyo Haneda International Airport",iataCode:"HND"},{name:"Toronto Pearson International Airport",iataCode:"YYZ"},{name:"Tunis Carthage International Airport",iataCode:"TUN"},{name:"Vancouver International Airport",iataCode:"YVR"},{name:"Vienna International Airport",iataCode:"VIE"},{name:"Viracopos International Airport",iataCode:"VCP"},{name:"Vnukovo International Airport",iataCode:"VKO"},{name:"Wellington International Airport",iataCode:"WLG"},{name:"Xi'an Xianyang International Airport",iataCode:"XIY"},{name:"Zhukovsky International Airport",iataCode:"ZIA"},{name:"Zurich Airport",iataCode:"ZRH"}],o={airline:t,airplane:n,airport:i},l=o,s=["Giant panda","Spectacled bear","Sun bear","Sloth bear","American black bear","Asian black bear","Brown bear","Polar bear"],c=["Red-throated Loon","Arctic Loon","Pacific Loon","Common Loon","Yellow-billed Loon","Least Grebe","Pied-billed Grebe","Horned Grebe","Red-necked Grebe","Eared Grebe","Western Grebe","Clark's Grebe","Yellow-nosed Albatross","Shy Albatross","Black-browed Albatross","Wandering Albatross","Laysan Albatross","Black-footed Albatross","Short-tailed Albatross","Northern Fulmar","Herald Petrel","Murphy's Petrel","Mottled Petrel","Black-capped Petrel","Cook's Petrel","Stejneger's Petrel","White-chinned Petrel","Streaked Shearwater","Cory's Shearwater","Pink-footed Shearwater","Flesh-footed Shearwater","Greater Shearwater","Wedge-tailed Shearwater","Buller's Shearwater","Sooty Shearwater","Short-tailed Shearwater","Manx Shearwater","Black-vented Shearwater","Audubon's Shearwater","Little Shearwater","Wilson's Storm-Petrel","White-faced Storm-Petrel","European Storm-Petrel","Fork-tailed Storm-Petrel","Leach's Storm-Petrel","Ashy Storm-Petrel","Band-rumped Storm-Petrel","Wedge-rumped Storm-Petrel","Black Storm-Petrel","Least Storm-Petrel","White-tailed Tropicbird","Red-billed Tropicbird","Red-tailed Tropicbird","Masked Booby","Blue-footed Booby","Brown Booby","Red-footed Booby","Northern Gannet","American White Pelican","Brown Pelican","Brandt's Cormorant","Neotropic Cormorant","Double-crested Cormorant","Great Cormorant","Red-faced Cormorant","Pelagic Cormorant","Anhinga","Magnificent Frigatebird","Great Frigatebird","Lesser Frigatebird","American Bittern","Yellow Bittern","Least Bittern","Great Blue Heron","Great Egret","Chinese Egret","Little Egret","Western Reef-Heron","Snowy Egret","Little Blue Heron","Tricolored Heron","Reddish Egret","Cattle Egret","Green Heron","Black-crowned Night-Heron","Yellow-crowned Night-Heron","White Ibis","Scarlet Ibis","Glossy Ibis","White-faced Ibis","Roseate Spoonbill","Jabiru","Wood Stork","Black Vulture","Turkey Vulture","California Condor","Greater Flamingo","Black-bellied Whistling-Duck","Fulvous Whistling-Duck","Bean Goose","Pink-footed Goose","Greater White-fronted Goose","Lesser White-fronted Goose","Emperor Goose","Snow Goose","Ross's Goose","Canada Goose","Brant","Barnacle Goose","Mute Swan","Trumpeter Swan","Tundra Swan","Whooper Swan","Muscovy Duck","Wood Duck","Gadwall","Falcated Duck","Eurasian Wigeon","American Wigeon","American Black Duck","Mallard","Mottled Duck","Spot-billed Duck","Blue-winged Teal","Cinnamon Teal","Northern Shoveler","White-cheeked Pintail","Northern Pintail","Garganey","Baikal Teal","Green-winged Teal","Canvasback","Redhead","Common Pochard","Ring-necked Duck","Tufted Duck","Greater Scaup","Lesser Scaup","Steller's Eider","Spectacled Eider","King Eider","Common Eider","Harlequin Duck","Labrador Duck","Surf Scoter","White-winged Scoter","Black Scoter","Oldsquaw","Bufflehead","Common Goldeneye","Barrow's Goldeneye","Smew","Hooded Merganser","Common Merganser","Red-breasted Merganser","Masked Duck","Ruddy Duck","Osprey","Hook-billed Kite","Swallow-tailed Kite","White-tailed Kite","Snail Kite","Mississippi Kite","Bald Eagle","White-tailed Eagle","Steller's Sea-Eagle","Northern Harrier","Sharp-shinned Hawk","Cooper's Hawk","Northern Goshawk","Crane Hawk","Gray Hawk","Common Black-Hawk","Harris's Hawk","Roadside Hawk","Red-shouldered Hawk","Broad-winged Hawk","Short-tailed Hawk","Swainson's Hawk","White-tailed Hawk","Zone-tailed Hawk","Red-tailed Hawk","Ferruginous Hawk","Rough-legged Hawk","Golden Eagle","Collared Forest-Falcon","Crested Caracara","Eurasian Kestrel","American Kestrel","Merlin","Eurasian Hobby","Aplomado Falcon","Gyrfalcon","Peregrine Falcon","Prairie Falcon","Plain Chachalaca","Chukar","Himalayan Snowcock","Gray Partridge","Ring-necked Pheasant","Ruffed Grouse","Sage Grouse","Spruce Grouse","Willow Ptarmigan","Rock Ptarmigan","White-tailed Ptarmigan","Blue Grouse","Sharp-tailed Grouse","Greater Prairie-chicken","Lesser Prairie-chicken","Wild Turkey","Mountain Quail","Scaled Quail","California Quail","Gambel's Quail","Northern Bobwhite","Montezuma Quail","Yellow Rail","Black Rail","Corn Crake","Clapper Rail","King Rail","Virginia Rail","Sora","Paint-billed Crake","Spotted Rail","Purple Gallinule","Azure Gallinule","Common Moorhen","Eurasian Coot","American Coot","Limpkin","Sandhill Crane","Common Crane","Whooping Crane","Double-striped Thick-knee","Northern Lapwing","Black-bellied Plover","European Golden-Plover","American Golden-Plover","Pacific Golden-Plover","Mongolian Plover","Collared Plover","Snowy Plover","Wilson's Plover","Common Ringed Plover","Semipalmated Plover","Piping Plover","Little Ringed Plover","Killdeer","Mountain Plover","Eurasian Dotterel","Eurasian Oystercatcher","American Oystercatcher","Black Oystercatcher","Black-winged Stilt","Black-necked Stilt","American Avocet","Northern Jacana","Common Greenshank","Greater Yellowlegs","Lesser Yellowlegs","Marsh Sandpiper","Spotted Redshank","Wood Sandpiper","Green Sandpiper","Solitary Sandpiper","Willet","Wandering Tattler","Gray-tailed Tattler","Common Sandpiper","Spotted Sandpiper","Terek Sandpiper","Upland Sandpiper","Little Curlew","Eskimo Curlew","Whimbrel","Bristle-thighed Curlew","Far Eastern Curlew","Slender-billed Curlew","Eurasian Curlew","Long-billed Curlew","Black-tailed Godwit","Hudsonian Godwit","Bar-tailed Godwit","Marbled Godwit","Ruddy Turnstone","Black Turnstone","Surfbird","Great Knot","Red Knot","Sanderling","Semipalmated Sandpiper","Western Sandpiper","Red-necked Stint","Little Stint","Temminck's Stint","Long-toed Stint","Least Sandpiper","White-rumped Sandpiper","Baird's Sandpiper","Pectoral Sandpiper","Sharp-tailed Sandpiper","Purple Sandpiper","Rock Sandpiper","Dunlin","Curlew Sandpiper","Stilt Sandpiper","Spoonbill Sandpiper","Broad-billed Sandpiper","Buff-breasted Sandpiper","Ruff","Short-billed Dowitcher","Long-billed Dowitcher","Jack Snipe","Common Snipe","Pin-tailed Snipe","Eurasian Woodcock","American Woodcock","Wilson's Phalarope","Red-necked Phalarope","Red Phalarope","Oriental Pratincole","Great Skua","South Polar Skua","Pomarine Jaeger","Parasitic Jaeger","Long-tailed Jaeger","Laughing Gull","Franklin's Gull","Little Gull","Black-headed Gull","Bonaparte's Gull","Heermann's Gull","Band-tailed Gull","Black-tailed Gull","Mew Gull","Ring-billed Gull","California Gull","Herring Gull","Yellow-legged Gull","Thayer's Gull","Iceland Gull","Lesser Black-backed Gull","Slaty-backed Gull","Yellow-footed Gull","Western Gull","Glaucous-winged Gull","Glaucous Gull","Great Black-backed Gull","Sabine's Gull","Black-legged Kittiwake","Red-legged Kittiwake","Ross's Gull","Ivory Gull","Gull-billed Tern","Caspian Tern","Royal Tern","Elegant Tern","Sandwich Tern","Roseate Tern","Common Tern","Arctic Tern","Forster's Tern","Least Tern","Aleutian Tern","Bridled Tern","Sooty Tern","Large-billed Tern","White-winged Tern","Whiskered Tern","Black Tern","Brown Noddy","Black Noddy","Black Skimmer","Dovekie","Common Murre","Thick-billed Murre","Razorbill","Great Auk","Black Guillemot","Pigeon Guillemot","Long-billed Murrelet","Marbled Murrelet","Kittlitz's Murrelet","Xantus's Murrelet","Craveri's Murrelet","Ancient Murrelet","Cassin's Auklet","Parakeet Auklet","Least Auklet","Whiskered Auklet","Crested Auklet","Rhinoceros Auklet","Atlantic Puffin","Horned Puffin","Tufted Puffin","Rock Dove","Scaly-naped Pigeon","White-crowned Pigeon","Red-billed Pigeon","Band-tailed Pigeon","Oriental Turtle-Dove","European Turtle-Dove","Eurasian Collared-Dove","Spotted Dove","White-winged Dove","Zenaida Dove","Mourning Dove","Passenger Pigeon","Inca Dove","Common Ground-Dove","Ruddy Ground-Dove","White-tipped Dove","Key West Quail-Dove","Ruddy Quail-Dove","Budgerigar","Monk Parakeet","Carolina Parakeet","Thick-billed Parrot","White-winged Parakeet","Red-crowned Parrot","Common Cuckoo","Oriental Cuckoo","Black-billed Cuckoo","Yellow-billed Cuckoo","Mangrove Cuckoo","Greater Roadrunner","Smooth-billed Ani","Groove-billed Ani","Barn Owl","Flammulated Owl","Oriental Scops-Owl","Western Screech-Owl","Eastern Screech-Owl","Whiskered Screech-Owl","Great Horned Owl","Snowy Owl","Northern Hawk Owl","Northern Pygmy-Owl","Ferruginous Pygmy-Owl","Elf Owl","Burrowing Owl","Mottled Owl","Spotted Owl","Barred Owl","Great Gray Owl","Long-eared Owl","Short-eared Owl","Boreal Owl","Northern Saw-whet Owl","Lesser Nighthawk","Common Nighthawk","Antillean Nighthawk","Common Pauraque","Common Poorwill","Chuck-will's-widow","Buff-collared Nightjar","Whip-poor-will","Jungle Nightjar","Black Swift","White-collared Swift","Chimney Swift","Vaux's Swift","White-throated Needletail","Common Swift","Fork-tailed Swift","White-throated Swift","Antillean Palm Swift","Green Violet-ear","Green-breasted Mango","Broad-billed Hummingbird","White-eared Hummingbird","Xantus's Hummingbird","Berylline Hummingbird","Buff-bellied Hummingbird","Cinnamon Hummingbird","Violet-crowned Hummingbird","Blue-throated Hummingbird","Magnificent Hummingbird","Plain-capped Starthroat","Bahama Woodstar","Lucifer Hummingbird","Ruby-throated Hummingbird","Black-chinned Hummingbird","Anna's Hummingbird","Costa's Hummingbird","Calliope Hummingbird","Bumblebee Hummingbird","Broad-tailed Hummingbird","Rufous Hummingbird","Allen's Hummingbird","Elegant Trogon","Eared Trogon","Hoopoe","Ringed Kingfisher","Belted Kingfisher","Green Kingfisher","Eurasian Wryneck","Lewis's Woodpecker","Red-headed Woodpecker","Acorn Woodpecker","Gila Woodpecker","Golden-fronted Woodpecker","Red-bellied Woodpecker","Williamson's Sapsucker","Yellow-bellied Sapsucker","Red-naped Sapsucker","Red-breasted Sapsucker","Great Spotted Woodpecker","Ladder-backed Woodpecker","Nuttall's Woodpecker","Downy Woodpecker","Hairy Woodpecker","Strickland's Woodpecker","Red-cockaded Woodpecker","White-headed Woodpecker","Three-toed Woodpecker","Black-backed Woodpecker","Northern Flicker","Gilded Flicker","Pileated Woodpecker","Ivory-billed Woodpecker","Northern Beardless-Tyrannulet","Greenish Elaenia","Caribbean Elaenia","Tufted Flycatcher","Olive-sided Flycatcher","Greater Pewee","Western Wood-Pewee","Eastern Wood-Pewee","Yellow-bellied Flycatcher","Acadian Flycatcher","Alder Flycatcher","Willow Flycatcher","Least Flycatcher","Hammond's Flycatcher","Dusky Flycatcher","Gray Flycatcher","Pacific-slope Flycatcher","Cordilleran Flycatcher","Buff-breasted Flycatcher","Black Phoebe","Eastern Phoebe","Say's Phoebe","Vermilion Flycatcher","Dusky-capped Flycatcher","Ash-throated Flycatcher","Nutting's Flycatcher","Great Crested Flycatcher","Brown-crested Flycatcher","La Sagra's Flycatcher","Great Kiskadee","Sulphur-bellied Flycatcher","Variegated Flycatcher","Tropical Kingbird","Couch's Kingbird","Cassin's Kingbird","Thick-billed Kingbird","Western Kingbird","Eastern Kingbird","Gray Kingbird","Loggerhead Kingbird","Scissor-tailed Flycatcher","Fork-tailed Flycatcher","Rose-throated Becard","Masked Tityra","Brown Shrike","Loggerhead Shrike","Northern Shrike","White-eyed Vireo","Thick-billed Vireo","Bell's Vireo","Black-capped Vireo","Gray Vireo","Yellow-throated Vireo","Plumbeous Vireo","Cassin's Vireo","Blue-headed Vireo","Hutton's Vireo","Warbling Vireo","Philadelphia Vireo","Red-eyed Vireo","Yellow-green Vireo","Black-whiskered Vireo","Yucatan Vireo","Gray Jay","Steller's Jay","Blue Jay","Green Jay","Brown Jay","Florida Scrub-Jay","Island Scrub-Jay","Western Scrub-Jay","Mexican Jay","Pinyon Jay","Clark's Nutcracker","Black-billed Magpie","Yellow-billed Magpie","Eurasian Jackdaw","American Crow","Northwestern Crow","Tamaulipas Crow","Fish Crow","Chihuahuan Raven","Common Raven","Sky Lark","Horned Lark","Purple Martin","Cuban Martin","Gray-breasted Martin","Southern Martin","Brown-chested Martin","Tree Swallow","Violet-green Swallow","Bahama Swallow","Northern Rough-winged Swallow","Bank Swallow","Cliff Swallow","Cave Swallow","Barn Swallow","Common House-Martin","Carolina Chickadee","Black-capped Chickadee","Mountain Chickadee","Mexican Chickadee","Chestnut-backed Chickadee","Boreal Chickadee","Gray-headed Chickadee","Bridled Titmouse","Oak Titmouse","Juniper Titmouse","Tufted Titmouse","Verdin","Bushtit","Red-breasted Nuthatch","White-breasted Nuthatch","Pygmy Nuthatch","Brown-headed Nuthatch","Brown Creeper","Cactus Wren","Rock Wren","Canyon Wren","Carolina Wren","Bewick's Wren","House Wren","Winter Wren","Sedge Wren","Marsh Wren","American Dipper","Red-whiskered Bulbul","Golden-crowned Kinglet","Ruby-crowned Kinglet","Middendorff's Grasshopper-Warbler","Lanceolated Warbler","Wood Warbler","Dusky Warbler","Arctic Warbler","Blue-gray Gnatcatcher","California Gnatcatcher","Black-tailed Gnatcatcher","Black-capped Gnatcatcher","Narcissus Flycatcher","Mugimaki Flycatcher","Red-breasted Flycatcher","Siberian Flycatcher","Gray-spotted Flycatcher","Asian Brown Flycatcher","Siberian Rubythroat","Bluethroat","Siberian Blue Robin","Red-flanked Bluetail","Northern Wheatear","Stonechat","Eastern Bluebird","Western Bluebird","Mountain Bluebird","Townsend's Solitaire","Veery","Gray-cheeked Thrush","Bicknell's Thrush","Swainson's Thrush","Hermit Thrush","Wood Thrush","Eurasian Blackbird","Eyebrowed Thrush","Dusky Thrush","Fieldfare","Redwing","Clay-colored Robin","White-throated Robin","Rufous-backed Robin","American Robin","Varied Thrush","Aztec Thrush","Wrentit","Gray Catbird","Black Catbird","Northern Mockingbird","Bahama Mockingbird","Sage Thrasher","Brown Thrasher","Long-billed Thrasher","Bendire's Thrasher","Curve-billed Thrasher","California Thrasher","Crissal Thrasher","Le Conte's Thrasher","Blue Mockingbird","European Starling","Crested Myna","Siberian Accentor","Yellow Wagtail","Citrine Wagtail","Gray Wagtail","White Wagtail","Black-backed Wagtail","Tree Pipit","Olive-backed Pipit","Pechora Pipit","Red-throated Pipit","American Pipit","Sprague's Pipit","Bohemian Waxwing","Cedar Waxwing","Gray Silky-flycatcher","Phainopepla","Olive Warbler","Bachman's Warbler","Blue-winged Warbler","Golden-winged Warbler","Tennessee Warbler","Orange-crowned Warbler","Nashville Warbler","Virginia's Warbler","Colima Warbler","Lucy's Warbler","Crescent-chested Warbler","Northern Parula","Tropical Parula","Yellow Warbler","Chestnut-sided Warbler","Magnolia Warbler","Cape May Warbler","Black-throated Blue Warbler","Yellow-rumped Warbler","Black-throated Gray Warbler","Golden-cheeked Warbler","Black-throated Green Warbler","Townsend's Warbler","Hermit Warbler","Blackburnian Warbler","Yellow-throated Warbler","Grace's Warbler","Pine Warbler","Kirtland's Warbler","Prairie Warbler","Palm Warbler","Bay-breasted Warbler","Blackpoll Warbler","Cerulean Warbler","Black-and-white Warbler","American Redstart","Prothonotary Warbler","Worm-eating Warbler","Swainson's Warbler","Ovenbird","Northern Waterthrush","Louisiana Waterthrush","Kentucky Warbler","Connecticut Warbler","Mourning Warbler","MacGillivray's Warbler","Common Yellowthroat","Gray-crowned Yellowthroat","Hooded Warbler","Wilson's Warbler","Canada Warbler","Red-faced Warbler","Painted Redstart","Slate-throated Redstart","Fan-tailed Warbler","Golden-crowned Warbler","Rufous-capped Warbler","Yellow-breasted Chat","Bananaquit","Hepatic Tanager","Summer Tanager","Scarlet Tanager","Western Tanager","Flame-colored Tanager","Stripe-headed Tanager","White-collared Seedeater","Yellow-faced Grassquit","Black-faced Grassquit","Olive Sparrow","Green-tailed Towhee","Spotted Towhee","Eastern Towhee","Canyon Towhee","California Towhee","Abert's Towhee","Rufous-winged Sparrow","Cassin's Sparrow","Bachman's Sparrow","Botteri's Sparrow","Rufous-crowned Sparrow","Five-striped Sparrow","American Tree Sparrow","Chipping Sparrow","Clay-colored Sparrow","Brewer's Sparrow","Field Sparrow","Worthen's Sparrow","Black-chinned Sparrow","Vesper Sparrow","Lark Sparrow","Black-throated Sparrow","Sage Sparrow","Lark Bunting","Savannah Sparrow","Grasshopper Sparrow","Baird's Sparrow","Henslow's Sparrow","Le Conte's Sparrow","Nelson's Sharp-tailed Sparrow","Saltmarsh Sharp-tailed Sparrow","Seaside Sparrow","Fox Sparrow","Song Sparrow","Lincoln's Sparrow","Swamp Sparrow","White-throated Sparrow","Harris's Sparrow","White-crowned Sparrow","Golden-crowned Sparrow","Dark-eyed Junco","Yellow-eyed Junco","McCown's Longspur","Lapland Longspur","Smith's Longspur","Chestnut-collared Longspur","Pine Bunting","Little Bunting","Rustic Bunting","Yellow-breasted Bunting","Gray Bunting","Pallas's Bunting","Reed Bunting","Snow Bunting","McKay's Bunting","Crimson-collared Grosbeak","Northern Cardinal","Pyrrhuloxia","Yellow Grosbeak","Rose-breasted Grosbeak","Black-headed Grosbeak","Blue Bunting","Blue Grosbeak","Lazuli Bunting","Indigo Bunting","Varied Bunting","Painted Bunting","Dickcissel","Bobolink","Red-winged Blackbird","Tricolored Blackbird","Tawny-shouldered Blackbird","Eastern Meadowlark","Western Meadowlark","Yellow-headed Blackbird","Rusty Blackbird","Brewer's Blackbird","Common Grackle","Boat-tailed Grackle","Great-tailed Grackle","Shiny Cowbird","Bronzed Cowbird","Brown-headed Cowbird","Black-vented Oriole","Orchard Oriole","Hooded Oriole","Streak-backed Oriole","Spot-breasted Oriole","Altamira Oriole","Audubon's Oriole","Baltimore Oriole","Bullock's Oriole","Scott's Oriole","Common Chaffinch","Brambling","Gray-crowned Rosy-Finch","Black Rosy-Finch","Brown-capped Rosy-Finch","Pine Grosbeak","Common Rosefinch","Purple Finch","Cassin's Finch","House Finch","Red Crossbill","White-winged Crossbill","Common Redpoll","Hoary Redpoll","Eurasian Siskin","Pine Siskin","Lesser Goldfinch","Lawrence's Goldfinch","American Goldfinch","Oriental Greenfinch","Eurasian Bullfinch","Evening Grosbeak","Hawfinch","House Sparrow","Eurasian Tree Sparrow"],u=["Abyssinian","American Bobtail","American Curl","American Shorthair","American Wirehair","Balinese","Bengal","Birman","Bombay","British Shorthair","Burmese","Chartreux","Chausie","Cornish Rex","Devon Rex","Donskoy","Egyptian Mau","Exotic Shorthair","Havana","Highlander","Himalayan","Japanese Bobtail","Korat","Kurilian Bobtail","LaPerm","Maine Coon","Manx","Minskin","Munchkin","Nebelung","Norwegian Forest Cat","Ocicat","Ojos Azules","Oriental","Persian","Peterbald","Pixiebob","Ragdoll","Russian Blue","Savannah","Scottish Fold","Selkirk Rex","Serengeti","Siberian","Siamese","Singapura","Snowshoe","Sokoke","Somali","Sphynx","Thai","Tonkinese","Toyger","Turkish Angora","Turkish Van"],d=["Blue Whale","Fin Whale","Sei Whale","Sperm Whale","Bryde’s whale","Omura’s whale","Humpback whale","Long-Beaked Common Dolphin","Short-Beaked Common Dolphin","Bottlenose Dolphin","Indo-Pacific Bottlenose Dolphin","Northern Rightwhale Dolphin","Southern Rightwhale Dolphin","Tucuxi","Costero","Indo-Pacific Hump-backed Dolphin","Chinese White Dolphin","Atlantic Humpbacked Dolphin","Atlantic Spotted Dolphin","Clymene Dolphin","Pantropical Spotted Dolphin","Spinner Dolphin","Striped Dolphin","Rough-Toothed Dolphin","Chilean Dolphin","Commerson’s Dolphin","Heaviside’s Dolphin","Hector’s Dolphin","Risso’s Dolphin","Fraser’s Dolphin","Atlantic White-Sided Dolphin","Dusky Dolphin","Hourglass Dolphin","Pacific White-Sided Dolphin","Peale’s Dolphin","White-Beaked Dolphin","Australian Snubfin Dolphin","Irrawaddy Dolphin","Melon-headed Whale","Killer Whale (Orca)","Pygmy Killer Whale","False Killer Whale","Long-finned Pilot Whale","Short-finned Pilot Whale","Guiana Dolphin","Burrunan Dolphin","Australian humpback Dolphin","Amazon River Dolphin","Chinese River Dolphin","Ganges River Dolphin","La Plata Dolphin","Southern Bottlenose Whale","Longman's Beaked Whale","Arnoux's Beaked Whale"],h=["Aberdeen Angus","Abergele","Abigar","Abondance","Abyssinian Shorthorned Zebu","Aceh","Achham","Adamawa","Adaptaur","Afar","Africangus","Afrikaner","Agerolese","Alambadi","Alatau","Albanian","Albera","Alderney","Alentejana","Aleutian wild cattle","Aliad Dinka","Alistana-Sanabresa","Allmogekor","Alur","American","American Angus","American Beef Friesian","American Brown Swiss","American Milking Devon","American White Park","Amerifax","Amrit Mahal","Amsterdam Island cattle","Anatolian Black","Andalusian Black","Andalusian Blond","Andalusian Grey","Angeln","Angoni","Ankina","Ankole","Ankole-Watusi","Aracena","Arado","Argentine Criollo","Argentine Friesian","Armorican","Arouquesa","Arsi","Asturian Mountain","Asturian Valley","Aubrac","Aulie-Ata","Aure et Saint-Girons","Australian Braford","Australian Brangus","Australian Charbray","Australian Friesian Sahiwal","Australian Lowline","Australian Milking Zebu","Australian Shorthorn","Austrian Simmental","Austrian Yellow","Avétonou","Avileña-Negra Ibérica","Aweil Dinka","Ayrshire","Azaouak","Azebuado","Azerbaijan Zebu","Azores","Bedit","Breed","Bachaur cattle","Baherie cattle","Bakosi cattle","Balancer","Baoule","Bargur cattle","Barrosã","Barzona","Bazadaise","Beef Freisian","Beefalo","Beefmaker","Beefmaster","Begayt","Belgian Blue","Belgian Red","Belgian Red Pied","Belgian White-and-Red","Belmont Red","Belted Galloway","Bernese","Berrenda cattle","Betizu","Bianca Modenese","Blaarkop","Black Angus","Black Baldy","Black Hereford","Blanca Cacereña","Blanco Orejinegro BON","Blonde d'Aquitaine","Blue Albion","Blue Grey","Bohuskulla","Bonsmara","Boran","Boškarin","Braford","Brahman","Brahmousin","Brangus","Braunvieh","Brava","British White","British Friesian","Brown Carpathian","Brown Caucasian","Brown Swiss","Bue Lingo","Burlina","Buša cattle","Butana cattle","Bushuyev","Cedit","Cachena","Caldelana","Camargue","Campbell Island cattle","Canadian Speckle Park","Canadienne","Canaria","Canchim","Caracu","Cárdena Andaluza","Carinthian Blondvieh","Carora","Charbray","Charolais","Chateaubriand","Chiangus","Chianina","Chillingham cattle","Chinese Black Pied","Cholistani","Coloursided White Back","Commercial","Corriente","Corsican cattle","Costeño con Cuernos","Crioulo Lageano","Dedit","Dajal","Dangi cattle","Danish Black-Pied","Danish Jersey","Danish Red","Deep Red cattle","Deoni","Devon","Dexter cattle","Dhanni","Doayo cattle","Doela","Drakensberger","Dølafe","Droughtmaster","Dulong'","Dutch Belted","Dutch Friesian","Dwarf Lulu","Eedit","East Anatolian Red","Eastern Finncattle","Eastern Red Polled","Enderby Island cattle","English Longhorn","Ennstaler Bergscheck","Estonian Holstein","Estonian Native","Estonian Red cattle","Évolène cattle","Fedit","Fēng Cattle","Finnish Ayrshire","Finncattle","Finnish Holstein-Friesian","Fjäll","Fleckvieh","Florida Cracker cattle","Fogera","French Simmental","Fribourgeoise","Friesian Red and White","Fulani Sudanese","Gedit","Galician Blond","Galloway cattle","Gangatiri","Gaolao","Garvonesa","Gascon cattle","Gelbvieh","Georgian Mountain cattle","German Angus","German Black Pied cattle","German Black Pied Dairy","German Red Pied","Gir","Glan cattle","Gloucester","Gobra","Greek Shorthorn","Greek Steppe","Greyman cattle","Gudali","Guernsey cattle","Guzerá","Hedit","Hallikar4","Hanwoo","Hariana cattle","Hartón del Valle","Harzer Rotvieh","Hays Converter","Heck cattle","Hereford","Herens","Hybridmaster","Highland cattle","Hinterwald","Holando-Argentino","Holstein Friesian cattle","Horro","Huáng Cattle","Hungarian Grey","Iedit","Iberian cattle","Icelandic","Illawarra cattle","Improved Red and White","Indo-Brazilian","Irish Moiled","Israeli Holstein","Israeli Red","Istoben cattle","Istrian cattle","Jedit","Jamaica Black","Jamaica Hope","Jamaica Red","Japanese Brown","Jarmelista","Javari cattle","Jersey cattle","Jutland cattle","Kedit","Kabin Buri cattle","Kalmyk cattle","Kangayam","Kankrej","Kamphaeng Saen cattle","Karan Swiss","Kasaragod Dwarf cattle","Kathiawadi","Kazakh Whiteheaded","Kenana cattle","Kenkatha cattle","Kerry cattle","Kherigarh","Khillari cattle","Kholomogory","Korat Wagyu","Kostroma cattle","Krishna Valley cattle","Kuri","Kurgan cattle","Ledit","La Reina cattle","Lakenvelder cattle","Lampurger","Latvian Blue","Latvian Brown","Latvian Danish Red","Lebedyn","Levantina","Limia cattle","Limousin","Limpurger","Lincoln Red","Lineback","Lithuanian Black-and-White","Lithuanian Light Grey","Lithuanian Red","Lithuanian White-Backed","Lohani cattle","Lourdais","Lucerna cattle","Luing","Medit","Madagascar Zebu","Madura","Maine-Anjou","Malnad Gidda","Malvi","Mandalong Special","Mantequera Leonesa","Maramureş Brown","Marchigiana","Maremmana","Marinhoa","Maronesa","Masai","Mashona","Menorquina","Mertolenga","Meuse-Rhine-Issel","Mewati","Milking Shorthorn","Minhota","Mirandesa","Mirkadim","Mocăniţă","Mollie","Monchina","Mongolian","Montbéliarde","Morucha","Muturu","Murboden","Murnau-Werdenfels","Murray Grey","Nedit","Nagori","N'Dama","Negra Andaluza","Nelore","Nguni","Nimari","Normande","North Bengal Grey","Northern Finncattle","Northern Shorthorn","Norwegian Red","Oedit]","Ongole","Original Simmental","Pedit","Pajuna","Palmera","Pantaneiro","Parda Alpina","Parthenaise","Pasiega","Pembroke","Philippine Native","Pie Rouge des Plaines","Piedmontese cattle","Pineywoods","Pinzgauer","Pirenaica","Podolac","Podolica","Polish Black-and-White","Polish Red","Polled Hereford","Poll Shorthorn","Polled Shorthorn","Ponwar","Preta","Punganur","Pulikulam","Pustertaler Sprinzen","Qedit","Qinchaun","Queensland Miniature Boran","Redit","Ramo Grande","Randall","Raramuri Criollo","Rathi","Rätisches Grauvieh","Raya","Red Angus","Red Brangus","Red Chittagong","Red Fulani","Red Gorbatov","Red Holstein","Red Kandhari","Red Mingrelian","Red Poll","Red Polled Østland","Red Sindhi","Retinta","Riggit Galloway","Ringamåla","Rohjan","Romagnola","Romanian Bălţata","Romanian Steppe Gray","Romosinuano","Russian Black Pied","RX3","Sedit","Sahiwal","Salers","Salorn","Sanga","Sanhe","Santa Cruz","Santa Gertrudis","Sayaguesa","Schwyz","Selembu","Senepol","Serbian Pied","Serbian Steppe","Sheko","Shetland","Shorthorn","Siboney de Cuba","Simbrah","Simford","Simmental","Siri","South Devon","Spanish Fighting Bull","Speckle Park","Square Meater","Sussex","Swedish Friesian","Swedish Polled","Swedish Red Pied","Swedish Red Polled","Swedish Red-and-White","Tedit","Tabapuã","Tarentaise","Tasmanian Grey","Tauros","Telemark","Texas Longhorn","Texon","Thai Black","Thai Fighting Bull","Thai Friesian","Thai Milking Zebu","Tharparkar","Tswana","Tudanca","Tuli","Tulim","Turkish Grey Steppe","Tux-Zillertal","Tyrol Grey","Uedit","Umblachery","Ukrainian Grey","Vedit","Valdostana Castana","Valdostana Pezzata Nera","Valdostana Pezzata Rossa","Väneko","Vaynol","Vechur8","Vestland Fjord","Vestland Red Polled","Vianesa","Volinian Beef","Vorderwald","Vosgienne","Wedit","Wagyu","Waguli","Wangus","Welsh Black","Western Finncattle","White Cáceres","White Fulani","White Lamphun","White Park","Whitebred Shorthorn","Xedit","Xingjiang Brown","Yedit","Yakutian","Yanbian","Yanhuang","Yurino","Zedit","Żubroń","Zebu"],p=["Alligator mississippiensis","Chinese Alligator","Black Caiman","Broad-snouted Caiman","Spectacled Caiman","Yacare Caiman","Cuvier’s Dwarf Caiman","Schneider’s Smooth-fronted Caiman","African Slender-snouted Crocodile","American Crocodile","Australian Freshwater Crocodile","Cuban Crocodile","Dwarf Crocodile","Morelet’s Crocodile","Mugger Crocodile","New Guinea Freshwater Crocodile","Nile Crocodile","West African Crocodile","Orinoco Crocodile","Philippine Crocodile","Saltwater Crocodile","Siamese Crocodile","Gharial","Tomistoma"],m=["Affenpinscher","Afghan Hound","Aidi","Airedale Terrier","Akbash","Akita","Alano Español","Alapaha Blue Blood Bulldog","Alaskan Husky","Alaskan Klee Kai","Alaskan Malamute","Alopekis","Alpine Dachsbracke","American Bulldog","American Bully","American Cocker Spaniel","American English Coonhound","American Foxhound","American Hairless Terrier","American Pit Bull Terrier","American Staffordshire Terrier","American Water Spaniel","Andalusian Hound","Anglo-Français de Petite Vénerie","Appenzeller Sennenhund","Ariegeois","Armant","Armenian Gampr dog","Artois Hound","Australian Cattle Dog","Australian Kelpie","Australian Shepherd","Australian Stumpy Tail Cattle Dog","Australian Terrier","Austrian Black and Tan Hound","Austrian Pinscher","Azawakh","Bakharwal dog","Banjara Hound","Barbado da Terceira","Barbet","Basenji","Basque Shepherd Dog","Basset Artésien Normand","Basset Bleu de Gascogne","Basset Fauve de Bretagne","Basset Hound","Bavarian Mountain Hound","Beagle","Beagle-Harrier","Belgian Shepherd","Bearded Collie","Beauceron","Bedlington Terrier","Bergamasco Shepherd","Berger Picard","Bernese Mountain Dog","Bhotia","Bichon Frisé","Billy","Black and Tan Coonhound","Black Norwegian Elkhound","Black Russian Terrier","Black Mouth Cur","Bloodhound","Blue Lacy","Blue Picardy Spaniel","Bluetick Coonhound","Boerboel","Bohemian Shepherd","Bolognese","Border Collie","Border Terrier","Borzoi","Bosnian Coarse-haired Hound","Boston Terrier","Bouvier des Ardennes","Bouvier des Flandres","Boxer","Boykin Spaniel","Bracco Italiano","Braque d'Auvergne","Braque de l'Ariège","Braque du Bourbonnais","Braque Francais","Braque Saint-Germain","Briard","Briquet Griffon Vendéen","Brittany","Broholmer","Bruno Jura Hound","Brussels Griffon","Bucovina Shepherd Dog","Bull Arab","Bull Terrier","Bulldog","Bullmastiff","Bully Kutta","Burgos Pointer","Cairn Terrier","Campeiro Bulldog","Canaan Dog","Canadian Eskimo Dog","Cane Corso","Cane di Oropa","Cane Paratore","Cantabrian Water Dog","Can de Chira","Cão da Serra de Aires","Cão de Castro Laboreiro","Cão de Gado Transmontano","Cão Fila de São Miguel","Cardigan Welsh Corgi","Carea Castellano Manchego","Carolina Dog","Carpathian Shepherd Dog","Catahoula Leopard Dog","Catalan Sheepdog","Caucasian Shepherd Dog","Cavalier King Charles Spaniel","Central Asian Shepherd Dog","Cesky Fousek","Cesky Terrier","Chesapeake Bay Retriever","Chien Français Blanc et Noir","Chien Français Blanc et Orange","Chien Français Tricolore","Chihuahua","Chilean Terrier","Chinese Chongqing Dog","Chinese Crested Dog","Chinook","Chippiparai","Chongqing dog","Chortai","Chow Chow","Cimarrón Uruguayo","Cirneco dell'Etna","Clumber Spaniel","Colombian fino hound","Coton de Tulear","Cretan Hound","Croatian Sheepdog","Curly-Coated Retriever","Cursinu","Czechoslovakian Wolfdog","Dachshund","Dalmatian","Dandie Dinmont Terrier","Danish-Swedish Farmdog","Denmark Feist","Dingo","Doberman Pinscher","Dogo Argentino","Dogo Guatemalteco","Dogo Sardesco","Dogue Brasileiro","Dogue de Bordeaux","Drentse Patrijshond","Drever","Dunker","Dutch Shepherd","Dutch Smoushond","East Siberian Laika","East European Shepherd","English Cocker Spaniel","English Foxhound","English Mastiff","English Setter","English Shepherd","English Springer Spaniel","English Toy Terrier","Entlebucher Mountain Dog","Estonian Hound","Estrela Mountain Dog","Eurasier","Field Spaniel","Fila Brasileiro","Finnish Hound","Finnish Lapphund","Finnish Spitz","Flat-Coated Retriever","French Bulldog","French Spaniel","Galgo Español","Galician Shepherd Dog","Garafian Shepherd","Gascon Saintongeois","Georgian Shepherd","German Hound","German Longhaired Pointer","German Pinscher","German Roughhaired Pointer","German Shepherd Dog","German Shorthaired Pointer","German Spaniel","German Spitz","German Wirehaired Pointer","Giant Schnauzer","Glen of Imaal Terrier","Golden Retriever","Gończy Polski","Gordon Setter","Grand Anglo-Français Blanc et Noir","Grand Anglo-Français Blanc et Orange","Grand Anglo-Français Tricolore","Grand Basset Griffon Vendéen","Grand Bleu de Gascogne","Grand Griffon Vendéen","Great Dane","Greater Swiss Mountain Dog","Greek Harehound","Greek Shepherd","Greenland Dog","Greyhound","Griffon Bleu de Gascogne","Griffon Fauve de Bretagne","Griffon Nivernais","Gull Dong","Gull Terrier","Hällefors Elkhound","Hamiltonstövare","Hanover Hound","Harrier","Havanese","Hierran Wolfdog","Hokkaido","Hovawart","Huntaway","Hygen Hound","Ibizan Hound","Icelandic Sheepdog","Indian pariah dog","Indian Spitz","Irish Red and White Setter","Irish Setter","Irish Terrier","Irish Water Spaniel","Irish Wolfhound","Istrian Coarse-haired Hound","Istrian Shorthaired Hound","Italian Greyhound","Jack Russell Terrier","Jagdterrier","Japanese Chin","Japanese Spitz","Japanese Terrier","Jindo","Jonangi","Kai Ken","Kaikadi","Kangal Shepherd Dog","Kanni","Karakachan dog","Karelian Bear Dog","Kars","Karst Shepherd","Keeshond","Kerry Beagle","Kerry Blue Terrier","King Charles Spaniel","King Shepherd","Kintamani","Kishu","Kokoni","Kombai","Komondor","Kooikerhondje","Koolie","Koyun dog","Kromfohrländer","Kuchi","Kuvasz","Labrador Retriever","Lagotto Romagnolo","Lakeland Terrier","Lancashire Heeler","Landseer","Lapponian Herder","Large Münsterländer","Leonberger","Levriero Sardo","Lhasa Apso","Lithuanian Hound","Löwchen","Lupo Italiano","Mackenzie River Husky","Magyar agár","Mahratta Greyhound","Maltese","Manchester Terrier","Maremmano-Abruzzese Sheepdog","McNab dog","Miniature American Shepherd","Miniature Bull Terrier","Miniature Fox Terrier","Miniature Pinscher","Miniature Schnauzer","Molossus of Epirus","Montenegrin Mountain Hound","Mountain Cur","Mountain Feist","Mucuchies","Mudhol Hound","Mudi","Neapolitan Mastiff","New Guinea Singing Dog","New Zealand Heading Dog","Newfoundland","Norfolk Terrier","Norrbottenspets","Northern Inuit Dog","Norwegian Buhund","Norwegian Elkhound","Norwegian Lundehund","Norwich Terrier","Nova Scotia Duck Tolling Retriever","Old Croatian Sighthound","Old Danish Pointer","Old English Sheepdog","Old English Terrier","Olde English Bulldogge","Otterhound","Pachon Navarro","Pampas Deerhound","Paisley Terrier","Papillon","Parson Russell Terrier","Pastore della Lessinia e del Lagorai","Patagonian Sheepdog","Patterdale Terrier","Pekingese","Pembroke Welsh Corgi","Perro Majorero","Perro de Pastor Mallorquin","Perro de Presa Canario","Perro de Presa Mallorquin","Peruvian Inca Orchid","Petit Basset Griffon Vendéen","Petit Bleu de Gascogne","Phalène","Pharaoh Hound","Phu Quoc Ridgeback","Picardy Spaniel","Plummer Terrier","Plott Hound","Podenco Canario","Podenco Valenciano","Pointer","Poitevin","Polish Greyhound","Polish Hound","Polish Lowland Sheepdog","Polish Tatra Sheepdog","Pomeranian","Pont-Audemer Spaniel","Poodle","Porcelaine","Portuguese Podengo","Portuguese Pointer","Portuguese Water Dog","Posavac Hound","Pražský Krysařík","Pshdar Dog","Pudelpointer","Pug","Puli","Pumi","Pungsan Dog","Pyrenean Mastiff","Pyrenean Mountain Dog","Pyrenean Sheepdog","Rafeiro do Alentejo","Rajapalayam","Rampur Greyhound","Rat Terrier","Ratonero Bodeguero Andaluz","Ratonero Mallorquin","Ratonero Murciano de Huerta","Ratonero Valenciano","Redbone Coonhound","Rhodesian Ridgeback","Romanian Mioritic Shepherd Dog","Romanian Raven Shepherd Dog","Rottweiler","Rough Collie","Russian Spaniel","Russian Toy","Russo-European Laika","Saarloos Wolfdog","Sabueso Español","Saint Bernard","Saint Hubert Jura Hound","Saint-Usuge Spaniel","Saluki","Samoyed","Sapsali","Sarabi dog","Šarplaninac","Schapendoes","Schillerstövare","Schipperke","Schweizer Laufhund","Schweizerischer Niederlaufhund","Scottish Deerhound","Scottish Terrier","Sealyham Terrier","Segugio dell'Appennino","Segugio Italiano","Segugio Maremmano","Seppala Siberian Sleddog","Serbian Hound","Serbian Tricolour Hound","Serrano Bulldog","Shar Pei","Shetland Sheepdog","Shiba Inu","Shih Tzu","Shikoku","Shiloh Shepherd","Siberian Husky","Silken Windhound","Silky Terrier","Sinhala Hound","Skye Terrier","Sloughi","Slovakian Wirehaired Pointer","Slovenský Cuvac","Slovenský Kopov","Smalandstövare","Small Greek domestic dog","Small Münsterländer","Smooth Collie","Smooth Fox Terrier","Soft-Coated Wheaten Terrier","South Russian Ovcharka","Spanish Mastiff","Spanish Water Dog","Spinone Italiano","Sporting Lucas Terrier","Sardinian Shepherd Dog","Stabyhoun","Staffordshire Bull Terrier","Standard Schnauzer","Stephens Stock","Styrian Coarse-haired Hound","Sussex Spaniel","Swedish Elkhound","Swedish Lapphund","Swedish Vallhund","Swedish White Elkhound","Taigan","Taiwan Dog","Tamaskan Dog","Teddy Roosevelt Terrier","Telomian","Tenterfield Terrier","Terrier Brasileiro","Thai Bangkaew Dog","Thai Ridgeback","Tibetan Mastiff","Tibetan Spaniel","Tibetan Terrier","Tornjak","Tosa","Toy Fox Terrier","Toy Manchester Terrier","Transylvanian Hound","Treeing Cur","Treeing Feist","Treeing Tennessee Brindle","Treeing Walker Coonhound","Trigg Hound","Tyrolean Hound","Vikhan","Villano de Las Encartaciones","Villanuco de Las Encartaciones","Vizsla","Volpino Italiano","Weimaraner","Welsh Sheepdog","Welsh Springer Spaniel","Welsh Terrier","West Highland White Terrier","West Siberian Laika","Westphalian Dachsbracke","Wetterhoun","Whippet","White Shepherd","White Swiss Shepherd Dog","Wire Fox Terrier","Wirehaired Pointing Griffon","Wirehaired Vizsla","Xiasi Dog","Xoloitzcuintli","Yakutian Laika","Yorkshire Terrier"],y=["Grass carp","Peruvian anchoveta","Silver carp","Common carp","Asari","Japanese littleneck","Filipino Venus","Japanese cockle","Alaska pollock","Nile tilapia","Whiteleg shrimp","Bighead carp","Skipjack tuna","Catla","Crucian carp","Atlantic salmon","Atlantic herring","Chub mackerel","Rohu","Yellowfin tuna","Japanese anchovy","Largehead hairtail","Atlantic cod","European pilchard","Capelin","Jumbo flying squid","Milkfish","Atlantic mackerel","Rainbow trout","Araucanian herring","Wuchang bream","Gulf menhaden","Indian oil sardine","Black carp","European anchovy","Northern snakehead","Pacific cod","Pacific saury","Pacific herring","Bigeye tuna","Chilean jack mackerel","Yellow croaker","Haddock","Gazami crab","Amur catfish","Japanese common catfish","European sprat","Pink salmon","Mrigal carp","Channel catfish","Blood cockle","Blue whiting","Hilsa shad","Daggertooth pike conger","California pilchard","Cape horse mackerel","Pacific anchoveta","Japanese flying squid","Pollock","Chinese softshell turtle","Kawakawa","Indian mackerel","Asian swamp eel","Argentine hake","Short mackerel","Southern rough shrimp","Southern African anchovy","Pond loach","Iridescent shark","Mandarin fish","Chinese perch","Nile perch","Round sardinella","Japanese pilchard","Bombay-duck","Yellowhead catfish","Korean bullhead","Narrow-barred Spanish mackerel","Albacore","Madeiran sardinella","Bonga shad","Silver cyprinid","Longtail tuna","Atlantic menhaden","North Pacific hake","Atlantic horse mackerel","Japanese jack mackerel","Pacific thread herring","Bigeye scad","Yellowstripe scad","Chum salmon","Blue swimming crab","Pacific sand lance","Pacific sandlance","Goldstripe sardinella"],g=["American Albino","Abaco Barb","Abtenauer","Abyssinian","Aegidienberger","Akhal-Teke","Albanian Horse","Altai Horse","Altèr Real","American Cream Draft","American Indian Horse","American Paint Horse","American Quarter Horse","American Saddlebred","American Warmblood","Andalusian Horse","Andravida Horse","Anglo-Arabian","Anglo-Arabo-Sardo","Anglo-Kabarda","Appaloosa","AraAppaloosa","Arabian Horse","Ardennes Horse","Arenberg-Nordkirchen","Argentine Criollo","Asian wild Horse","Assateague Horse","Asturcón","Augeron","Australian Brumby","Australian Draught Horse","Australian Stock Horse","Austrian Warmblood","Auvergne Horse","Auxois","Azerbaijan Horse","Azteca Horse","Baise Horse","Bale","Balearic Horse","Balikun Horse","Baluchi Horse","Banker Horse","Barb Horse","Bardigiano","Bashkir Curly","Basque Mountain Horse","Bavarian Warmblood","Belgian Half-blood","Belgian Horse","Belgian Warmblood ","Bhutia Horse","Black Forest Horse","Blazer Horse","Boerperd","Borana","Boulonnais Horse","Brabant","Brandenburger","Brazilian Sport Horse","Breton Horse","Brumby","Budyonny Horse","Burguete Horse","Burmese Horse","Byelorussian Harness Horse","Calabrese Horse","Camargue Horse","Camarillo White Horse","Campeiro","Campolina","Canadian Horse","Canadian Pacer","Carolina Marsh Tacky","Carthusian Horse","Caspian Horse","Castilian Horse","Castillonnais","Catria Horse","Cavallo Romano della Maremma Laziale","Cerbat Mustang","Chickasaw Horse","Chilean Corralero","Choctaw Horse","Cleveland Bay","Clydesdale Horse","Cob","Coldblood Trotter","Colonial Spanish Horse","Colorado Ranger","Comtois Horse","Corsican Horse","Costa Rican Saddle Horse","Cretan Horse","Criollo Horse","Croatian Coldblood","Cuban Criollo","Cumberland Island Horse","Curly Horse","Czech Warmblood","Daliboz","Danish Warmblood","Danube Delta Horse","Dole Gudbrandsdal","Don","Dongola Horse","Draft Trotter","Dutch Harness Horse","Dutch Heavy Draft","Dutch Warmblood","Dzungarian Horse","East Bulgarian","East Friesian Horse","Estonian Draft","Estonian Horse","Falabella","Faroese","Finnhorse","Fjord Horse","Fleuve","Florida Cracker Horse","Foutanké","Frederiksborg Horse","Freiberger","French Trotter","Friesian Cross","Friesian Horse","Friesian Sporthorse","Furioso-North Star","Galiceño","Galician Pony","Gelderland Horse","Georgian Grande Horse","German Warmblood","Giara Horse","Gidran","Groningen Horse","Gypsy Horse","Hackney Horse","Haflinger","Hanoverian Horse","Heck Horse","Heihe Horse","Henson Horse","Hequ Horse","Hirzai","Hispano-Bretón","Holsteiner Horse","Horro","Hungarian Warmblood","Icelandic Horse","Iomud","Irish Draught","Irish Sport Horse sometimes called Irish Hunter","Italian Heavy Draft","Italian Trotter","Jaca Navarra","Jeju Horse","Jutland Horse","Kabarda Horse","Kafa","Kaimanawa Horses","Kalmyk Horse","Karabair","Karabakh Horse","Karachai Horse","Karossier","Kathiawari","Kazakh Horse","Kentucky Mountain Saddle Horse","Kiger Mustang","Kinsky Horse","Kisber Felver","Kiso Horse","Kladruber","Knabstrupper","Konik","Kundudo","Kustanair","Kyrgyz Horse","Latvian Horse","Lipizzan","Lithuanian Heavy Draught","Lokai","Losino Horse","Lusitano","Lyngshest","M'Bayar","M'Par","Mallorquín","Malopolski","Mangalarga","Mangalarga Marchador","Maremmano","Marismeño Horse","Marsh Tacky","Marwari Horse","Mecklenburger","Međimurje Horse","Menorquín","Mérens Horse","Messara Horse","Metis Trotter","Mezőhegyesi Sport Horse","Miniature Horse","Misaki Horse","Missouri Fox Trotter","Monchina","Mongolian Horse","Mongolian Wild Horse","Monterufolino","Morab","Morgan Horse","Mountain Pleasure Horse","Moyle Horse","Murakoz Horse","Murgese","Mustang Horse","Namib Desert Horse","Nangchen Horse","National Show Horse","Nez Perce Horse","Nivernais Horse","Nokota Horse","Noma","Nonius Horse","Nooitgedachter","Nordlandshest","Noriker Horse","Norman Cob","North American Single-Footer Horse","North Swedish Horse","Norwegian Coldblood Trotter","Norwegian Fjord","Novokirghiz","Oberlander Horse","Ogaden","Oldenburg Horse","Orlov trotter","Ostfriesen","Paint","Pampa Horse","Paso Fino","Pentro Horse","Percheron","Persano Horse","Peruvian Paso","Pintabian","Pleven Horse","Poitevin Horse","Posavac Horse","Pottok","Pryor Mountain Mustang","Przewalski's Horse","Pura Raza Española","Purosangue Orientale","Qatgani","Quarab","Quarter Horse","Racking Horse","Retuerta Horse","Rhenish German Coldblood","Rhinelander Horse","Riwoche Horse","Rocky Mountain Horse","Romanian Sporthorse","Rottaler","Russian Don","Russian Heavy Draft","Russian Trotter","Saddlebred","Salerno Horse","Samolaco Horse","San Fratello Horse","Sarcidano Horse","Sardinian Anglo-Arab","Schleswig Coldblood","Schwarzwälder Kaltblut","Selale","Sella Italiano","Selle Français","Shagya Arabian","Shan Horse","Shire Horse","Siciliano Indigeno","Silesian Horse","Sokolsky Horse","Sorraia","South German Coldblood","Soviet Heavy Draft","Spanish Anglo-Arab","Spanish Barb","Spanish Jennet Horse","Spanish Mustang","Spanish Tarpan","Spanish-Norman Horse","Spiti Horse","Spotted Saddle Horse","Standardbred Horse","Suffolk Punch","Swedish Ardennes","Swedish coldblood trotter","Swedish Warmblood","Swiss Warmblood","Taishū Horse","Takhi","Tawleed","Tchernomor","Tennessee Walking Horse","Tersk Horse","Thoroughbred","Tiger Horse","Tinker Horse","Tolfetano","Tori Horse","Trait Du Nord","Trakehner","Tsushima","Tuigpaard","Ukrainian Riding Horse","Unmol Horse","Uzunyayla","Ventasso Horse","Virginia Highlander","Vlaamperd","Vladimir Heavy Draft","Vyatka","Waler","Waler Horse","Walkaloosa","Warlander","Warmblood","Welsh Cob","Westphalian Horse","Wielkopolski","Württemberger","Xilingol Horse","Yakutian Horse","Yili Horse","Yonaguni Horse","Zaniskari","Žemaitukas","Zhemaichu","Zweibrücker"],f=["Acacia-ants","Acorn-plum gall","Aerial yellowjacket","Africanized honey bee","Allegheny mound ant","Almond stone wasp","Ant","Arboreal ant","Argentine ant","Asian paper wasp","Baldfaced hornet","Bee","Bigheaded ant","Black and yellow mud dauber","Black carpenter ant","Black imported fire ant","Blue horntail woodwasp","Blue orchard bee","Braconid wasp","Bumble bee","Carpenter ant","Carpenter wasp","Chalcid wasp","Cicada killer","Citrus blackfly parasitoid","Common paper wasp","Crazy ant","Cuckoo wasp","Cynipid gall wasp","Eastern Carpenter bee","Eastern yellowjacket","Elm sawfly","Encyrtid wasp","Erythrina gall wasp","Eulophid wasp","European hornet","European imported fire ant","False honey ant","Fire ant","Forest bachac","Forest yellowjacket","German yellowjacket","Ghost ant","Giant ichneumon wasp","Giant resin bee","Giant wood wasp","Golden northern bumble bee","Golden paper wasp","Gouty oak gall","Grass Carrying Wasp","Great black wasp","Great golden digger wasp","Hackberry nipple gall parasitoid","Honey bee","Horned oak gall","Horse guard wasp","Hunting wasp","Ichneumonid wasp","Keyhole wasp","Knopper gall","Large garden bumble bee","Large oak-apple gall","Leafcutting bee","Little fire ant","Little yellow ant","Long-horned bees","Long-legged ant","Macao paper wasp","Mallow bee","Marble gall","Mossyrose gall wasp","Mud-daubers","Multiflora rose seed chalcid","Oak apple gall wasp","Oak rough bulletgall wasp","Oak saucer gall","Oak shoot sawfly","Odorous house ant","Orange-tailed bumble bee","Orangetailed potter wasp","Oriental chestnut gall wasp","Paper wasp","Pavement ant","Pigeon tremex","Pip gall wasp","Prairie yellowjacket","Pteromalid wasp","Pyramid ant","Raspberry Horntail","Red ant","Red carpenter ant","Red harvester ant","Red imported fire ant","Red wasp","Red wood ant","Red-tailed wasp","Reddish carpenter ant","Rough harvester ant","Sawfly parasitic wasp","Scale parasitoid","Silky ant","Sirex woodwasp","Siricid woodwasp","Smaller yellow ant","Southeastern blueberry bee","Southern fire ant","Southern yellowjacket","Sphecid wasp","Stony gall","Sweat bee","Texas leafcutting ant","Tiphiid wasp","Torymid wasp","Tramp ant","Valentine ant","Velvet ant","Vespid wasp","Weevil parasitoid","Western harvester ant","Western paper wasp","Western thatching ant","Western yellowjacket","White-horned horntail","Willow shoot sawfly","Woodwasp","Wool sower gall maker","Yellow and black potter wasp","Yellow Crazy Ant","Yellow-horned horntail"],b=["Asiatic Lion","Barbary Lion","West African Lion","Northeast Congo Lion","Masai Lion","Transvaal lion","Cape lion"],k=["American","American Chinchilla","American Fuzzy Lop","American Sable","Argente Brun","Belgian Hare","Beveren","Blanc de Hotot","Britannia Petite","Californian","Champagne D’Argent","Checkered Giant","Cinnamon","Crème D’Argent","Dutch","Dwarf Hotot","English Angora","English Lop","English Spot","Flemish Giant","Florida White","French Angora","French Lop","Giant Angora","Giant Chinchilla","Harlequin","Havana","Himalayan","Holland Lop","Jersey Wooly","Lilac","Lionhead","Mini Lop","Mini Rex","Mini Satin","Netherland Dwarf","New Zealand","Palomino","Polish","Rex","Rhinelander","Satin","Satin Angora","Silver","Silver Fox","Silver Marten","Standard Chinchilla","Tan","Thrianta"],v=["Abrocoma","Abrocoma schistacea","Aconaemys","Aconaemys porteri","African brush-tailed porcupine","Andean mountain cavy","Argentine tuco-tuco","Ashy chinchilla rat","Asiatic brush-tailed porcupine","Atherurus","Azara's agouti","Azara's tuco-tuco","Bahia porcupine","Bathyergus","Bathyergus janetta","Bathyergus suillus","Bennett's chinchilla rat","Bicolored-spined porcupine","Black agouti","Black dwarf porcupine","Black-rumped agouti","Black-tailed hairy dwarf porcupine","Bolivian chinchilla rat","Bolivian tuco-tuco","Bonetto's tuco-tuco","Brandt's yellow-toothed cavy","Brazilian guinea pig","Brazilian porcupine","Brazilian tuco-tuco","Bridge's degu","Brown hairy dwarf porcupine","Budin's chinchilla rat, A. budini","Cape porcupine","Catamarca tuco-tuco","Cavia","Central American agouti","Chacoan tuco-tuco","Chilean rock rat","Chinchilla","Coendou","Coiban agouti","Colburn's tuco-tuco","Collared tuco-tuco","Common degu","Common yellow-toothed cavy","Conover's tuco-tuco","Coruro","Crested agouti","Crested porcupine","Cryptomys","Cryptomys bocagei","Cryptomys damarensis","Cryptomys foxi","Cryptomys hottentotus","Cryptomys mechowi","Cryptomys ochraceocinereus","Cryptomys zechi","Ctenomys","Cuniculus","Cuscomys","Cuscomys ashanika","Dactylomys","Dactylomys boliviensis","Dactylomys dactylinus","Dactylomys peruanus","Dasyprocta","Domestic guinea pig","Emily's tuco-tuco","Erethizon","Famatina chinchilla rat","Frosted hairy dwarf porcupine","Fukomys","Fukomys amatus","Fukomys anselli","Fukomys bocagei","Fukomys damarensis","Fukomys darlingi","Fukomys foxi","Fukomys ilariae","Fukomys kafuensis","Fukomys mechowii","Fukomys micklemi","Fukomys occlusus","Fukomys ochraceocinereus","Fukomys whytei","Fukomys zechi","Furtive tuco-tuco","Galea","Georychus","Georychus capensis","Golden viscacha-rat","Goya tuco-tuco","Greater guinea pig","Green acouchi","Haig's tuco-tuco","Heliophobius","Heliophobius argenteocinereus","Heterocephalus","Heterocephalus glaber","Highland tuco-tuco","Hystrix","Indian porcupine","Isla Mocha degu","Kalinowski agouti","Kannabateomys","Kannabateomys amblyonyx","Lagidium","Lagostomus","Lewis' tuco-tuco","Long-tailed chinchilla","Long-tailed porcupine","Los Chalchaleros' viscacha-rat","Lowland paca","Magellanic tuco-tuco","Malayan porcupine","Maule tuco-tuco","Mendoza tuco-tuco","Mexican agouti","Mexican hairy dwarf porcupine","Microcavia","Montane guinea pig","Moon-toothed degu","Mottled tuco-tuco","Mountain degu","Mountain paca","Mountain viscacha-rat","Myoprocta","Natterer's tuco-tuco","North American porcupine","Northern viscacha","Octodon","Octodontomys","Octomys","Olallamys","Olallamys albicauda","Olallamys edax","Orinoco agouti","Paraguaian hairy dwarf porcupine","Pearson's tuco-tuco","Peruvian tuco-tuco","Philippine porcupine","Pipanacoctomys","Plains viscacha","Plains viscacha-rat","Porteous' tuco-tuco","Punta de Vacas chinchilla rat","Red acouchi","Red-rumped agouti","Reddish tuco-tuco","Rio Negro tuco-tuco","Robust tuco-tuco","Roosmalen's dwarf porcupine","Rothschild's porcupine","Ruatan Island agouti","Sage's rock rat","Salinoctomys","Salta tuco-tuco","San Luis tuco-tuco","Santa Catarina's guinea pig","Shiny guinea pig","Shipton's mountain cavy","Short-tailed chinchilla","Silky tuco-tuco","Social tuco-tuco","Southern mountain cavy","Southern tuco-tuco","Southern viscacha","Spalacopus","Spix's yellow-toothed cavy","Steinbach's tuco-tuco","Streaked dwarf porcupine","Strong tuco-tuco","Stump-tailed porcupine","Sumatran porcupine","Sunda porcupine","Talas tuco-tuco","Tawny tuco-tuco","Thick-spined porcupine","Tiny tuco-tuco","Trichys","Tucuman tuco-tuco","Tympanoctomys","Uspallata chinchilla rat","White-toothed tuco-tuco","Wolffsohn's viscacha"],w=["Viper Adder","Common adder","Death Adder","Desert death adder","Horned adder","Long-nosed adder","Many-horned adder","Mountain adder","Mud adder","Namaqua dwarf adder","Nightingale adder","Peringuey's adder","Puff adder","African puff adder","Rhombic night adder","Sand adder","Dwarf sand adder","Namib dwarf sand adder","Water adder","Aesculapian snake","Anaconda","Bolivian anaconda","De Schauensee's anaconda","Green anaconda","Yellow anaconda","Arafura file snake","Asp","European asp","Egyptian asp","African beaked snake","Ball Python","Bird snake","Black-headed snake","Mexican black kingsnake","Black rat snake","Black snake","Red-bellied black snake","Blind snake","Brahminy blind snake","Texas blind snake","Western blind snake","Boa","Abaco Island boa","Amazon tree boa","Boa constrictor","Cuban boa","Dumeril's boa","Dwarf boa","Emerald tree boa","Hogg Island boa","Jamaican boa","Madagascar ground boa","Madagascar tree boa","Puerto Rican boa","Rainbow boa","Red-tailed boa","Rosy boa","Rubber boa","Sand boa","Tree boa","Boiga","Boomslang","Brown snake","Eastern brown snake","Bull snake","Bushmaster","Dwarf beaked snake","Rufous beaked snake","Canebrake","Cantil","Cascabel","Cat-eyed snake","Banded cat-eyed snake","Green cat-eyed snake","Cat snake","Andaman cat snake","Beddome's cat snake","Dog-toothed cat snake","Forsten's cat snake","Gold-ringed cat snake","Gray cat snake","Many-spotted cat snake","Tawny cat snake","Chicken snake","Coachwhip snake","Cobra","Andaman cobra","Arabian cobra","Asian cobra","Banded water cobra","Black-necked cobra","Black-necked spitting cobra","Black tree cobra","Burrowing cobra","Cape cobra","Caspian cobra","Congo water cobra","Common cobra","Eastern water cobra","Egyptian cobra","Equatorial spitting cobra","False cobra","False water cobra","Forest cobra","Gold tree cobra","Indian cobra","Indochinese spitting cobra","Javan spitting cobra","King cobra","Mandalay cobra","Mozambique spitting cobra","North Philippine cobra","Nubian spitting cobra","Philippine cobra","Red spitting cobra","Rinkhals cobra","Shield-nosed cobra","Sinai desert cobra","Southern Indonesian spitting cobra","Southern Philippine cobra","Southwestern black spitting cobra","Snouted cobra","Spectacled cobra","Spitting cobra","Storm water cobra","Thai cobra","Taiwan cobra","Zebra spitting cobra","Collett's snake","Congo snake","Copperhead","American copperhead","Australian copperhead","Coral snake","Arizona coral snake","Beddome's coral snake","Brazilian coral snake","Cape coral snake","Harlequin coral snake","High Woods coral snake","Malayan long-glanded coral snake","Texas Coral Snake","Western coral snake","Corn snake","South eastern corn snake","Cottonmouth","Crowned snake","Cuban wood snake","Eastern hognose snake","Egg-eater","Eastern coral snake","Fer-de-lance","Fierce snake","Fishing snake","Flying snake","Golden tree snake","Indian flying snake","Moluccan flying snake","Ornate flying snake","Paradise flying snake","Twin-Barred tree snake","Banded Flying Snake","Fox snake, three species of Pantherophis","Forest flame snake","Garter snake","Checkered garter snake","Common garter snake","San Francisco garter snake","Texas garter snake","Cape gopher snake","Grass snake","Green snake","Rough green snake","Smooth green snake","Ground snake","Common ground snake","Three-lined ground snake","Western ground snake","Habu","Hognose snake","Blonde hognose snake","Dusty hognose snake","Jan's hognose snake","Giant Malagasy hognose snake","Mexican hognose snake","South American hognose snake","Hundred pacer","Ikaheka snake","Indigo snake","Jamaican Tree Snake","Keelback","Asian keelback","Assam keelback","Black-striped keelback","Buff striped keelback","Burmese keelback","Checkered keelback","Common keelback","Hill keelback","Himalayan keelback","Khasi Hills keelback","Modest keelback","Nicobar Island keelback","Nilgiri keelback","Orange-collared keelback","Red-necked keelback","Sikkim keelback","Speckle-bellied keelback","White-lipped keelback","Wynaad keelback","Yunnan keelback","King brown","King snake","California kingsnake","Desert kingsnake","Grey-banded kingsnake","North eastern king snake","Prairie kingsnake","Scarlet kingsnake","Speckled kingsnake","Krait","Banded krait","Blue krait","Black krait","Burmese krait","Ceylon krait","Indian krait","Lesser black krait","Malayan krait","Many-banded krait","Northeastern hill krait","Red-headed krait","Sind krait","Large shield snake","Lancehead","Common lancehead","Lora","Grey Lora","Lyre snake","Baja California lyresnake","Central American lyre snake","Texas lyre snake","Eastern lyre snake","Machete savane","Mamba","Black mamba","Green mamba","Eastern green mamba","Western green mamba","Mamushi","Mangrove snake","Milk snake","Moccasin snake","Montpellier snake","Mud snake","Eastern mud snake","Western mud snake","Mussurana","Night snake","Cat-eyed night snake","Texas night snake","Nichell snake","Narrowhead Garter Snake","Nose-horned viper","Rhinoceros viper","Vipera ammodytes","Parrot snake","Mexican parrot snake","Patchnose snake","Perrotet's shieldtail snake","Pine snake","Pipe snake","Asian pipe snake","Dwarf pipe snake","Red-tailed pipe snake","Python","African rock python","Amethystine python","Angolan python","Australian scrub python","Ball python","Bismarck ringed python","Black headed python","Blood python","Boelen python","Borneo short-tailed python","Bredl's python","Brown water python","Burmese python","Calabar python","Western carpet python","Centralian carpet python","Coastal carpet python","Inland carpet python","Jungle carpet python","New Guinea carpet python","Northwestern carpet python","Southwestern carpet python","Children's python","Dauan Island water python","Desert woma python","Diamond python","Flinders python","Green tree python","Halmahera python","Indian python","Indonesian water python","Macklot's python","Mollucan python","Oenpelli python","Olive python","Papuan python","Pygmy python","Red blood python","Reticulated python","Kayaudi dwarf reticulated python","Selayer reticulated python","Rough-scaled python","Royal python","Savu python","Spotted python","Stimson's python","Sumatran short-tailed python","Tanimbar python","Timor python","Wetar Island python","White-lipped python","Brown white-lipped python","Northern white-lipped python","Southern white-lipped python","Woma python","Western woma python","Queen snake","Racer","Bimini racer","Buttermilk racer","Eastern racer","Eastern yellowbelly sad racer","Mexican racer","Southern black racer","Tan racer","West Indian racer","Raddysnake","Southwestern blackhead snake","Rat snake","Baird's rat snake","Beauty rat snake","Great Plains rat snake","Green rat snake","Japanese forest rat snake","Japanese rat snake","King rat snake","Mandarin rat snake","Persian rat snake","Red-backed rat snake","Twin-spotted rat snake","Yellow-striped rat snake","Manchurian Black Water Snake","Rattlesnake","Arizona black rattlesnake","Aruba rattlesnake","Chihuahuan ridge-nosed rattlesnake","Coronado Island rattlesnake","Durango rock rattlesnake","Dusky pigmy rattlesnake","Eastern diamondback rattlesnake","Grand Canyon rattlesnake","Great Basin rattlesnake","Hopi rattlesnake","Lance-headed rattlesnake","Long-tailed rattlesnake","Massasauga rattlesnake","Mexican green rattlesnake","Mexican west coast rattlesnake","Midget faded rattlesnake","Mojave rattlesnake","Northern black-tailed rattlesnake","Oaxacan small-headed rattlesnake","Rattler","Red diamond rattlesnake","Southern Pacific rattlesnake","Southwestern speckled rattlesnake","Tancitaran dusky rattlesnake","Tiger rattlesnake","Timber rattlesnake","Tropical rattlesnake","Twin-spotted rattlesnake","Uracoan rattlesnake","Western diamondback rattlesnake","Ribbon snake","Rinkhals","River jack","Sea snake","Annulated sea snake","Beaked sea snake","Dubois's sea snake","Hardwicke's sea snake","Hook Nosed Sea Snake","Olive sea snake","Pelagic sea snake","Stoke's sea snake","Yellow-banded sea snake","Yellow-bellied sea snake","Yellow-lipped sea snake","Shield-tailed snake","Sidewinder","Colorado desert sidewinder","Mojave desert sidewinder","Sonoran sidewinder","Small-eyed snake","Smooth snake","Brazilian smooth snake","European smooth snake","Stiletto snake","Striped snake","Japanese striped snake","Sunbeam snake","Taipan","Central ranges taipan","Coastal taipan","Inland taipan","Paupan taipan","Tentacled snake","Tic polonga","Tiger snake","Chappell Island tiger snake","Common tiger snake","Down's tiger snake","Eastern tiger snake","King Island tiger snake","Krefft's tiger snake","Peninsula tiger snake","Tasmanian tiger snake","Western tiger snake","Tigre snake","Tree snake","Blanding's tree snake","Blunt-headed tree snake","Brown tree snake","Long-nosed tree snake","Many-banded tree snake","Northern tree snake","Trinket snake","Black-banded trinket snake","Twig snake","African twig snake","Twin Headed King Snake","Titanboa","Urutu","Vine snake","Asian Vine Snake, Whip Snake","American Vine Snake","Mexican vine snake","Viper","Asp viper","Bamboo viper","Bluntnose viper","Brazilian mud Viper","Burrowing viper","Bush viper","Great Lakes bush viper","Hairy bush viper","Nitsche's bush viper","Rough-scaled bush viper","Spiny bush viper","Carpet viper","Crossed viper","Cyclades blunt-nosed viper","Eyelash viper","False horned viper","Fea's viper","Fifty pacer","Gaboon viper","Hognosed viper","Horned desert viper","Horned viper","Jumping viper","Kaznakov's viper","Leaf-nosed viper","Leaf viper","Levant viper","Long-nosed viper","McMahon's viper","Mole viper","Palestine viper","Pallas' viper","Palm viper","Amazonian palm viper","Black-speckled palm-pitviper","Eyelash palm-pitviper","Green palm viper","Mexican palm-pitviper","Guatemalan palm viper","Honduran palm viper","Siamese palm viper","Side-striped palm-pitviper","Yellow-lined palm viper","Pit viper","Banded pitviper","Bamboo pitviper","Barbour's pit viper","Black-tailed horned pit viper","Bornean pitviper","Brongersma's pitviper","Brown spotted pitviper[4]","Cantor's pitviper","Elegant pitviper","Eyelash pit viper","Fan-Si-Pan horned pitviper","Flat-nosed pitviper","Godman's pit viper","Green tree pit viper","Habu pit viper","Hagen's pitviper","Horseshoe pitviper","Jerdon's pitviper","Kanburian pit viper","Kaulback's lance-headed pitviper","Kham Plateau pitviper","Large-eyed pitviper","Malabar rock pitviper","Malayan pit viper","Mangrove pit viper","Mangshan pitviper","Motuo bamboo pitviper","Nicobar bamboo pitviper","Philippine pitviper","Pointed-scaled pit viper[5]","Red-tailed bamboo pitviper","Schultze's pitviper","Stejneger's bamboo pitviper","Sri Lankan pit viper","Temple pit viper","Tibetan bamboo pitviper","Tiger pit viper","Undulated pit viper","Wagler's pit viper","Wirot's pit viper","Portuguese viper","Saw-scaled viper","Schlegel's viper","Sedge viper","Sharp-nosed viper","Snorkel viper","Temple viper","Tree viper","Chinese tree viper","Guatemalan tree viper","Hutton's tree viper","Indian tree viper","Large-scaled tree viper","Malcolm's tree viper","Nitsche's tree viper","Pope's tree viper","Rough-scaled tree viper","Rungwe tree viper","Sumatran tree viper","White-lipped tree viper","Ursini's viper","Western hog-nosed viper","Wart snake","Water moccasin","Water snake","Bocourt's water snake","Northern water snake","Whip snake","Long-nosed whip snake","Wolf snake","African wolf snake","Barred wolf snake","Worm snake","Common worm snake","Longnosed worm snake","Wutu","Yarara","Zebra snake"],C=["dog","cat","snake","bear","lion","cetacean","insect","crocodilia","cow","bird","fish","rabbit","horse"],S={bear:s,bird:c,cat:u,cetacean:d,cow:h,crocodilia:p,dog:m,fish:y,horse:g,insect:f,lion:b,rabbit:k,rodent:v,snake:w,type:C},A=S,M=["{{person.name}}","{{company.name}}"],B=["Redhold","Treeflex","Trippledex","Kanlam","Bigtax","Daltfresh","Toughjoyfax","Mat Lam Tam","Otcom","Tres-Zap","Y-Solowarm","Tresom","Voltsillam","Biodex","Greenlam","Viva","Matsoft","Temp","Zoolab","Subin","Rank","Job","Stringtough","Tin","It","Home Ing","Zamit","Sonsing","Konklab","Alpha","Latlux","Voyatouch","Alphazap","Holdlamis","Zaam-Dox","Sub-Ex","Quo Lux","Bamity","Ventosanzap","Lotstring","Hatity","Tempsoft","Overhold","Fixflex","Konklux","Zontrax","Tampflex","Span","Namfix","Transcof","Stim","Fix San","Sonair","Stronghold","Fintone","Y-find","Opela","Lotlux","Ronstring","Zathin","Duobam","Keylex"],T=["0.#.#","0.##","#.##","#.#","#.#.#"],x={author:M,name:B,version:T},R=x,L=["###-###-####","(###) ###-####","1-###-###-####","###.###.####"],P={formats:L},E=P,D=["red","green","blue","yellow","purple","mint green","teal","white","black","orange","pink","grey","maroon","violet","turquoise","tan","sky blue","salmon","plum","orchid","olive","magenta","lime","ivory","indigo","gold","fuchsia","cyan","azure","lavender","silver"],N={human:D},H=N,G=["Books","Movies","Music","Games","Electronics","Computers","Home","Garden","Tools","Grocery","Health","Beauty","Toys","Kids","Baby","Clothing","Shoes","Jewelery","Sports","Outdoors","Automotive","Industrial"],W=["Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support","The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive","New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016","The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality","The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design","The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J","The Football Is Good For Training And Recreational Purposes","Carbonite web goalkeeper gloves are ergonomically designed to give easy fit","Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles","New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart","The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients","Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals"],F={adjective:["Small","Ergonomic","Electronic","Rustic","Intelligent","Gorgeous","Incredible","Elegant","Fantastic","Practical","Modern","Recycled","Sleek","Bespoke","Awesome","Generic","Handcrafted","Handmade","Oriental","Licensed","Luxurious","Refined","Unbranded","Tasty"],material:["Steel","Bronze","Wooden","Concrete","Plastic","Cotton","Granite","Rubber","Metal","Soft","Fresh","Frozen"],product:["Chair","Car","Computer","Keyboard","Mouse","Bike","Ball","Gloves","Pants","Shirt","Table","Shoes","Hat","Towels","Soap","Tuna","Chicken","Fish","Cheese","Bacon","Pizza","Salad","Sausages","Chips"]},z={department:G,product_description:W,product_name:F},I=z,O=["Adaptive","Advanced","Ameliorated","Assimilated","Automated","Balanced","Business-focused","Centralized","Cloned","Compatible","Configurable","Cross-group","Cross-platform","Customer-focused","Customizable","Decentralized","De-engineered","Devolved","Digitized","Distributed","Diverse","Down-sized","Enhanced","Enterprise-wide","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Function-based","Fundamental","Future-proofed","Grass-roots","Horizontal","Implemented","Innovative","Integrated","Intuitive","Inverse","Managed","Mandatory","Monitored","Multi-channelled","Multi-lateral","Multi-layered","Multi-tiered","Networked","Object-based","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Pre-emptive","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Re-contextualized","Re-engineered","Reduced","Reverse-engineered","Right-sized","Robust","Seamless","Secured","Self-enabling","Sharable","Stand-alone","Streamlined","Switchable","Synchronised","Synergistic","Synergized","Team-oriented","Total","Triple-buffered","Universal","Up-sized","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary","Vision-oriented"],_=["clicks-and-mortar","value-added","vertical","proactive","robust","revolutionary","scalable","leading-edge","innovative","intuitive","strategic","e-business","mission-critical","sticky","one-to-one","24/7","end-to-end","global","B2B","B2C","granular","frictionless","virtual","viral","dynamic","24/365","best-of-breed","killer","magnetic","bleeding-edge","web-enabled","interactive","dot-com","sexy","back-end","real-time","efficient","front-end","distributed","seamless","extensible","turn-key","world-class","open-source","cross-platform","cross-media","synergistic","bricks-and-clicks","out-of-the-box","enterprise","integrated","impactful","wireless","transparent","next-generation","cutting-edge","user-centric","visionary","customized","ubiquitous","plug-and-play","collaborative","compelling","holistic","rich"],K=["synergies","paradigms","markets","partnerships","infrastructures","platforms","initiatives","channels","eyeballs","communities","ROI","solutions","action-items","portals","niches","technologies","content","supply-chains","convergence","relationships","architectures","interfaces","e-markets","e-commerce","systems","bandwidth","models","mindshare","deliverables","users","schemas","networks","applications","metrics","e-business","functionalities","experiences","web services","methodologies","blockchains","lifetime value"],J=["implement","utilize","integrate","streamline","optimize","evolve","transform","embrace","enable","orchestrate","leverage","reinvent","aggregate","architect","enhance","incentivize","morph","empower","envisioneer","monetize","harness","facilitate","seize","disintermediate","synergize","strategize","deploy","brand","grow","target","syndicate","synthesize","deliver","mesh","incubate","engage","maximize","benchmark","expedite","reintermediate","whiteboard","visualize","repurpose","innovate","scale","unleash","drive","extend","engineer","revolutionize","generate","exploit","transition","e-enable","iterate","cultivate","matrix","productize","redefine","recontextualize"],j=["24 hour","24/7","3rd generation","4th generation","5th generation","6th generation","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","background","bandwidth-monitored","bi-directional","bifurcated","bottom-line","clear-thinking","client-driven","client-server","coherent","cohesive","composite","context-sensitive","contextually-based","content-based","dedicated","demand-driven","didactic","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","even-keeled","executive","explicit","exuding","fault-tolerant","foreground","fresh-thinking","full-range","global","grid-enabled","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","multimedia","multi-state","multi-tasking","national","needs-based","neutral","next generation","non-volatile","object-oriented","optimal","optimizing","radical","real-time","reciprocal","regional","responsive","scalable","secondary","solution-oriented","stable","static","systematic","systemic","system-worthy","tangible","tertiary","transitional","uniform","upward-trending","user-facing","value-added","web-enabled","well-modulated","zero administration","zero defect","zero tolerance"],$=["{{person.last_name}} {{company.suffix}}","{{person.last_name}} - {{person.last_name}}","{{person.last_name}}, {{person.last_name}} and {{person.last_name}}"],V=["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","artificial intelligence","array","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","database","data-warehouse","definition","emulation","encoding","encryption","extranet","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","Graphic Interface","groupware","Graphical User Interface","hardware","help-desk","hierarchy","hub","implementation","info-mediaries","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge user","knowledge base","local area network","leverage","matrices","matrix","methodology","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","open system","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","secured line","service-desk","software","solution","standardization","strategy","structure","success","superstructure","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"],U=["Inc","and Sons","LLC","Group"],Y={adjective:O,buzz_adjective:_,buzz_noun:K,buzz_verb:J,descriptor:j,name_pattern:$,noun:V,suffix:U},q=Y,Z=["id","title","name","email","phone","token","group","category","password","comment","avatar","status","createdAt","updatedAt"],X={column:Z},Q=X,ee={wide:["January","February","March","April","May","June","July","August","September","October","November","December"],abbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},ae={wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],abbr:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]},re={month:ee,weekday:ae},te=re,ne=["Checking","Savings","Money Market","Investment","Home Loan","Credit Card","Auto Loan","Personal Loan"],ie=["34##-######-####L","37##-######-####L"],oe=["30[0-5]#-######-###L","36##-######-###L","54##-####-####-###L"],le=["6011-####-####-###L","65##-####-####-###L","64[4-9]#-####-####-###L","6011-62##-####-####-###L","65##-62##-####-####-###L","64[4-9]#-62##-####-####-###L"],se=["3528-####-####-###L","3529-####-####-###L","35[3-8]#-####-####-###L"],ce=["5018-#{4}-#{4}-#{3}L","5020-#{4}-#{4}-#{3}L","5038-#{4}-#{4}-#{3}L","5893-#{4}-#{4}-#{3}L","6304-#{4}-#{4}-#{3}L","6759-#{4}-#{4}-#{3}L","676[1-3]-####-####-###L","5018#{11,15}L","5020#{11,15}L","5038#{11,15}L","5893#{11,15}L","6304#{11,15}L","6759#{11,15}L","676[1-3]#{11,15}L"],ue=["5[1-5]##-####-####-###L","2[221-720]-####-####-###L"],de=["4###########L","4###-####-####-###L"],he={american_express:ie,diners_club:oe,discover:le,jcb:se,maestro:ce,mastercard:ue,visa:de},pe=he,me=[{name:"UAE Dirham",code:"AED",symbol:""},{name:"Afghani",code:"AFN",symbol:"؋"},{name:"Lek",code:"ALL",symbol:"Lek"},{name:"Armenian Dram",code:"AMD",symbol:""},{name:"Netherlands Antillian Guilder",code:"ANG",symbol:"ƒ"},{name:"Kwanza",code:"AOA",symbol:""},{name:"Argentine Peso",code:"ARS",symbol:"$"},{name:"Australian Dollar",code:"AUD",symbol:"$"},{name:"Aruban Guilder",code:"AWG",symbol:"ƒ"},{name:"Azerbaijanian Manat",code:"AZN",symbol:"ман"},{name:"Convertible Marks",code:"BAM",symbol:"KM"},{name:"Barbados Dollar",code:"BBD",symbol:"$"},{name:"Taka",code:"BDT",symbol:""},{name:"Bulgarian Lev",code:"BGN",symbol:"лв"},{name:"Bahraini Dinar",code:"BHD",symbol:""},{name:"Burundi Franc",code:"BIF",symbol:""},{name:"Bermudian Dollar (customarily known as Bermuda Dollar)",code:"BMD",symbol:"$"},{name:"Brunei Dollar",code:"BND",symbol:"$"},{name:"Boliviano boliviano",code:"BOB",symbol:"Bs"},{name:"Brazilian Real",code:"BRL",symbol:"R$"},{name:"Bahamian Dollar",code:"BSD",symbol:"$"},{name:"Pula",code:"BWP",symbol:"P"},{name:"Belarusian Ruble",code:"BYN",symbol:"Rbl"},{name:"Belize Dollar",code:"BZD",symbol:"BZ$"},{name:"Canadian Dollar",code:"CAD",symbol:"$"},{name:"Congolese Franc",code:"CDF",symbol:""},{name:"Swiss Franc",code:"CHF",symbol:"CHF"},{name:"Chilean Peso",code:"CLP",symbol:"$"},{name:"Yuan Renminbi",code:"CNY",symbol:"¥"},{name:"Colombian Peso",code:"COP",symbol:"$"},{name:"Costa Rican Colon",code:"CRC",symbol:"₡"},{name:"Cuban Peso",code:"CUP",symbol:"₱"},{name:"Cape Verde Escudo",code:"CVE",symbol:""},{name:"Czech Koruna",code:"CZK",symbol:"Kč"},{name:"Djibouti Franc",code:"DJF",symbol:""},{name:"Danish Krone",code:"DKK",symbol:"kr"},{name:"Dominican Peso",code:"DOP",symbol:"RD$"},{name:"Algerian Dinar",code:"DZD",symbol:""},{name:"Egyptian Pound",code:"EGP",symbol:"£"},{name:"Nakfa",code:"ERN",symbol:""},{name:"Ethiopian Birr",code:"ETB",symbol:""},{name:"Euro",code:"EUR",symbol:"€"},{name:"Fiji Dollar",code:"FJD",symbol:"$"},{name:"Falkland Islands Pound",code:"FKP",symbol:"£"},{name:"Pound Sterling",code:"GBP",symbol:"£"},{name:"Lari",code:"GEL",symbol:""},{name:"Cedi",code:"GHS",symbol:""},{name:"Gibraltar Pound",code:"GIP",symbol:"£"},{name:"Dalasi",code:"GMD",symbol:""},{name:"Guinea Franc",code:"GNF",symbol:""},{name:"Quetzal",code:"GTQ",symbol:"Q"},{name:"Guyana Dollar",code:"GYD",symbol:"$"},{name:"Hong Kong Dollar",code:"HKD",symbol:"$"},{name:"Lempira",code:"HNL",symbol:"L"},{name:"Gourde",code:"HTG",symbol:""},{name:"Forint",code:"HUF",symbol:"Ft"},{name:"Rupiah",code:"IDR",symbol:"Rp"},{name:"New Israeli Sheqel",code:"ILS",symbol:"₪"},{name:"Bhutanese Ngultrum",code:"BTN",symbol:"Nu"},{name:"Indian Rupee",code:"INR",symbol:"₹"},{name:"Iraqi Dinar",code:"IQD",symbol:""},{name:"Iranian Rial",code:"IRR",symbol:"﷼"},{name:"Iceland Krona",code:"ISK",symbol:"kr"},{name:"Jamaican Dollar",code:"JMD",symbol:"J$"},{name:"Jordanian Dinar",code:"JOD",symbol:""},{name:"Yen",code:"JPY",symbol:"¥"},{name:"Kenyan Shilling",code:"KES",symbol:""},{name:"Som",code:"KGS",symbol:"лв"},{name:"Riel",code:"KHR",symbol:"៛"},{name:"Comoro Franc",code:"KMF",symbol:""},{name:"North Korean Won",code:"KPW",symbol:"₩"},{name:"Won",code:"KRW",symbol:"₩"},{name:"Kuwaiti Dinar",code:"KWD",symbol:""},{name:"Cayman Islands Dollar",code:"KYD",symbol:"$"},{name:"Tenge",code:"KZT",symbol:"лв"},{name:"Kip",code:"LAK",symbol:"₭"},{name:"Lebanese Pound",code:"LBP",symbol:"£"},{name:"Sri Lanka Rupee",code:"LKR",symbol:"₨"},{name:"Liberian Dollar",code:"LRD",symbol:"$"},{name:"Libyan Dinar",code:"LYD",symbol:""},{name:"Moroccan Dirham",code:"MAD",symbol:""},{name:"Moldovan Leu",code:"MDL",symbol:""},{name:"Malagasy Ariary",code:"MGA",symbol:""},{name:"Denar",code:"MKD",symbol:"ден"},{name:"Kyat",code:"MMK",symbol:""},{name:"Tugrik",code:"MNT",symbol:"₮"},{name:"Pataca",code:"MOP",symbol:""},{name:"Ouguiya",code:"MRU",symbol:""},{name:"Mauritius Rupee",code:"MUR",symbol:"₨"},{name:"Rufiyaa",code:"MVR",symbol:""},{name:"Kwacha",code:"MWK",symbol:""},{name:"Mexican Peso",code:"MXN",symbol:"$"},{name:"Malaysian Ringgit",code:"MYR",symbol:"RM"},{name:"Metical",code:"MZN",symbol:"MT"},{name:"Naira",code:"NGN",symbol:"₦"},{name:"Cordoba Oro",code:"NIO",symbol:"C$"},{name:"Norwegian Krone",code:"NOK",symbol:"kr"},{name:"Nepalese Rupee",code:"NPR",symbol:"₨"},{name:"New Zealand Dollar",code:"NZD",symbol:"$"},{name:"Rial Omani",code:"OMR",symbol:"﷼"},{name:"Balboa",code:"PAB",symbol:"B/."},{name:"Nuevo Sol",code:"PEN",symbol:"S/."},{name:"Kina",code:"PGK",symbol:""},{name:"Philippine Peso",code:"PHP",symbol:"Php"},{name:"Pakistan Rupee",code:"PKR",symbol:"₨"},{name:"Zloty",code:"PLN",symbol:"zł"},{name:"Guarani",code:"PYG",symbol:"Gs"},{name:"Qatari Rial",code:"QAR",symbol:"﷼"},{name:"New Leu",code:"RON",symbol:"lei"},{name:"Serbian Dinar",code:"RSD",symbol:"Дин."},{name:"Russian Ruble",code:"RUB",symbol:"руб"},{name:"Rwanda Franc",code:"RWF",symbol:""},{name:"Saudi Riyal",code:"SAR",symbol:"﷼"},{name:"Solomon Islands Dollar",code:"SBD",symbol:"$"},{name:"Seychelles Rupee",code:"SCR",symbol:"₨"},{name:"Sudanese Pound",code:"SDG",symbol:""},{name:"Swedish Krona",code:"SEK",symbol:"kr"},{name:"Singapore Dollar",code:"SGD",symbol:"$"},{name:"Saint Helena Pound",code:"SHP",symbol:"£"},{name:"Leone",code:"SLE",symbol:""},{name:"Somali Shilling",code:"SOS",symbol:"S"},{name:"Surinam Dollar",code:"SRD",symbol:"$"},{name:"South Sudanese pound",code:"SSP",symbol:""},{name:"Dobra",code:"STN",symbol:"Db"},{name:"Syrian Pound",code:"SYP",symbol:"£"},{name:"Lilangeni",code:"SZL",symbol:""},{name:"Baht",code:"THB",symbol:"฿"},{name:"Somoni",code:"TJS",symbol:""},{name:"Manat",code:"TMT",symbol:""},{name:"Tunisian Dinar",code:"TND",symbol:""},{name:"Pa'anga",code:"TOP",symbol:""},{name:"Turkish Lira",code:"TRY",symbol:"₺"},{name:"Trinidad and Tobago Dollar",code:"TTD",symbol:"TT$"},{name:"New Taiwan Dollar",code:"TWD",symbol:"NT$"},{name:"Tanzanian Shilling",code:"TZS",symbol:""},{name:"Hryvnia",code:"UAH",symbol:"₴"},{name:"Uganda Shilling",code:"UGX",symbol:""},{name:"US Dollar",code:"USD",symbol:"$"},{name:"Peso Uruguayo",code:"UYU",symbol:"$U"},{name:"Uzbekistan Sum",code:"UZS",symbol:"лв"},{name:"Venezuelan bolívar",code:"VES",symbol:"Bs"},{name:"Dong",code:"VND",symbol:"₫"},{name:"Vatu",code:"VUV",symbol:""},{name:"Tala",code:"WST",symbol:""},{name:"CFA Franc BEAC",code:"XAF",symbol:""},{name:"East Caribbean Dollar",code:"XCD",symbol:"$"},{name:"CFA Franc BCEAO",code:"XOF",symbol:""},{name:"CFP Franc",code:"XPF",symbol:""},{name:"Yemeni Rial",code:"YER",symbol:"﷼"},{name:"Rand",code:"ZAR",symbol:"R"},{name:"Lesotho Loti",code:"LSL",symbol:""},{name:"Namibia Dollar",code:"NAD",symbol:"N$"},{name:"Zambian Kwacha",code:"ZMW",symbol:"K"},{name:"Zimbabwe Dollar",code:"ZWL",symbol:""}],ye=["deposit","withdrawal","payment","invoice"],ge={account_type:ne,credit_card:pe,currency:me,transaction_type:ye},fe=ge,be=["auxiliary","primary","back-end","digital","open-source","virtual","cross-platform","redundant","online","haptic","multi-byte","bluetooth","wireless","1080p","neural","optical","solid state","mobile"],ke=["backing up","bypassing","hacking","overriding","compressing","copying","navigating","indexing","connecting","generating","quantifying","calculating","synthesizing","transmitting","programming","parsing"],ve=["driver","protocol","bandwidth","panel","microchip","program","port","card","array","interface","system","sensor","firewall","hard drive","pixel","alarm","feed","monitor","application","transmitter","bus","circuit","capacitor","matrix"],we=["If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!","We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!","Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!","You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!","Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!","The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!","{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!","I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!"],Ce=["back up","bypass","hack","override","compress","copy","navigate","index","connect","generate","quantify","calculate","synthesize","input","transmit","program","reboot","parse"],Se={adjective:be,ingverb:ke,noun:ve,phrase:we,verb:Ce},Ae=Se,Me=["com","biz","info","name","net","org"],Be=["example.org","example.com","example.net"],Te=["gmail.com","yahoo.com","hotmail.com"],xe={domain_suffix:Me,example_email:Be,free_email:Te},Re=xe,Le=["#####","####","###"],Pe=["Abilene","Akron","Alafaya","Alameda","Albany","Albuquerque","Alexandria","Alhambra","Aliso Viejo","Allen","Allentown","Aloha","Alpharetta","Altadena","Altamonte Springs","Altoona","Amarillo","Ames","Anaheim","Anchorage","Anderson","Ankeny","Ann Arbor","Annandale","Antelope","Antioch","Apex","Apopka","Apple Valley","Appleton","Arcadia","Arden-Arcade","Arecibo","Arlington","Arlington Heights","Arvada","Ashburn","Asheville","Aspen Hill","Atascocita","Athens-Clarke County","Atlanta","Attleboro","Auburn","Augusta-Richmond County","Aurora","Austin","Avondale","Azusa","Bakersfield","Baldwin Park","Baltimore","Barnstable Town","Bartlett","Baton Rouge","Battle Creek","Bayamon","Bayonne","Baytown","Beaumont","Beavercreek","Beaverton","Bedford","Bel Air South","Bell Gardens","Belleville","Bellevue","Bellflower","Bellingham","Bend","Bentonville","Berkeley","Berwyn","Bethesda","Bethlehem","Billings","Biloxi","Binghamton","Birmingham","Bismarck","Blacksburg","Blaine","Bloomington","Blue Springs","Boca Raton","Boise City","Bolingbrook","Bonita Springs","Bossier City","Boston","Bothell","Boulder","Bountiful","Bowie","Bowling Green","Boynton Beach","Bozeman","Bradenton","Brandon","Brentwood","Bridgeport","Bristol","Brockton","Broken Arrow","Brookhaven","Brookline","Brooklyn Park","Broomfield","Brownsville","Bryan","Buckeye","Buena Park","Buffalo","Buffalo Grove","Burbank","Burien","Burke","Burleson","Burlington","Burnsville","Caguas","Caldwell","Camarillo","Cambridge","Camden","Canton","Cape Coral","Carlsbad","Carmel","Carmichael","Carolina","Carrollton","Carson","Carson City","Cary","Casa Grande","Casas Adobes","Casper","Castle Rock","Castro Valley","Catalina Foothills","Cathedral City","Catonsville","Cedar Hill","Cedar Park","Cedar Rapids","Centennial","Centreville","Ceres","Cerritos","Champaign","Chandler","Chapel Hill","Charleston","Charlotte","Charlottesville","Chattanooga","Cheektowaga","Chesapeake","Chesterfield","Cheyenne","Chicago","Chico","Chicopee","Chino","Chino Hills","Chula Vista","Cicero","Cincinnati","Citrus Heights","Clarksville","Clearwater","Cleveland","Cleveland Heights","Clifton","Clovis","Coachella","Coconut Creek","Coeur d'Alene","College Station","Collierville","Colorado Springs","Colton","Columbia","Columbus","Commerce City","Compton","Concord","Conroe","Conway","Coon Rapids","Coral Gables","Coral Springs","Corona","Corpus Christi","Corvallis","Costa Mesa","Council Bluffs","Country Club","Covina","Cranston","Cupertino","Cutler Bay","Cuyahoga Falls","Cypress","Dale City","Dallas","Daly City","Danbury","Danville","Davenport","Davie","Davis","Dayton","Daytona Beach","DeKalb","DeSoto","Dearborn","Dearborn Heights","Decatur","Deerfield Beach","Delano","Delray Beach","Deltona","Denton","Denver","Des Moines","Des Plaines","Detroit","Diamond Bar","Doral","Dothan","Downers Grove","Downey","Draper","Dublin","Dubuque","Duluth","Dundalk","Dunwoody","Durham","Eagan","East Hartford","East Honolulu","East Lansing","East Los Angeles","East Orange","East Providence","Eastvale","Eau Claire","Eden Prairie","Edina","Edinburg","Edmond","El Cajon","El Centro","El Dorado Hills","El Monte","El Paso","Elgin","Elizabeth","Elk Grove","Elkhart","Ellicott City","Elmhurst","Elyria","Encinitas","Enid","Enterprise","Erie","Escondido","Euclid","Eugene","Euless","Evanston","Evansville","Everett","Fairfield","Fall River","Fargo","Farmington","Farmington Hills","Fayetteville","Federal Way","Findlay","Fishers","Flagstaff","Flint","Florence-Graham","Florin","Florissant","Flower Mound","Folsom","Fond du Lac","Fontana","Fort Collins","Fort Lauderdale","Fort Myers","Fort Pierce","Fort Smith","Fort Wayne","Fort Worth","Fountain Valley","Fountainebleau","Framingham","Franklin","Frederick","Freeport","Fremont","Fresno","Frisco","Fullerton","Gainesville","Gaithersburg","Galveston","Garden Grove","Gardena","Garland","Gary","Gastonia","Georgetown","Germantown","Gilbert","Gilroy","Glen Burnie","Glendale","Glendora","Glenview","Goodyear","Grand Forks","Grand Island","Grand Junction","Grand Prairie","Grand Rapids","Grapevine","Great Falls","Greeley","Green Bay","Greensboro","Greenville","Greenwood","Gresham","Guaynabo","Gulfport","Hacienda Heights","Hackensack","Haltom City","Hamilton","Hammond","Hampton","Hanford","Harlingen","Harrisburg","Harrisonburg","Hartford","Hattiesburg","Haverhill","Hawthorne","Hayward","Hemet","Hempstead","Henderson","Hendersonville","Hesperia","Hialeah","Hicksville","High Point","Highland","Highlands Ranch","Hillsboro","Hilo","Hoboken","Hoffman Estates","Hollywood","Homestead","Honolulu","Hoover","Houston","Huntersville","Huntington","Huntington Beach","Huntington Park","Huntsville","Hutchinson","Idaho Falls","Independence","Indianapolis","Indio","Inglewood","Iowa City","Irondequoit","Irvine","Irving","Jackson","Jacksonville","Janesville","Jefferson City","Jeffersonville","Jersey City","Johns Creek","Johnson City","Joliet","Jonesboro","Joplin","Jupiter","Jurupa Valley","Kalamazoo","Kannapolis","Kansas City","Kearny","Keller","Kendale Lakes","Kendall","Kenner","Kennewick","Kenosha","Kent","Kentwood","Kettering","Killeen","Kingsport","Kirkland","Kissimmee","Knoxville","Kokomo","La Crosse","La Habra","La Mesa","La Mirada","Lacey","Lafayette","Laguna Niguel","Lake Charles","Lake Elsinore","Lake Forest","Lake Havasu City","Lake Ridge","Lakeland","Lakeville","Lakewood","Lancaster","Lansing","Laredo","Largo","Las Cruces","Las Vegas","Lauderhill","Lawrence","Lawton","Layton","League City","Lee's Summit","Leesburg","Lehi","Lehigh Acres","Lenexa","Levittown","Lewisville","Lexington-Fayette","Lincoln","Linden","Little Rock","Littleton","Livermore","Livonia","Lodi","Logan","Lombard","Lompoc","Long Beach","Longmont","Longview","Lorain","Los Angeles","Louisville/Jefferson County","Loveland","Lowell","Lubbock","Lynchburg","Lynn","Lynwood","Macon-Bibb County","Madera","Madison","Malden","Manchester","Manhattan","Mansfield","Manteca","Maple Grove","Margate","Maricopa","Marietta","Marysville","Mayaguez","McAllen","McKinney","McLean","Medford","Melbourne","Memphis","Menifee","Mentor","Merced","Meriden","Meridian","Mesa","Mesquite","Metairie","Methuen Town","Miami","Miami Beach","Miami Gardens","Middletown","Midland","Midwest City","Milford","Millcreek","Milpitas","Milwaukee","Minneapolis","Minnetonka","Minot","Miramar","Mishawaka","Mission","Mission Viejo","Missoula","Missouri City","Mobile","Modesto","Moline","Monroe","Montebello","Monterey Park","Montgomery","Moore","Moreno Valley","Morgan Hill","Mount Pleasant","Mount Prospect","Mount Vernon","Mountain View","Muncie","Murfreesboro","Murray","Murrieta","Nampa","Napa","Naperville","Nashua","Nashville-Davidson","National City","New Bedford","New Braunfels","New Britain","New Brunswick","New Haven","New Orleans","New Rochelle","New York","Newark","Newport Beach","Newport News","Newton","Niagara Falls","Noblesville","Norfolk","Normal","Norman","North Bethesda","North Charleston","North Highlands","North Las Vegas","North Lauderdale","North Little Rock","North Miami","North Miami Beach","North Port","North Richland Hills","Norwalk","Novato","Novi","O'Fallon","Oak Lawn","Oak Park","Oakland","Oakland Park","Ocala","Oceanside","Odessa","Ogden","Oklahoma City","Olathe","Olympia","Omaha","Ontario","Orange","Orem","Orland Park","Orlando","Oro Valley","Oshkosh","Overland Park","Owensboro","Oxnard","Palatine","Palm Bay","Palm Beach Gardens","Palm Coast","Palm Desert","Palm Harbor","Palm Springs","Palmdale","Palo Alto","Paradise","Paramount","Parker","Parma","Pasadena","Pasco","Passaic","Paterson","Pawtucket","Peabody","Pearl City","Pearland","Pembroke Pines","Pensacola","Peoria","Perris","Perth Amboy","Petaluma","Pflugerville","Pharr","Philadelphia","Phoenix","Pico Rivera","Pine Bluff","Pine Hills","Pinellas Park","Pittsburg","Pittsburgh","Pittsfield","Placentia","Plainfield","Plano","Plantation","Pleasanton","Plymouth","Pocatello","Poinciana","Pomona","Pompano Beach","Ponce","Pontiac","Port Arthur","Port Charlotte","Port Orange","Port St. Lucie","Portage","Porterville","Portland","Portsmouth","Potomac","Poway","Providence","Provo","Pueblo","Quincy","Racine","Raleigh","Rancho Cordova","Rancho Cucamonga","Rancho Palos Verdes","Rancho Santa Margarita","Rapid City","Reading","Redding","Redlands","Redmond","Redondo Beach","Redwood City","Reno","Renton","Reston","Revere","Rialto","Richardson","Richland","Richmond","Rio Rancho","Riverside","Riverton","Riverview","Roanoke","Rochester","Rochester Hills","Rock Hill","Rockford","Rocklin","Rockville","Rockwall","Rocky Mount","Rogers","Rohnert Park","Rosemead","Roseville","Roswell","Round Rock","Rowland Heights","Rowlett","Royal Oak","Sacramento","Saginaw","Salem","Salina","Salinas","Salt Lake City","Sammamish","San Angelo","San Antonio","San Bernardino","San Bruno","San Buenaventura (Ventura)","San Clemente","San Diego","San Francisco","San Jacinto","San Jose","San Juan","San Leandro","San Luis Obispo","San Marcos","San Mateo","San Rafael","San Ramon","San Tan Valley","Sandy","Sandy Springs","Sanford","Santa Ana","Santa Barbara","Santa Clara","Santa Clarita","Santa Cruz","Santa Fe","Santa Maria","Santa Monica","Santa Rosa","Santee","Sarasota","Savannah","Sayreville","Schaumburg","Schenectady","Scottsdale","Scranton","Seattle","Severn","Shawnee","Sheboygan","Shoreline","Shreveport","Sierra Vista","Silver Spring","Simi Valley","Sioux City","Sioux Falls","Skokie","Smyrna","Somerville","South Bend","South Gate","South Hill","South Jordan","South San Francisco","South Valley","South Whittier","Southaven","Southfield","Sparks","Spokane","Spokane Valley","Spring","Spring Hill","Spring Valley","Springdale","Springfield","St. Charles","St. Clair Shores","St. Cloud","St. George","St. Joseph","St. Louis","St. Louis Park","St. Paul","St. Peters","St. Petersburg","Stamford","State College","Sterling Heights","Stillwater","Stockton","Stratford","Strongsville","Suffolk","Sugar Land","Summerville","Sunnyvale","Sunrise","Sunrise Manor","Surprise","Syracuse","Tacoma","Tallahassee","Tamarac","Tamiami","Tampa","Taunton","Taylor","Taylorsville","Temecula","Tempe","Temple","Terre Haute","Texas City","The Hammocks","The Villages","The Woodlands","Thornton","Thousand Oaks","Tigard","Tinley Park","Titusville","Toledo","Toms River","Tonawanda","Topeka","Torrance","Town 'n' Country","Towson","Tracy","Trenton","Troy","Trujillo Alto","Tuckahoe","Tucson","Tulare","Tulsa","Turlock","Tuscaloosa","Tustin","Twin Falls","Tyler","Union City","University","Upland","Urbana","Urbandale","Utica","Vacaville","Valdosta","Vallejo","Vancouver","Victoria","Victorville","Vineland","Virginia Beach","Visalia","Vista","Waco","Waipahu","Waldorf","Walnut Creek","Waltham","Warner Robins","Warren","Warwick","Washington","Waterbury","Waterloo","Watsonville","Waukegan","Waukesha","Wauwatosa","Wellington","Wesley Chapel","West Allis","West Babylon","West Covina","West Des Moines","West Hartford","West Haven","West Jordan","West Lafayette","West New York","West Palm Beach","West Sacramento","West Seneca","West Valley City","Westfield","Westland","Westminster","Weston","Weymouth Town","Wheaton","White Plains","Whittier","Wichita","Wichita Falls","Wilmington","Wilson","Winston-Salem","Woodbury","Woodland","Worcester","Wylie","Wyoming","Yakima","Yonkers","Yorba Linda","York","Youngstown","Yuba City","Yucaipa","Yuma"],Ee=["{{location.city_prefix}} {{person.first_name}}{{location.city_suffix}}","{{location.city_prefix}} {{person.first_name}}","{{person.first_name}}{{location.city_suffix}}","{{person.last_name}}{{location.city_suffix}}","{{location.city_name}}"],De=["North","East","West","South","New","Lake","Port","Fort"],Ne=["town","ton","land","ville","berg","burgh","boro","borough","bury","view","port","mouth","stad","stead","furt","chester","cester","fort","field","haven","side","shire","worth"],He=["Afghanistan","Aland Islands","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bonaire, Sint Eustatius and Saba","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory (Chagos Archipelago)","Brunei Darussalam","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos (Keeling) Islands","Colombia","Comoros","Congo","Cook Islands","Costa Rica","Cote d'Ivoire","Croatia","Cuba","Curacao","Cyprus","Czechia","Democratic Republic of the Congo","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Eswatini","Ethiopia","Faroe Islands","Falkland Islands (Malvinas)","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guinea-Bissau","Guyana","Haiti","Heard Island and McDonald Islands","Holy See (Vatican City State)","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Isle of Man","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Democratic People's Republic of Korea","Republic of Korea","Kuwait","Kyrgyz Republic","Lao People's Democratic Republic","Latvia","Lebanon","Lesotho","Liberia","Libyan Arab Jamahiriya","Liechtenstein","Lithuania","Luxembourg","Macao","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Macedonia","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn Islands","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russian Federation","Rwanda","Saint Barthelemy","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Martin","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Sint Maarten","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Svalbard & Jan Mayen Islands","Sweden","Switzerland","Syrian Arab Republic","Taiwan","Tajikistan","Tanzania","Thailand","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Virgin Islands, British","Virgin Islands, U.S.","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe"],Ge=["Adams County","Calhoun County","Carroll County","Clark County","Clay County","Crawford County","Douglas County","Fayette County","Franklin County","Grant County","Greene County","Hamilton County","Hancock County","Henry County","Jackson County","Jefferson County","Johnson County","Lake County","Lawrence County","Lee County","Lincoln County","Logan County","Madison County","Marion County","Marshall County","Monroe County","Montgomery County","Morgan County","Perry County","Pike County","Polk County","Scott County","Union County","Warren County","Washington County","Wayne County","Avon","Bedfordshire","Berkshire","Borders","Buckinghamshire","Cambridgeshire","Central","Cheshire","Cleveland","Clwyd","Cornwall","County Antrim","County Armagh","County Down","County Fermanagh","County Londonderry","County Tyrone","Cumbria","Derbyshire","Devon","Dorset","Dumfries and Galloway","Durham","Dyfed","East Sussex","Essex","Fife","Gloucestershire","Grampian","Greater Manchester","Gwent","Gwynedd County","Hampshire","Herefordshire","Hertfordshire","Highlands and Islands","Humberside","Isle of Wight","Kent","Lancashire","Leicestershire","Lincolnshire","Lothian","Merseyside","Mid Glamorgan","Norfolk","North Yorkshire","Northamptonshire","Northumberland","Nottinghamshire","Oxfordshire","Powys","Rutland","Shropshire","Somerset","South Glamorgan","South Yorkshire","Staffordshire","Strathclyde","Suffolk","Surrey","Tayside","Tyne and Wear","Warwickshire","West Glamorgan","West Midlands","West Sussex","West Yorkshire","Wiltshire","Worcestershire"],We=["United States of America"],Fe=["North","East","South","West","Northeast","Northwest","Southeast","Southwest"],ze=["N","E","S","W","NE","NW","SE","SW"],Ie=["#####","#####-####"],Oe=["Apt. ###","Suite ###"],_e=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"],Ke=["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"],Je={normal:"{{location.buildingNumber}} {{location.street}}",full:"{{location.buildingNumber}} {{location.street}} {{location.secondaryAddress}}"},je=["10th Street","11th Street","12th Street","13th Street","14th Street","15th Street","16th Street","1st Avenue","1st Street","2nd Avenue","2nd Street","3rd Avenue","3rd Street","4th Avenue","4th Street","5th Avenue","5th Street","6th Avenue","6th Street","7th Avenue","7th Street","8th Avenue","8th Street","9th Street","A Street","Abbey Road","Adams Avenue","Adams Street","Airport Road","Albany Road","Albert Road","Albion Street","Alexandra Road","Alfred Street","Alma Street","Ash Close","Ash Grove","Ash Road","Ash Street","Aspen Close","Atlantic Avenue","Avenue Road","Back Lane","Baker Street","Balmoral Road","Barn Close","Barton Road","Bath Road","Bath Street","Bay Street","Beach Road","Bedford Road","Beech Close","Beech Drive","Beech Grove","Beech Road","Beechwood Avenue","Bell Lane","Belmont Road","Birch Avenue","Birch Close","Birch Grove","Birch Road","Blind Lane","Bluebell Close","Boundary Road","Bramble Close","Bramley Close","Bridge Road","Bridge Street","Broad Lane","Broad Street","Broadway","Broadway Avenue","Broadway Street","Brook Lane","Brook Road","Brook Street","Brookside","Buckingham Road","Cambridge Street","Canal Street","Castle Close","Castle Lane","Castle Road","Castle Street","Cavendish Road","Cedar Avenue","Cedar Close","Cedar Grove","Cedar Road","Cedar Street","Cemetery Road","Center Avenue","Center Road","Center Street","Central Avenue","Central Street","Chapel Close","Chapel Hill","Chapel Road","Chapel Street","Charles Street","Cherry Close","Cherry Street","Cherry Tree Close","Chester Road","Chestnut Close","Chestnut Drive","Chestnut Grove","Chestnut Street","Church Avenue","Church Close","Church Hill","Church Lane","Church Path","Church Road","Church Street","Church View","Church Walk","Claremont Road","Clarence Road","Clarence Street","Clarendon Road","Clark Street","Clay Lane","Cleveland Street","Cliff Road","Clifton Road","Clinton Street","College Avenue","College Street","Columbia Avenue","Commerce Street","Commercial Road","Commercial Street","Common Lane","Coronation Avenue","Coronation Road","County Line Road","County Road","Court Street","Cow Lane","Crescent Road","Cromwell Road","Cross Lane","Cross Street","Crown Street","Cumberland Street","Dale Street","Dark Lane","Davis Street","Depot Street","Derby Road","Derwent Close","Devonshire Road","Division Street","Douglas Road","Duke Street","E 10th Street","E 11th Street","E 12th Street","E 14th Street","E 1st Street","E 2nd Street","E 3rd Street","E 4th Avenue","E 4th Street","E 5th Street","E 6th Avenue","E 6th Street","E 7th Street","E 8th Street","E 9th Street","E Bridge Street","E Broad Street","E Broadway","E Broadway Street","E Cedar Street","E Center Street","E Central Avenue","E Church Street","E Elm Street","E Franklin Street","E Front Street","E Grand Avenue","E High Street","E Jackson Street","E Jefferson Street","E Main","E Main Street","E Maple Street","E Market Street","E North Street","E Oak Street","E Park Avenue","E Pine Street","E River Road","E South Street","E State Street","E Union Street","E Walnut Street","E Washington Avenue","E Washington Street","E Water Street","East Avenue","East Road","East Street","Edward Street","Elm Close","Elm Grove","Elm Road","Elm Street","Euclid Avenue","Fairfield Road","Farm Close","Ferry Road","Field Close","Field Lane","First Avenue","First Street","Fore Street","Forest Avenue","Forest Road","Fourth Avenue","Franklin Avenue","Franklin Road","Franklin Street","Front Street","Frontage Road","Garden Close","Garden Street","George Street","Gladstone Road","Glebe Close","Gloucester Road","Gordon Road","Gordon Street","Grand Avenue","Grange Avenue","Grange Close","Grange Road","Grant Street","Green Close","Green Lane","Green Street","Greenville Road","Greenway","Greenwood Road","Grove Lane","Grove Road","Grove Street","Hall Lane","Hall Street","Harrison Avenue","Harrison Street","Hawthorn Avenue","Hawthorn Close","Hazel Close","Hazel Grove","Heath Road","Heather Close","Henry Street","Heron Close","Hickory Street","High Road","High Street","Highfield Avenue","Highfield Close","Highfield Road","Highland Avenue","Hill Road","Hill Street","Hillside","Hillside Avenue","Hillside Close","Hillside Road","Holly Close","Honeysuckle Close","Howard Road","Howard Street","Jackson Avenue","Jackson Street","James Street","Jefferson Avenue","Jefferson Street","Johnson Street","Jubilee Close","Juniper Close","Kent Road","Kestrel Close","King Street","King's Road","Kingfisher Close","Kings Highway","Kingsway","Laburnum Grove","Lafayette Street","Lake Avenue","Lake Drive","Lake Road","Lake Street","Lancaster Road","Lansdowne Road","Larch Close","Laurel Close","Lawrence Street","Lee Street","Liberty Street","Lime Grove","Lincoln Avenue","Lincoln Highway","Lincoln Road","Lincoln Street","Locust Street","Lodge Close","Lodge Lane","London Road","Long Lane","Low Road","Madison Avenue","Madison Street","Main","Main Avenue","Main Road","Main Street","Main Street E","Main Street N","Main Street S","Main Street W","Manchester Road","Manor Close","Manor Drive","Manor Gardens","Manor Road","Manor Way","Maple Avenue","Maple Close","Maple Drive","Maple Road","Maple Street","Market Place","Market Square","Market Street","Marlborough Road","Marsh Lane","Martin Luther King Boulevard","Martin Luther King Drive","Martin Luther King Jr Boulevard","Mary Street","Mayfield Road","Meadow Close","Meadow Drive","Meadow Lane","Meadow View","Meadow Way","Memorial Drive","Middle Street","Mill Close","Mill Lane","Mill Road","Mill Street","Milton Road","Milton Street","Monroe Street","Moor Lane","Moss Lane","Mount Pleasant","Mount Street","Mulberry Street","N 1st Street","N 2nd Street","N 3rd Street","N 4th Street","N 5th Street","N 6th Street","N 7th Street","N 8th Street","N 9th Street","N Bridge Street","N Broad Street","N Broadway","N Broadway Street","N Cedar Street","N Center Street","N Central Avenue","N Chestnut Street","N Church Street","N College Street","N Court Street","N Division Street","N East Street","N Elm Street","N Franklin Street","N Front Street","N Harrison Street","N High Street","N Jackson Street","N Jefferson Street","N Lincoln Street","N Locust Street","N Main","N Main Avenue","N Main Street","N Maple Street","N Market Street","N Monroe Street","N Oak Street","N Park Street","N Pearl Street","N Pine Street","N Poplar Street","N Railroad Street","N State Street","N Union Street","N Walnut Street","N Washington Avenue","N Washington Street","N Water Street","Nelson Road","Nelson Street","New Lane","New Road","New Street","Newton Road","Nightingale Close","Norfolk Road","North Avenue","North Lane","North Road","North Street","Northfield Road","Oak Avenue","Oak Drive","Oak Lane","Oak Road","Oak Street","Oakfield Road","Oaklands","Old Lane","Old Military Road","Old Road","Old State Road","Orchard Drive","Orchard Lane","Orchard Road","Orchard Street","Oxford Road","Oxford Street","Park Avenue","Park Crescent","Park Drive","Park Lane","Park Place","Park Road","Park Street","Park View","Parkside","Pearl Street","Pennsylvania Avenue","Pine Close","Pine Grove","Pine Street","Pinfold Lane","Pleasant Street","Poplar Avenue","Poplar Close","Poplar Road","Poplar Street","Post Road","Pound Lane","Princes Street","Princess Street","Priory Close","Priory Road","Prospect Avenue","Prospect Place","Prospect Road","Prospect Street","Quarry Lane","Quarry Road","Queen's Road","Railroad Avenue","Railroad Street","Railway Street","Rectory Close","Rectory Lane","Richmond Close","Richmond Road","Ridge Road","River Road","River Street","Riverside","Riverside Avenue","Riverside Drive","Roman Road","Roman Way","Rowan Close","Russell Street","S 10th Street","S 14th Street","S 1st Avenue","S 1st Street","S 2nd Street","S 3rd Street","S 4th Street","S 5th Street","S 6th Street","S 7th Street","S 8th Street","S 9th Street","S Bridge Street","S Broad Street","S Broadway","S Broadway Street","S Center Street","S Central Avenue","S Chestnut Street","S Church Street","S College Street","S Division Street","S East Street","S Elm Street","S Franklin Street","S Front Street","S Grand Avenue","S High Street","S Jackson Street","S Jefferson Street","S Lincoln Street","S Main","S Main Avenue","S Main Street","S Maple Street","S Market Street","S Mill Street","S Monroe Street","S Oak Street","S Park Street","S Pine Street","S Railroad Street","S State Street","S Union Street","S Walnut Street","S Washington Avenue","S Washington Street","S Water Street","S West Street","Salisbury Road","Sandringham Road","Sandy Lane","School Close","School Lane","School Road","School Street","Second Avenue","Silver Street","Skyline Drive","Smith Street","Somerset Road","South Avenue","South Drive","South Road","South Street","South View","Spring Gardens","Spring Street","Springfield Close","Springfield Road","Spruce Street","St Andrew's Road","St Andrews Close","St George's Road","St John's Road","St Mary's Close","St Mary's Road","Stanley Road","Stanley Street","State Avenue","State Line Road","State Road","State Street","Station Road","Station Street","Stoney Lane","Sycamore Avenue","Sycamore Close","Sycamore Drive","Sycamore Street","Talbot Road","Tennyson Road","The Avenue","The Beeches","The Causeway","The Chase","The Coppice","The Copse","The Crescent","The Croft","The Dell","The Drive","The Fairway","The Glebe","The Grange","The Green","The Grove","The Hawthorns","The Lane","The Laurels","The Limes","The Maltings","The Meadows","The Mews","The Mount","The Oaks","The Orchard","The Oval","The Paddock","The Paddocks","The Poplars","The Ridgeway","The Ridings","The Rise","The Sidings","The Spinney","The Square","The Willows","The Woodlands","Third Avenue","Third Street","Tower Road","Trinity Road","Tudor Close","Union Avenue","Union Street","University Avenue","University Drive","Valley Road","Veterans Memorial Drive","Veterans Memorial Highway","Vicarage Close","Vicarage Lane","Vicarage Road","Victoria Place","Victoria Road","Victoria Street","Vine Street","W 10th Street","W 11th Street","W 12th Street","W 14th Street","W 1st Street","W 2nd Street","W 3rd Street","W 4th Avenue","W 4th Street","W 5th Street","W 6th Avenue","W 6th Street","W 7th Street","W 8th Street","W 9th Street","W Bridge Street","W Broad Street","W Broadway","W Broadway Avenue","W Broadway Street","W Center Street","W Central Avenue","W Chestnut Street","W Church Street","W Division Street","W Elm Street","W Franklin Street","W Front Street","W Grand Avenue","W High Street","W Jackson Street","W Jefferson Street","W Lake Street","W Main","W Main Street","W Maple Street","W Market Street","W Monroe Street","W North Street","W Oak Street","W Park Street","W Pine Street","W River Road","W South Street","W State Street","W Union Street","W Walnut Street","W Washington Avenue","W Washington Street","Walnut Close","Walnut Street","Warren Close","Warren Road","Washington Avenue","Washington Boulevard","Washington Road","Washington Street","Water Lane","Water Street","Waterloo Road","Waterside","Watery Lane","Waverley Road","Well Lane","Wellington Road","Wellington Street","West Avenue","West End","West Lane","West Road","West Street","West View","Western Avenue","Western Road","Westfield Road","Westgate","William Street","Willow Close","Willow Drive","Willow Grove","Willow Road","Willow Street","Windermere Road","Windmill Close","Windmill Lane","Windsor Avenue","Windsor Close","Windsor Drive","Wood Lane","Wood Street","Woodland Close","Woodland Road","Woodlands","Woodlands Avenue","Woodlands Close","Woodlands Road","Woodside","Woodside Road","Wren Close","Yew Tree Close","York Road","York Street"],$e=["{{person.first_name}} {{location.street_suffix}}","{{person.last_name}} {{location.street_suffix}}","{{location.street_name}}"],Ve=["Alley","Avenue","Branch","Bridge","Brook","Brooks","Burg","Burgs","Bypass","Camp","Canyon","Cape","Causeway","Center","Centers","Circle","Circles","Cliff","Cliffs","Club","Common","Corner","Corners","Course","Court","Courts","Cove","Coves","Creek","Crescent","Crest","Crossing","Crossroad","Curve","Dale","Dam","Divide","Drive","Drives","Estate","Estates","Expressway","Extension","Extensions","Fall","Falls","Ferry","Field","Fields","Flat","Flats","Ford","Fords","Forest","Forge","Forges","Fork","Forks","Fort","Freeway","Garden","Gardens","Gateway","Glen","Glens","Green","Greens","Grove","Groves","Harbor","Harbors","Haven","Heights","Highway","Hill","Hills","Hollow","Inlet","Island","Islands","Isle","Junction","Junctions","Key","Keys","Knoll","Knolls","Lake","Lakes","Land","Landing","Lane","Light","Lights","Loaf","Lock","Locks","Lodge","Loop","Mall","Manor","Manors","Meadow","Meadows","Mews","Mill","Mills","Mission","Motorway","Mount","Mountain","Mountains","Neck","Orchard","Oval","Overpass","Park","Parks","Parkway","Parkways","Pass","Passage","Path","Pike","Pine","Pines","Place","Plain","Plains","Plaza","Point","Points","Port","Ports","Prairie","Radial","Ramp","Ranch","Rapid","Rapids","Rest","Ridge","Ridges","River","Road","Roads","Route","Row","Rue","Run","Shoal","Shoals","Shore","Shores","Skyway","Spring","Springs","Spur","Spurs","Square","Squares","Station","Stravenue","Stream","Street","Streets","Summit","Terrace","Throughway","Trace","Track","Trafficway","Trail","Tunnel","Turnpike","Underpass","Union","Unions","Valley","Valleys","Via","Viaduct","View","Views","Village","Villages","Ville","Vista","Walk","Walks","Wall","Way","Ways","Well","Wells"],Ue={building_number:Le,city_name:Pe,city_pattern:Ee,city_prefix:De,city_suffix:Ne,country:He,county:Ge,default_country:We,direction:Fe,direction_abbr:ze,postcode:Ie,secondary_address:Oe,state:_e,state_abbr:Ke,street_address:Je,street_name:je,street_pattern:$e,street_suffix:Ve},Ye=Ue,qe=["a","ab","abbas","abduco","abeo","abscido","absconditus","absens","absorbeo","absque","abstergo","absum","abundans","abutor","accedo","accendo","acceptus","accommodo","accusamus","accusantium","accusator","acer","acerbitas","acervus","acidus","acies","acquiro","acsi","ad","adamo","adaugeo","addo","adduco","ademptio","adeo","adeptio","adfectus","adfero","adficio","adflicto","adhaero","adhuc","adicio","adimpleo","adinventitias","adipisci","adipiscor","adiuvo","administratio","admiratio","admitto","admoneo","admoveo","adnuo","adopto","adsidue","adstringo","adsuesco","adsum","adulatio","adulescens","aduro","advenio","adversus","advoco","aedificium","aeger","aegre","aegrotatio","aegrus","aeneus","aequitas","aequus","aer","aestas","aestivus","aestus","aetas","aeternus","ager","aggero","aggredior","agnitio","agnosco","ago","ait","aiunt","alias","alienus","alii","alioqui","aliqua","aliquam","aliquid","alius","allatus","alo","alter","altus","alveus","amaritudo","ambitus","ambulo","amet","amicitia","amiculum","amissio","amita","amitto","amo","amor","amoveo","amplexus","amplitudo","amplus","ancilla","angelus","angulus","angustus","animadverto","animi","animus","annus","anser","ante","antea","antepono","antiquus","aperiam","aperio","aperte","apostolus","apparatus","appello","appono","appositus","approbo","apto","aptus","apud","aqua","ara","aranea","arbitro","arbor","arbustum","arca","arceo","arcesso","architecto","arcus","argentum","argumentum","arguo","arma","armarium","aro","ars","articulus","artificiose","arto","arx","ascisco","ascit","asper","asperiores","aspernatur","aspicio","asporto","assentator","assumenda","astrum","at","atavus","ater","atque","atqui","atrocitas","atrox","attero","attollo","attonbitus","auctor","auctus","audacia","audax","audentia","audeo","audio","auditor","aufero","aureus","aurum","aut","autem","autus","auxilium","avaritia","avarus","aveho","averto","baiulus","balbus","barba","bardus","basium","beatae","beatus","bellicus","bellum","bene","beneficium","benevolentia","benigne","bestia","bibo","bis","blandior","blanditiis","bonus","bos","brevis","cado","caecus","caelestis","caelum","calamitas","calcar","calco","calculus","callide","campana","candidus","canis","canonicus","canto","capillus","capio","capitulus","capto","caput","carbo","carcer","careo","caries","cariosus","caritas","carmen","carpo","carus","casso","caste","casus","catena","caterva","cattus","cauda","causa","caute","caveo","cavus","cedo","celebrer","celer","celo","cena","cenaculum","ceno","censura","centum","cerno","cernuus","certe","certus","cervus","cetera","charisma","chirographum","cibo","cibus","cicuta","cilicium","cimentarius","ciminatio","cinis","circumvenio","cito","civis","civitas","clam","clamo","claro","clarus","claudeo","claustrum","clementia","clibanus","coadunatio","coaegresco","coepi","coerceo","cogito","cognatus","cognomen","cogo","cohaero","cohibeo","cohors","colligo","collum","colo","color","coma","combibo","comburo","comedo","comes","cometes","comis","comitatus","commemoro","comminor","commodi","commodo","communis","comparo","compello","complectus","compono","comprehendo","comptus","conatus","concedo","concido","conculco","condico","conduco","confero","confido","conforto","confugo","congregatio","conicio","coniecto","conitor","coniuratio","conor","conqueror","conscendo","consectetur","consequatur","consequuntur","conservo","considero","conspergo","constans","consuasor","contabesco","contego","contigo","contra","conturbo","conventus","convoco","copia","copiose","cornu","corona","corporis","corpus","correptius","corrigo","corroboro","corrumpo","corrupti","coruscus","cotidie","crapula","cras","crastinus","creator","creber","crebro","credo","creo","creptio","crepusculum","cresco","creta","cribro","crinis","cruciamentum","crudelis","cruentus","crur","crustulum","crux","cubicularis","cubitum","cubo","cui","cuius","culpa","culpo","cultellus","cultura","cum","cumque","cunabula","cunae","cunctatio","cupiditas","cupiditate","cupio","cuppedia","cupressus","cur","cura","curatio","curia","curiositas","curis","curo","curriculum","currus","cursim","curso","cursus","curto","curtus","curvo","custodia","damnatio","damno","dapifer","debeo","debilito","debitis","decens","decerno","decet","decimus","decipio","decor","decretum","decumbo","dedecor","dedico","deduco","defaeco","defendo","defero","defessus","defetiscor","deficio","defleo","defluo","defungo","degenero","degero","degusto","deinde","delectatio","delectus","delego","deleniti","deleo","delibero","delicate","delinquo","deludo","demens","demergo","demitto","demo","demonstro","demoror","demulceo","demum","denego","denique","dens","denuncio","denuo","deorsum","depereo","depono","depopulo","deporto","depraedor","deprecator","deprimo","depromo","depulso","deputo","derelinquo","derideo","deripio","deserunt","desidero","desino","desipio","desolo","desparatus","despecto","dicta","dignissimos","distinctio","dolor","dolore","dolorem","doloremque","dolores","doloribus","dolorum","ducimus","ea","eaque","earum","eius","eligendi","enim","eos","error","esse","est","et","eum","eveniet","ex","excepturi","exercitationem","expedita","explicabo","facere","facilis","fuga","fugiat","fugit","harum","hic","id","illo","illum","impedit","in","incidunt","infit","inflammatio","inventore","ipsa","ipsam","ipsum","iste","itaque","iure","iusto","labore","laboriosam","laborum","laudantium","libero","magnam","magni","maiores","maxime","minima","minus","modi","molestiae","molestias","mollitia","nam","natus","necessitatibus","nemo","neque","nesciunt","nihil","nisi","nobis","non","nostrum","nulla","numquam","occaecati","ocer","odio","odit","officia","officiis","omnis","optio","paens","pariatur","patior","patria","patrocinor","patruus","pauci","paulatim","pauper","pax","peccatus","pecco","pecto","pectus","pecus","peior","pel","perferendis","perspiciatis","placeat","porro","possimus","praesentium","provident","quae","quaerat","quam","quas","quasi","qui","quia","quibusdam","quidem","quis","quisquam","quo","quod","quos","ratione","recusandae","reiciendis","rem","repellat","repellendus","reprehenderit","repudiandae","rerum","saepe","sapiente","sed","sequi","similique","sint","sit","socius","sodalitas","sol","soleo","solio","solitudo","solium","sollers","sollicito","solum","solus","soluta","solutio","solvo","somniculosus","somnus","sonitus","sono","sophismata","sopor","sordeo","sortitus","spargo","speciosus","spectaculum","speculum","sperno","spero","spes","spiculum","spiritus","spoliatio","sponte","stabilis","statim","statua","stella","stillicidium","stipes","stips","sto","strenuus","strues","studio","stultus","suadeo","suasoria","sub","subito","subiungo","sublime","subnecto","subseco","substantia","subvenio","succedo","succurro","sufficio","suffoco","suffragium","suggero","sui","sulum","sum","summa","summisse","summopere","sumo","sumptus","sunt","supellex","super","suppellex","supplanto","suppono","supra","surculus","surgo","sursum","suscipio","suscipit","suspendo","sustineo","suus","synagoga","tabella","tabernus","tabesco","tabgo","tabula","taceo","tactus","taedium","talio","talis","talus","tam","tamdiu","tamen","tametsi","tamisium","tamquam","tandem","tantillus","tantum","tardus","tego","temeritas","temperantia","templum","tempora","tempore","temporibus","temptatio","tempus","tenax","tendo","teneo","tener","tenetur","tenuis","tenus","tepesco","tepidus","ter","terebro","teres","terga","tergeo","tergiversatio","tergo","tergum","termes","terminatio","tero","terra","terreo","territo","terror","tersus","tertius","testimonium","texo","textilis","textor","textus","thalassinus","theatrum","theca","thema","theologus","thermae","thesaurus","thesis","thorax","thymbra","thymum","tibi","timidus","timor","titulus","tolero","tollo","tondeo","tonsor","torqueo","torrens","tot","totam","totidem","toties","totus","tracto","trado","traho","trans","tredecim","tremo","trepide","tres","tribuo","tricesimus","triduana","tripudio","tristis","triumphus","trucido","truculenter","tubineus","tui","tum","tumultus","tunc","turba","turbo","turpis","tutamen","tutis","tyrannus","uberrime","ubi","ulciscor","ullam","ullus","ulterius","ultio","ultra","umbra","umerus","umquam","una","unde","undique","universe","unus","urbanus","urbs","uredo","usitas","usque","ustilo","ustulo","usus","ut","uter","uterque","utilis","utique","utor","utpote","utrimque","utroque","utrum","uxor","vaco","vacuus","vado","vae","valde","valens","valeo","valetudo","validus","vallum","vapulus","varietas","varius","vehemens","vel","velit","velociter","velum","velut","venia","veniam","venio","ventito","ventosus","ventus","venustas","ver","verbera","verbum","vere","verecundia","vereor","vergo","veritas","veritatis","vero","versus","verto","verumtamen","verus","vesco","vesica","vesper","vespillo","vester","vestigium","vestrum","vetus","via","vicinus","vicissitudo","victoria","victus","videlicet","video","viduo","vigilo","vigor","vilicus","vilis","vilitas","villa","vinco","vinculum","vindico","vinitor","vinum","vir","virga","virgo","viridis","viriliter","virtus","vis","viscus","vita","vitae","vitiosus","vitium","vito","vivo","vix","vobis","vociferor","voco","volaticus","volo","volubilis","voluntarius","volup","voluptas","voluptate","voluptatem","voluptates","voluptatibus","voluptatum","volutabrum","volva","vomer","vomica","vomito","vorago","vorax","voro","vos","votum","voveo","vox","vulariter","vulgaris","vulgivagus","vulgo","vulgus","vulnero","vulnus","vulpes","vulticulus","xiphias"],Ze={words:qe},Xe=Ze,Qe={title:"English",code:"en",language:"en",endonym:"English",dir:"ltr",script:"Latn"},ea=Qe,aa=["Rock","Metal","Pop","Electronic","Folk","World","Country","Jazz","Funk","Soul","Hip Hop","Classical","Latin","Reggae","Stage And Screen","Blues","Non Music","Rap"],ra=["White Christmas","Hey Jude","Every Breath You Take","Mack the Knife","Rock Around the Clock","I Want to Hold Your Hand","(I Can't Get No) Satisfaction","The Twist","(Everything I Do) I Do it For You","Bridge Over Troubled Water","When Doves Cry","Call Me","Bette Davis Eyes","I Will Always Love You","Over the Rainbow","American Pie","Flashdance. What a Feeling","The Way We Were","I Heard it Through the Grapevine","You've Lost That Lovin' Feelin'","Nothing Compares 2 U","Endless Love","Yeah!","Let's Get it On","That's What Friends Are For","You Light Up My Life","(Sittin' On) the Dock of the Bay","Joy to the World","Heartbreak Hotel","Theme From 'A Summer Place'","Aquarius/Let The Sunshine In","I Will Survive","It's Too Late","Respect","Sugar Sugar","Stayin' Alive","Maggie May","My Heart Will Go On","Eye of the Tiger","End of the Road","Another One Bites the Dust","Billie Jean","Let's Stay Together","Battle of New Orleans","Oh","Hound Dog","I Love Rock 'n' Roll","Smooth","Good Vibrations","Physical","Light My Fire","Low","Hey Ya!","Let it Be","Don't Be Cruel","Hotel California","We Belong Together","Le Freak","Raindrops Keep Falling On My Head","How High the Moon","My Girl","I Can't Stop Loving You","Killing Me Softly With His Song","Mona Lisa","In the Mood","She Loves You","The Letter","Mister Sandman","Careless Whisper","What's Love Got to Do With It?","I'm a Believer","Wooly Bully","Theme From 'Shaft'","Hot Stuff","Centerfold","Honky Tonk Woman","I'll Be There","Gangsta's Paradise","Yesterday","My Sharona","Tennessee Waltz","Reach Out (I'll Be There)","California Dreamin'","Jailhouse Rock","Irreplaceable","Dancing in the Street","Rolling In The Deep","Tie a Yellow Ribbon 'round the Old Oak Tree","Stand By Me","Sentimental Journey","The First Time Ever I Saw Your Face","Louie Louie","Another Brick in the Wall (part 2)","(Just Like) Starting Over","Night Fever","To Sir","You're So Vain","Be My Baby","Celebration","(They Long to Be) Close to You","Begin the Beguine","I Still Haven't Found What I'm Looking For","I Want You Back","Arthur's Theme (Best That You Can Do)","Boulevard of Broken Dreams","With Or Without You","Tonight's the Night (Gonna Be Alright)","Are You Lonesome Tonight?","Upside Down","Dancing Queen","Sweet Child O' Mine","Where Did Our Love Go","Unchained Melody","Rudolph","Take My Breath Away","I'll Make Love to You","Love Will Keep Us Together","When a Man Loves a Woman","Walk Like an Egyptian","Crazy in Love","Strangers in the Night","You Belong to Me","In Da Club","Say You","We Are the World","Johnny B Goode","Love Theme From 'A Star is Born' (Evergreen)","Shadow Dancing","Superstition","Beat It","Night & Day","Waterfalls","House of the Rising Sun","Paper Doll","Downtown","I Can't Help Myself (Sugar Pie","Kiss From a Rose","Believe","Ballad of the Green Berets","Proud Mary","Too Young","Umbrella","Swanee","Need You Tonight","Like a Rolling Stone","Lady","One Sweet Day","Lean On Me","Tik-Toc","Monday Monday","What'd I Say","How You Remind Me","Silly Love Songs","My Guy","Macarena","Goodnight","Just My Imagination (Running Away With Me)","The Sounds of Silence","Imagine","Me & Bobby McGee","Near You","What's Going On?","Suspicious Minds","Ode To Billie Joe","Wind Beneath My Wings","The Boy is Mine","Mr Tambourine Man","Faith","Green Onions","Mrs Robinson","How Deep is Your Love?","Hey There","Heart of Glass","Pennies From Heaven","Like a Virgin","Midnight Train to Georgia","Help!","Tossing & Turning","The Sign","Born to Be Wild","Layla","I Just Wanna Be Your Everything","War","96 Tears","I Get Around","Because You Loved Me","Summer in the City","Get Back","Secret Love","9 to 5","(Ghost) Riders in the Sky","The Loco-Motion","Play That Funky Music","Bohemian Rhapsody","Little Things Mean a Lot","Cry","All Shook Up","Up Where We Belong","Sledgehammer","Fire & Rain","Stop! in the Name of Love","Sweet Home Alabama","Another Day in Paradise","Bleeding Love","Lady Marmalade (Voulez-Vous Coucher Aver Moi Ce Soir?)","Whispering","Vogue","Under the Bridge","Sixteen Tons","Sugar Shack","Baby Love","What a Fool Believes","Lose Yourself","Hello Dolly","Brown Eyed Girl","Without You","Build Me Up Buttercup","We Found Love","Tears in Heaven","Family Affair","All I Wanna Do","Soul Man","Tequila","Rock With You","Livin' La Vida Loca","Best of My Love","Runaway","Alone Again (Naturally)","Can't Help Falling in Love","My Sweet Lord","Runaround Sue","Swinging On a Star","Gold Digger","Happy Together","Losing My Religion","Heart of Gold","Stardust","Will You Love Me Tomorrow","You Are the Sunshine of My Life","You Were Meant for Me","Take On Me","Hollaback Girl","God Bless America","I Swear","Sunshine of Your Love","Firework","Groovin'","Smells Like Teen Spirit","Big Girls Don't Cry","Jack & Diane","Addicted to Love","The Last Dance","Georgia On My Mind","Money For Nothing","Jump","Vaya Con Dios (may God Be With You)","You'll Never Know","That'll Be the Day","Girls Just Wanna Have Fun","Wheel of Fortune","When You Wish Upon a Star","Don't Fence Me In","Turn! Turn! Turn! (To Everything There is a Season)","Volare","Sweet Dreams (Are Made of This)","Whole Lotta Love","You've Got a Friend","Penny Lane","People Got to Be Free","Nature Boy","Sexyback","Crying","Single Ladies (Put A Ring On It)","Bad Girls","Too Close","I Got You Babe","We've Only Just Begun","Sh-Boom (Life Could Be a Dream)","Shining Star","Kansas City","Like a Prayer","Cheek to Cheek","Papa Was a Rolling Stone","Promiscuous","Love Shack","Funkytown","Crazy","Philadelphia Freedom","Temperature","Somebody That I Used to Know","All I Have to Do is Dream","Jessie's Girl","Rhinestone Cowboy","Blue Suede Shoes","Ebony & Ivory","I'll Never Smile Again","Keep On Loving You","Since U Been Gone","The Way You Look Tonight","Crazy Little Thing Called Love","The Great Pretender","Brown Sugar","Que sera sera (Whatever will be will be)","No One","Bad Day","Boom Boom Pow","Party Rock Anthem","Because of You","Chattanooga Choo Choo","A Whiter Shade of Pale","Love Me Tender","Higher Love","Footloose","Blurred Lines","I Just Called to Say I Love You","Come Together","It's Now Or Never","Under the Boardwalk","Don't You Want Me","You Can't Hurry Love","Fame","Fallin'","Poker Face","Bad Romance","Ruby Tuesday","All Night Long (All Night)","Baby Got Back","Whole Lotta Shakin' Goin' On","Frenesi","December 1963 (Oh What a Night)","Bad Moon Rising","Abracadabra","I Gotta Feeling","The Song From Moulin Rouge (Where Is Your Heart)","Waiting For a Girl Like You","Everybody Loves Somebody","I Can't Go For That (No Can Do)","Buttons & Bows","It's All in the Game","Love Train","Dance to the Music","Candle in the Wind '97","Honey","Kiss","I'll Take You There","Paint it Black","Band of Gold","Just the Way You Are","Spirit in the Sky","Vision of Love","Hips don't lie","Till The End of Time","Duke of Earl","YMCA","Oh My Papa (O Mein Papa)","Pistol Packin' Mama","Gonna Make You Sweat (Everybody Dance Now)","Dilemma","I Need You Now","Wanted","Jumpin' Jack Flash","Against All Odds (Take a Look At Me Now)","Tom Dooley","Goodbye Yellow Brick Road","Rhapsody in Blue","Bennie & the Jets","Call Me Maybe","You Really Got Me","God Bless the Child","I'm Sorry","Bad","I Can't Get Next to You","The Power of Love","Dreamlover","Only The Lonely (Know The Way I Feel)","We Are Family","At Last","Brand New Key","I've Heard That Song Before","Stay (I Missed You)","Do Ya Think I'm Sexy?","Tutti Frutti","This Ole House","Please Mr Postman","Good Times","Something","(I've Had) the Time of My Life","I Don't Want to Miss a Thing","Down Hearted Blues","Rag Doll","Blueberry Hill","Ain't No Sunshine","Wild Thing","Blaze of Glory","Ray of Light","The Hustle","Grenade","Cathy's Clown","Minnie the Moocher","Love Is Blue (L'Amour Est Bleu)","Iris","The Boys of Summer","The Tide is High","She Drives Me Crazy","Save the Best For Last","These Boots Are Made For Walking","I Feel Love","A Woman in Love","We Can Work it Out","The Reason","Locked Out Of Heaven","Do That to Me One More Time","That's the Way Love Goes","A Hard Day's Night","I Believe I Can Fly","Karma Chameleon","One O'Clock Jump","Mule Train","Car Wash","Rapture","Creep","Streets of Philadelphia","West End Girls","Leader of the Pack","T For Texas (Blue Yodel No 1)","Mama Told Me Not to Come","Just Dance","Mercy Mercy Me (The Ecology)","Livin' On a Prayer","Good Lovin'","50 Ways to Leave Your Lover","Stronger","I Can See Clearly Now","We Are the Champions","(I've Got a Gal In) Kalamazoo","No Scrubs","How Do You Mend a Broken Heart","I Got You (I Feel Good)","Don't Let the Stars Get in Your Eyes","The Girl From Ipanema","(Sexual) Healing","Tears of a Clown","We Will Rock You","Hold On","Bye Bye Love","Chapel of Love","White Rabbit","Rock the Boat","The Gypsy","Take The 'A' Train","Crimson & Clover","Crocodile Rock","Make Love to Me","Nothing's Gonna Stop Us Now","Say Say Say","The Christmas Song (Chestnuts Roasting On An Open Fire)","Un-Break My Heart","Cherish","I'll Be Missing You","Drops of Jupiter (Tell Me)","There goes my baby","You Send Me","If (They Made Me a King)","The Prisoner's Song","ABC","Do Wah Diddy Diddy","He's So Fine","A Boy Named Sue","Roll Over Beethoven","Sweet Georgia Brown","Earth Angel","Rehab","(You Keep Me) Hangin' On","This Diamond Ring","Be My Love","Rush Rush","You're Beautiful","Roll With It","Moonlight Serenade","Unbelievable","Peg o' My Heart","This Land is Your Land","Stranger On the Shore","Rum & Coca-Cola","Hit the Road","Without Me","Crazy For You","I Want to Know What Love Is","Bye Bye","Down Under","At the Hop","One Bad Apple","Kiss & Say Goodbye","For What It's Worth (Stop","The Long & Winding Road","Baby One More Time","Stairway to Heaven","How Do I Live?","Hello","Truly Madly Deeply","Great Balls of Fire","King of the Road","I Wanna Dance With Somebody (Who Loves Me)","Reunited","Help Me","Rags to Riches","(It's No) Sin","Say My Name","Nobody Does it Better","Paperback Writer","Don't Worry Be Happy","I Fall to Pieces","Body & Soul","You're Still the One","Stormy Weather (Keeps Rainin' All the Time)","Horse With No Name","American Woman","Chattanoogie Shoe-Shine Boy","Pick Up the Pieces","Everybody Wants to Rule the World","Blue Tango","Hurt So Good","Apologize","Let's Dance","(You're My) Soul & Inspiration","I Only Have Eyes For You","Wichita Lineman","Hanging by a Moment","Spinning Wheel","Look Away","Ironic","Don't Stop 'Til You Get Enough","Empire State Of Mind","Do You Love Me?","Jive Talkin'","You're the One That I Want","Sweet Soul Music","Hey There Delilah","A Whole New World (Aladdin's Theme)","Somethin' Stupid","Knock Three Times","Mickey","The Wanderer","Dancing in the Dark","It's Still Rock 'n' Roll to Me","Boogie Oogie Oogie","Can You Feel the Love Tonight","Harper Valley PTA","Seasons in the Sun","Come On-a My House","Viva La Vida","Walk On By","Drop it Like It's Hot","Private Eyes","Maniac","All My Lovin' (You're Never Gonna Get It)","Take a Bow","Ring of Fire","Save the Last Dance For Me","Make it With You","Don't Speak","I Shot the Sheriff","Say It Right","Sing","Twist & Shout","Walk This Way","A-Tisket A-Tasket","Let Me Love You","I Can Dream","Toxic","The Joker","Hero","In the Year 2525 (Exordium & Terminus)","Your Song","Oh Happy Day","Grease","Love In This Club","Angie","How Much is That Doggy in the Window?","Daydream Believer","Whip It","Boogie Woogie Bugle Boy","Down","Hanky Panky","Total Eclipse of the Heart","Cat's in the Cradle","Strange Fruit","Breathe","On My Own","Dizzy","Ticket to Ride","We Got The Beat","On the Atchison","Always On My Mind","Unforgettable","In the End","Music","Can't Buy Me Love","Chain of Fools","Won't Get Fooled Again","Happy Days Are Here Again","Third Man Theme","Your Cheatin' Heart","Thriller","Venus","Time After Time","That Lucky Old Sun (Just Rolls Around Heaven All Day)","E.T.","Three Coins in the Fountain","Touch Me","You Ain't Seen Nothin' Yet","Gives You Hell","Knock On Wood","One of These Nights","Again","Doo Wop (That Thing)","Whoomp! (There it Is)","Magic","I'm Walking Behind You","We Didn't Start the Fire","Lola","Ghostbusters","Winchester Cathedral","Greatest Love of All","My Love","Wannabe","Miss You","I Feel Fine","Baby Baby","TSOP (The Sound of Philadelphia)","Loving You","This Guy's in Love With You","Till I Waltz Again With You","Why Do Fools Fall in Love?","Nights in White Satin","That's the Way (I Like It)","My Prayer","(Put Another Nickel In) Music! Music! Music!","Colors of the Wind","Morning Train (Nine to Five)","I Went to Your Wedding","Kiss Me","Gypsies","Cracklin' Rosie","Maybellene","Born in the USA","Here Without You","Mony Mony","Mmmbop","You Always Hurt the One You Love","Eight Days a Week","What Goes Around Comes Around","Kung Fu Fighting","Fantasy","Sir Duke","Ain't Misbehavin'","Need You Now","Last Train to Clarksville","Yakety Yak","I'll be seeing you","Hard to Say I'm Sorry","It's My Party","Love to Love You Baby","Miss You Much","Born to Run","Instant Karma","The Rose","Purple Rain","One","Groove is in the Heart","Gimme Some Lovin'","Beautiful Day","Escape (The Pina Colada Song)","Use Somebody","Fortunate Son","Afternoon Delight","Love's Theme","Sailing","Cherry Pink & Apple Blossom White","Georgy Girl","How to Save a Life","I Walk the Line","All You Need is Love","U Can't Touch This","All Out of Love","Where is the Love?","Revolution","The Love You Save","Black Or White","This Used to Be My Playground","Living For the City","School's Out","Disturbia","Riders On the Storm","Some Enchanted Evening","Weak","Maneater","More Than Words","Time of the Season","Mrs Brown You've Got a Lovely Daughter","If You Leave Me Now","Can't Get Enough of Your Love","Na Na Hey Hey (Kiss Him Goodbye)","Mr Brightside","Black Velvet","I'm Yours","My Blue Heaven","It Had to Be You","Tha Crossroads","Ac-cent-tchu-ate the Positive","Everyday People","We Are Young","Take Me Home","Smoke! Smoke! Smoke! (That Cigarette)","In the Summertime","The Tracks of My Tears","Fly Robin Fly","Love is a Many Splendoured Thing","Another Night","Long Tall Sally","You Sexy Thing","The Morning After","Get Off of My Cloud","Roses Are Red","Thank You (Falettinme be Mice Elf Again)","Slow Poke","You Belong With Me","Ain't No Mountain High Enough","Auf Wiederseh'n Sweetheart","Beauty & the Beast","St Louis Blues","Peggy Sue","U Got it Bad","Sweet Caroline (Good Times Never Seemed So Good)","Wedding Bell Blues","Freebird","Wipe Out","California Girls","Being With You","Makin' Whoopee","Shop Around","Smoke On the Water","Hungry Heart","That's Amore","My Life","Brandy (You're A Fine Girl)","Walk Don't Run","Surfin' USA","Ball of Confusion (That's What the World is Today)","Sunshine Superman","Frankenstein","Kiss You All Over","Wishing Well","Piano Man","Ben","In the Ghetto","Hang On Sloopy","Singing The Blues","Cry Like a Baby","I Honestly Love You","Brother","Lookin' Out My Back Door","Candy Man","Burn","Stagger Lee","Moonlight Cocktail","Coming Up","Pop Muzik","As Time Goes By","My Eyes Adored You","Strawberry Fields Forever","Some of These Days","I Think I Love You","Judy in Disguise (With Glasses)","All Along the Watchtower","A Thousand Miles","Fast Car","Red Red Wine","Live & Let Die","Come On Eileen","Right Back Where We Started From","Brother Louie","Ol' Man River","Band On the Run","Rich Girl","Green River","Got to Give it Up","Behind Closed Doors","Don't Go Breaking My Heart","I'm Looking Over a Four Leaf Clover","Mr Big Stuff","Tiger Rag","Kryptonite","Hey Paula","Go Your Own Way","Big Bad John","Wake Me Up Before You Go Go","Tangerine","Wayward Wind","Disco Lady","Spanish Harlem","Wicked Game","Rosanna","Papa Don't Preach","Somebody to Love","Kokomo","Manana (Is Soon Enough For Me)","Puttin' on the Ritz","One More Try","I'll Walk Alone","Shout","Woman","Ballerina","We Built This City","19th Nervous Breakdown","Working My Way Back to You","Superstar","Foolish Games","Get Down Tonight","On Bended Knee","Magic Carpet Ride","Only You (And You Alone)","A String of Pearls","A Tree in the Meadow","So Much in Love","Every Little Thing She Does is Magic","La Bamba","Tighten Up","Three Times a Lady","Airplanes","Don't Leave Me This Way","Rock the Casbah","Feel Good Inc","Love Me Do","Kiss On My List","Give Me Everything","Have You Ever Really Loved a Woman?","Love Letters in the Sand","Ring My Bell","Love Child","I Feel For You","Bye","(Let Me Be Your) Teddy Bear","Soldier Boy","Papa's Got a Brand New Bag","Love Hangover","Spill the Wine","Royals","April Showers","Don't You (Forget About Me)","Travellin' Man","The Thing","You Make Me Feel Brand New","The Glow-Worm","You Don't Bring Me Flowers","Summertime Blues","Straight Up","Sunday","Wake Up Little Susie","She's a Lady","Over There","Little Darlin'","Rag Mop","Shake Down","Up Around the Bend","Harbour Lights","Chances Are","Mood Indigo","Pony Time","After You've Gone","I Wanna Love You","Da Doo Ron Ron (When He Walked Me Home)","If You Don't Know Me By Now","Green Tambourine","My Man","If I Didn't Care","St George & the Dragonette","Why Don't You Believe Me?","How Will I Know","Disco Duck","Lonely Boy","Never Gonna Give You Up","Before The Next Teardrop Falls","Running Scared","Let's Hear it For the Boy","Sleep Walk","Walk On the Wild Side","Memories Are Made of This","Open Arms","Stuck On You","Personality","Feel Like Making Love","Stars & Stripes Forever","Besame Mucho","Let Me Call You Sweetheart","Indian Reservation (The Lament Of The Cherokee Reservation Indian)","Cars","You Make Me Feel Like Dancing","Whatcha Say","Me & Mrs Jones","Bitter Sweet Symphony","Uncle Albert (Admiral Halsey)","More Than a Feeling","My Boyfriend's Back","People","He'll Have to Go","I Can Help","The Streak","Dreams","Hair","Cold","Nothin' on You","The End of the World","Caldonia Boogie (What Makes Your Big Head So Hard)","I Kissed A Girl","Incense & Peppermints","12th Street Rag","West End Blues","The Way You Move","Smoke Gets in Your Eyes","Want Ads","Long Cool Woman in a Black Dress","Hey Baby","(Your Love Keeps Lifting Me) Higher & Higher","He's a Rebel","Alone","Thrift Shop","Don't Let the Sun Go Down On Me","The Sweet Escape","Return to Sender","Here in My Heart","Wabash Cannonball","Ain't That a Shame","Travellin' Band","I'm Your Boogie Man","I Write the Songs","This Love","Lights","Will It Go Round In Circles","Purple Haze","Rock Your Baby","Delicado","Tammy","Check On It","Breaking Up is Hard to Do","1999","Prisoner of Love","Wild Wild West","Walk Like a Man","I Will Follow Him","Glamorous","Yellow Rose of Texas","That Old Black Magic","I'm So Lonesome I Could Cry","Up Up & Away","Baby Come Back","Let it Snow! Let it Snow! Let it Snow!","Pon De Replay","Because I Love You (The Postman Song)","Sleepy Lagoon","Baker Street","Dardanella","You Don't Have to Be a Star (To Be in My Show)","Leaving","Glory of Love","Theme From 'Greatest American Hero' (Believe It Or Not)","Shake You Down","Ole Buttermilk Sky","I Can't Get Started","Freak Me","Hot Child In The City","Man in the Mirror","Queen of Hearts","Let's Groove","Change the World","You make Me Wanna","Someday","Eve of Destruction","One of Us","Honky Tonk","Be Bop a Lula","Two Hearts","Paper Planes"],ta={genre:aa,song_name:ra},na=ta,ia=["activist","artist","author","blogger","business owner","coach","creator","designer","developer","dreamer","educator","engineer","entrepreneur","environmentalist","film lover","filmmaker","foodie","founder","friend","gamer","geek","grad","inventor","leader","model","musician","nerd","parent","patriot","person","philosopher","photographer","public speaker","scientist","singer","streamer","student","teacher","traveler","veteran","writer"],oa=["{{person.bio_part}}","{{person.bio_part}}, {{person.bio_part}}","{{person.bio_part}}, {{person.bio_part}}, {{person.bio_part}}","{{person.bio_part}}, {{person.bio_part}}, {{person.bio_part}} {{internet.emoji}}","{{word.noun}} {{person.bio_supporter}}","{{word.noun}} {{person.bio_supporter}}  {{internet.emoji}}","{{word.noun}} {{person.bio_supporter}}, {{person.bio_part}}","{{word.noun}} {{person.bio_supporter}}, {{person.bio_part}} {{internet.emoji}}"],la=["advocate","devotee","enthusiast","fan","junkie","lover","supporter"],sa=["Mary","Patricia","Linda","Barbara","Elizabeth","Jennifer","Maria","Susan","Margaret","Dorothy","Lisa","Nancy","Karen","Betty","Helen","Sandra","Donna","Carol","Ruth","Sharon","Michelle","Laura","Sarah","Kimberly","Deborah","Jessica","Shirley","Cynthia","Angela","Melissa","Brenda","Amy","Anna","Rebecca","Virginia","Kathleen","Pamela","Martha","Debra","Amanda","Stephanie","Carolyn","Christine","Marie","Janet","Catherine","Frances","Ann","Joyce","Diane","Alice","Julie","Heather","Teresa","Doris","Gloria","Evelyn","Jean","Cheryl","Mildred","Katherine","Joan","Ashley","Judith","Rose","Janice","Kelly","Nicole","Judy","Christina","Kathy","Theresa","Beverly","Denise","Tammy","Irene","Jane","Lori","Rachel","Marilyn","Andrea","Kathryn","Louise","Sara","Anne","Jacqueline","Wanda","Bonnie","Julia","Ruby","Lois","Tina","Phyllis","Norma","Paula","Diana","Annie","Lillian","Emily","Robin","Peggy","Crystal","Gladys","Rita","Dawn","Connie","Florence","Tracy","Edna","Tiffany","Carmen","Rosa","Cindy","Grace","Wendy","Victoria","Edith","Kim","Sherry","Sylvia","Josephine","Thelma","Shannon","Sheila","Ethel","Ellen","Elaine","Marjorie","Carrie","Charlotte","Monica","Esther","Pauline","Emma","Juanita","Anita","Rhonda","Hazel","Amber","Eva","Debbie","April","Leslie","Clara","Lucille","Jamie","Joanne","Eleanor","Valerie","Danielle","Megan","Alicia","Suzanne","Michele","Gail","Bertha","Darlene","Veronica","Jill","Erin","Geraldine","Lauren","Cathy","Joann","Lorraine","Lynn","Sally","Regina","Erica","Beatrice","Dolores","Bernice","Audrey","Yvonne","Annette","June","Samantha","Marion","Dana","Stacy","Ana","Renee","Ida","Vivian","Roberta","Holly","Brittany","Melanie","Loretta","Yolanda","Jeanette","Laurie","Katie","Kristen","Vanessa","Alma","Sue","Elsie","Beth","Jeanne","Vicki","Carla","Tara","Rosemary","Eileen","Terri","Gertrude","Lucy","Tonya","Ella","Stacey","Wilma","Gina","Kristin","Jessie","Natalie","Agnes","Vera","Willie","Charlene","Bessie","Delores","Melinda","Pearl","Arlene","Maureen","Colleen","Allison","Tamara","Joy","Georgia","Constance","Lillie","Claudia","Jackie","Marcia","Tanya","Nellie","Minnie","Marlene","Heidi","Glenda","Lydia","Viola","Courtney","Marian","Stella","Caroline","Dora","Jo","Vickie","Mattie","Terry","Maxine","Irma","Mabel","Marsha","Myrtle","Lena","Christy","Deanna","Patsy","Hilda","Gwendolyn","Jennie","Nora","Margie","Nina","Cassandra","Leah","Penny","Kay","Priscilla","Naomi","Carole","Brandy","Olga","Billie","Dianne","Tracey","Leona","Jenny","Felicia","Sonia","Miriam","Velma","Becky","Bobbie","Violet","Kristina","Toni","Misty","Mae","Shelly","Daisy","Ramona","Sherri","Erika","Katrina","Claire","Lindsey","Lindsay","Geneva","Guadalupe","Belinda","Margarita","Sheryl","Cora","Faye","Ada","Natasha","Sabrina","Isabel","Marguerite","Hattie","Harriet","Molly","Cecilia","Kristi","Brandi","Blanche","Sandy","Rosie","Joanna","Iris","Eunice","Angie","Inez","Lynda","Madeline","Amelia","Alberta","Genevieve","Monique","Jodi","Janie","Maggie","Kayla","Sonya","Jan","Lee","Kristine","Candace","Fannie","Maryann","Opal","Alison","Yvette","Melody","Luz","Susie","Olivia","Flora","Shelley","Kristy","Mamie","Lula","Lola","Verna","Beulah","Antoinette","Candice","Juana","Jeannette","Pam","Kelli","Hannah","Whitney","Bridget","Karla","Celia","Latoya","Patty","Shelia","Gayle","Della","Vicky","Lynne","Sheri","Marianne","Kara","Jacquelyn","Erma","Blanca","Myra","Leticia","Pat","Krista","Roxanne","Angelica","Johnnie","Robyn","Francis","Adrienne","Rosalie","Alexandra","Brooke","Bethany","Sadie","Bernadette","Traci","Jody","Kendra","Jasmine","Nichole","Rachael","Chelsea","Mable","Ernestine","Muriel","Marcella","Elena","Krystal","Angelina","Nadine","Kari","Estelle","Dianna","Paulette","Lora","Mona","Doreen","Rosemarie","Angel","Desiree","Antonia","Hope","Ginger","Janis","Betsy","Christie","Freda","Mercedes","Meredith","Lynette","Teri","Cristina","Eula","Leigh","Meghan","Sophia","Eloise","Rochelle","Gretchen","Cecelia","Raquel","Henrietta","Alyssa","Jana","Kelley","Gwen","Kerry","Jenna","Tricia","Laverne","Olive","Alexis","Tasha","Silvia","Elvira","Casey","Delia","Sophie","Kate","Patti","Lorena","Kellie","Sonja","Lila","Lana","Darla","May","Mindy","Essie","Mandy","Lorene","Elsa","Josefina","Jeannie","Miranda","Dixie","Lucia","Marta","Faith","Lela","Johanna","Shari","Camille","Tami","Shawna","Elisa","Ebony","Melba","Ora","Nettie","Tabitha","Ollie","Jaime","Winifred","Kristie"],ca=["Abigail","Adele","Alex","Alice","Alisha","Amber","Amelia","Amora","Anaïs","Angelou","Anika","Anise","Annabel","Anne","Aphrodite","Aretha","Arya","Ashton","Aster","Audrey","Avery","Bailee","Bay","Belle","Beth","Billie","Blair","Blaise","Blake","Blanche","Blue","Bree","Brielle","Brienne","Brooke","Caleen","Candice","Caprice","Carelyn","Caylen","Celine","Cerise","Cia","Claire","Claudia","Clementine","Coral","Coraline","Dahlia","Dakota","Dawn","Della","Demi","Denise","Denver","Devine","Devon","Diana","Dylan","Ebony","Eden","Eleanor","Elein","Elizabeth","Ellen","Elodie","Eloise","Ember","Emma","Erin","Eyre","Faith","Farrah","Fawn","Fayre","Fern","France","Francis","Frida","Genisis","Georgia","Grace","Gwen","Harley","Harper","Hazel","Helen","Hippolyta","Holly","Hope","Imani","Iowa","Ireland","Irene","Iris","Isa","Isla","Ivy","Jade","Jane","Jazz","Jean","Jess","Jett","Jo","Joan","Jolie","Jordan","Josie","Journey","Joy","Jules","Julien","Juliet","Juniper","Justice","Kali","Karma","Kat","Kate","Kennedy","Keva","Kylie","Lake","Lane","Lark","Layla","Lee","Leigh","Leona","Lexi","London","Lou","Louise","Love","Luna","Lux","Lynn","Lyric","Maddie","Mae","Marie","Matilda","Maude","Maybel","Meadow","Medusa","Mercy","Michelle","Mirabel","Monroe","Morgan","Nalia","Naomi","Nova","Olive","Paige","Parker","Pax","Pearl","Penelope","Phoenix","Quinn","Rae","Rain","Raven","Ray","Raye","Rebel","Reese","Reeve","Regan","Riley","River","Robin","Rory","Rose","Royal","Ruth","Rylie","Sage","Sam","Saturn","Scout","Serena","Sky","Skylar","Sofia","Sophia","Storm","Sue","Suzanne","Sydney","Taylen","Taylor","Teagan","Tempest","Tenley","Thea","Trinity","Valerie","Venus","Vera","Violet","Willow","Winter","Xena","Zaylee","Zion","Zoe"],ua=["Mrs.","Ms.","Miss","Dr."],da=["Aaliyah","Aaron","Abagail","Abbey","Abbie","Abbigail","Abby","Abdiel","Abdul","Abdullah","Abe","Abel","Abelardo","Abigail","Abigale","Abigayle","Abner","Abraham","Ada","Adah","Adalberto","Adaline","Adam","Adan","Addie","Addison","Adela","Adelbert","Adele","Adelia","Adeline","Adell","Adella","Adelle","Aditya","Adolf","Adolfo","Adolph","Adolphus","Adonis","Adrain","Adrian","Adriana","Adrianna","Adriel","Adrien","Adrienne","Afton","Aglae","Agnes","Agustin","Agustina","Ahmad","Ahmed","Aida","Aidan","Aiden","Aileen","Aimee","Aisha","Aiyana","Akeem","Al","Alaina","Alan","Alana","Alanis","Alanna","Alayna","Alba","Albert","Alberta","Albertha","Alberto","Albin","Albina","Alda","Alden","Alec","Aleen","Alejandra","Alejandrin","Alek","Alena","Alene","Alessandra","Alessandro","Alessia","Aletha","Alex","Alexa","Alexander","Alexandra","Alexandre","Alexandrea","Alexandria","Alexandrine","Alexandro","Alexane","Alexanne","Alexie","Alexis","Alexys","Alexzander","Alf","Alfonso","Alfonzo","Alford","Alfred","Alfreda","Alfredo","Ali","Alia","Alice","Alicia","Alisa","Alisha","Alison","Alivia","Aliya","Aliyah","Aliza","Alize","Allan","Allen","Allene","Allie","Allison","Ally","Alphonso","Alta","Althea","Alva","Alvah","Alvena","Alvera","Alverta","Alvina","Alvis","Alyce","Alycia","Alysa","Alysha","Alyson","Alysson","Amalia","Amanda","Amani","Amara","Amari","Amaya","Amber","Ambrose","Amelia","Amelie","Amely","America","Americo","Amie","Amina","Amir","Amira","Amiya","Amos","Amparo","Amy","Amya","Ana","Anabel","Anabelle","Anahi","Anais","Anastacio","Anastasia","Anderson","Andre","Andreane","Andreanne","Andres","Andrew","Andy","Angel","Angela","Angelica","Angelina","Angeline","Angelita","Angelo","Angie","Angus","Anibal","Anika","Anissa","Anita","Aniya","Aniyah","Anjali","Anna","Annabel","Annabell","Annabelle","Annalise","Annamae","Annamarie","Anne","Annetta","Annette","Annie","Ansel","Ansley","Anthony","Antoinette","Antone","Antonetta","Antonette","Antonia","Antonietta","Antonina","Antonio","Antwan","Antwon","Anya","April","Ara","Araceli","Aracely","Arch","Archibald","Ardella","Arden","Ardith","Arely","Ari","Ariane","Arianna","Aric","Ariel","Arielle","Arjun","Arlene","Arlie","Arlo","Armand","Armando","Armani","Arnaldo","Arne","Arno","Arnold","Arnoldo","Arnulfo","Aron","Art","Arthur","Arturo","Arvel","Arvid","Arvilla","Aryanna","Asa","Asha","Ashlee","Ashleigh","Ashley","Ashly","Ashlynn","Ashton","Ashtyn","Asia","Assunta","Astrid","Athena","Aubree","Aubrey","Audie","Audra","Audreanne","Audrey","August","Augusta","Augustine","Augustus","Aurelia","Aurelie","Aurelio","Aurore","Austen","Austin","Austyn","Autumn","Ava","Avery","Avis","Axel","Ayana","Ayden","Ayla","Aylin","Baby","Bailee","Bailey","Barbara","Barney","Baron","Barrett","Barry","Bart","Bartholome","Barton","Baylee","Beatrice","Beau","Beaulah","Bell","Bella","Belle","Ben","Benedict","Benjamin","Bennett","Bennie","Benny","Benton","Berenice","Bernadette","Bernadine","Bernard","Bernardo","Berneice","Bernhard","Bernice","Bernie","Berniece","Bernita","Berry","Bert","Berta","Bertha","Bertram","Bertrand","Beryl","Bessie","Beth","Bethany","Bethel","Betsy","Bette","Bettie","Betty","Bettye","Beulah","Beverly","Bianka","Bill","Billie","Billy","Birdie","Blair","Blaise","Blake","Blanca","Blanche","Blaze","Bo","Bobbie","Bobby","Bonita","Bonnie","Boris","Boyd","Brad","Braden","Bradford","Bradley","Bradly","Brady","Braeden","Brain","Brandi","Brando","Brandon","Brandt","Brandy","Brandyn","Brannon","Branson","Brant","Braulio","Braxton","Brayan","Breana","Breanna","Breanne","Brenda","Brendan","Brenden","Brendon","Brenna","Brennan","Brennon","Brent","Bret","Brett","Bria","Brian","Briana","Brianne","Brice","Bridget","Bridgette","Bridie","Brielle","Brigitte","Brionna","Brisa","Britney","Brittany","Brock","Broderick","Brody","Brook","Brooke","Brooklyn","Brooks","Brown","Bruce","Bryana","Bryce","Brycen","Bryon","Buck","Bud","Buddy","Buford","Bulah","Burdette","Burley","Burnice","Buster","Cade","Caden","Caesar","Caitlyn","Cale","Caleb","Caleigh","Cali","Calista","Callie","Camden","Cameron","Camila","Camilla","Camille","Camren","Camron","Camryn","Camylle","Candace","Candelario","Candice","Candida","Candido","Cara","Carey","Carissa","Carlee","Carleton","Carley","Carli","Carlie","Carlo","Carlos","Carlotta","Carmel","Carmela","Carmella","Carmelo","Carmen","Carmine","Carol","Carolanne","Carole","Carolina","Caroline","Carolyn","Carolyne","Carrie","Carroll","Carson","Carter","Cary","Casandra","Casey","Casimer","Casimir","Casper","Cassandra","Cassandre","Cassidy","Cassie","Catalina","Caterina","Catharine","Catherine","Cathrine","Cathryn","Cathy","Cayla","Ceasar","Cecelia","Cecil","Cecile","Cecilia","Cedrick","Celestine","Celestino","Celia","Celine","Cesar","Chad","Chadd","Chadrick","Chaim","Chance","Chandler","Chanel","Chanelle","Charity","Charlene","Charles","Charley","Charlie","Charlotte","Chase","Chasity","Chauncey","Chaya","Chaz","Chelsea","Chelsey","Chelsie","Chesley","Chester","Chet","Cheyanne","Cheyenne","Chloe","Chris","Christ","Christa","Christelle","Christian","Christiana","Christina","Christine","Christop","Christophe","Christopher","Christy","Chyna","Ciara","Cicero","Cielo","Cierra","Cindy","Citlalli","Clair","Claire","Clara","Clarabelle","Clare","Clarissa","Clark","Claud","Claude","Claudia","Claudie","Claudine","Clay","Clemens","Clement","Clementina","Clementine","Clemmie","Cleo","Cleora","Cleta","Cletus","Cleve","Cleveland","Clifford","Clifton","Clint","Clinton","Clotilde","Clovis","Cloyd","Clyde","Coby","Cody","Colby","Cole","Coleman","Colin","Colleen","Collin","Colt","Colten","Colton","Columbus","Concepcion","Conner","Connie","Connor","Conor","Conrad","Constance","Constantin","Consuelo","Cooper","Cora","Coralie","Corbin","Cordelia","Cordell","Cordia","Cordie","Corene","Corine","Cornelius","Cornell","Corrine","Cortez","Cortney","Cory","Coty","Courtney","Coy","Craig","Crawford","Creola","Cristal","Cristian","Cristina","Cristobal","Cristopher","Cruz","Crystal","Crystel","Cullen","Curt","Curtis","Cydney","Cynthia","Cyril","Cyrus","Dagmar","Dahlia","Daija","Daisha","Daisy","Dakota","Dale","Dallas","Dallin","Dalton","Damaris","Dameon","Damian","Damien","Damion","Damon","Dan","Dana","Dandre","Dane","D'angelo","Dangelo","Danial","Daniela","Daniella","Danielle","Danika","Dannie","Danny","Dante","Danyka","Daphne","Daphnee","Daphney","Darby","Daren","Darian","Dariana","Darien","Dario","Darion","Darius","Darlene","Daron","Darrel","Darrell","Darren","Darrick","Darrin","Darrion","Darron","Darryl","Darwin","Daryl","Dashawn","Dasia","Dave","David","Davin","Davion","Davon","Davonte","Dawn","Dawson","Dax","Dayana","Dayna","Dayne","Dayton","Dean","Deangelo","Deanna","Deborah","Declan","Dedric","Dedrick","Dee","Deion","Deja","Dejah","Dejon","Dejuan","Delaney","Delbert","Delfina","Delia","Delilah","Dell","Della","Delmer","Delores","Delpha","Delphia","Delphine","Delta","Demarco","Demarcus","Demario","Demetris","Demetrius","Demond","Dena","Denis","Dennis","Deon","Deondre","Deontae","Deonte","Dereck","Derek","Derick","Deron","Derrick","Deshaun","Deshawn","Desiree","Desmond","Dessie","Destany","Destin","Destinee","Destiney","Destini","Destiny","Devan","Devante","Deven","Devin","Devon","Devonte","Devyn","Dewayne","Dewitt","Dexter","Diamond","Diana","Dianna","Diego","Dillan","Dillon","Dimitri","Dina","Dino","Dion","Dixie","Dock","Dolly","Dolores","Domenic","Domenica","Domenick","Domenico","Domingo","Dominic","Dominique","Don","Donald","Donato","Donavon","Donna","Donnell","Donnie","Donny","Dora","Dorcas","Dorian","Doris","Dorothea","Dorothy","Dorris","Dortha","Dorthy","Doug","Douglas","Dovie","Doyle","Drake","Drew","Duane","Dudley","Dulce","Duncan","Durward","Dustin","Dusty","Dwight","Dylan","Earl","Earlene","Earline","Earnest","Earnestine","Easter","Easton","Ebba","Ebony","Ed","Eda","Edd","Eddie","Eden","Edgar","Edgardo","Edison","Edmond","Edmund","Edna","Eduardo","Edward","Edwardo","Edwin","Edwina","Edyth","Edythe","Effie","Efrain","Efren","Eileen","Einar","Eino","Eladio","Elaina","Elbert","Elda","Eldon","Eldora","Eldred","Eldridge","Eleanora","Eleanore","Eleazar","Electa","Elena","Elenor","Elenora","Eleonore","Elfrieda","Eli","Elian","Eliane","Elias","Eliezer","Elijah","Elinor","Elinore","Elisa","Elisabeth","Elise","Eliseo","Elisha","Elissa","Eliza","Elizabeth","Ella","Ellen","Ellie","Elliot","Elliott","Ellis","Ellsworth","Elmer","Elmira","Elmo","Elmore","Elna","Elnora","Elody","Eloisa","Eloise","Elouise","Eloy","Elroy","Elsa","Else","Elsie","Elta","Elton","Elva","Elvera","Elvie","Elvis","Elwin","Elwyn","Elyse","Elyssa","Elza","Emanuel","Emelia","Emelie","Emely","Emerald","Emerson","Emery","Emie","Emil","Emile","Emilia","Emiliano","Emilie","Emilio","Emily","Emma","Emmalee","Emmanuel","Emmanuelle","Emmet","Emmett","Emmie","Emmitt","Emmy","Emory","Ena","Enid","Enoch","Enola","Enos","Enrico","Enrique","Ephraim","Era","Eriberto","Eric","Erica","Erich","Erick","Ericka","Erik","Erika","Erin","Erling","Erna","Ernest","Ernestina","Ernestine","Ernesto","Ernie","Ervin","Erwin","Eryn","Esmeralda","Esperanza","Esta","Esteban","Estefania","Estel","Estell","Estella","Estelle","Estevan","Esther","Estrella","Etha","Ethan","Ethel","Ethelyn","Ethyl","Ettie","Eudora","Eugene","Eugenia","Eula","Eulah","Eulalia","Euna","Eunice","Eusebio","Eva","Evalyn","Evan","Evangeline","Evans","Eve","Eveline","Evelyn","Everardo","Everett","Everette","Evert","Evie","Ewald","Ewell","Ezekiel","Ezequiel","Ezra","Fabian","Fabiola","Fae","Fannie","Fanny","Fatima","Faustino","Fausto","Favian","Fay","Faye","Federico","Felicia","Felicita","Felicity","Felipa","Felipe","Felix","Felton","Fermin","Fern","Fernando","Ferne","Fidel","Filiberto","Filomena","Finn","Fiona","Flavie","Flavio","Fleta","Fletcher","Flo","Florence","Florencio","Florian","Florida","Florine","Flossie","Floy","Floyd","Ford","Forest","Forrest","Foster","Frances","Francesca","Francesco","Francis","Francisca","Francisco","Franco","Frank","Frankie","Franz","Fred","Freda","Freddie","Freddy","Frederic","Frederick","Frederik","Frederique","Fredrick","Fredy","Freeda","Freeman","Freida","Frida","Frieda","Friedrich","Fritz","Furman","Gabe","Gabriel","Gabriella","Gabrielle","Gaetano","Gage","Gail","Gardner","Garett","Garfield","Garland","Garnet","Garnett","Garret","Garrett","Garrick","Garrison","Garry","Garth","Gaston","Gavin","Gayle","Gene","General","Genesis","Genevieve","Gennaro","Genoveva","Geo","Geoffrey","George","Georgette","Georgiana","Georgianna","Geovanni","Geovanny","Geovany","Gerald","Geraldine","Gerard","Gerardo","Gerda","Gerhard","Germaine","German","Gerry","Gerson","Gertrude","Gia","Gianni","Gideon","Gilbert","Gilberto","Gilda","Giles","Gillian","Gina","Gino","Giovani","Giovanna","Giovanni","Giovanny","Gisselle","Giuseppe","Gladyce","Gladys","Glen","Glenda","Glenna","Glennie","Gloria","Godfrey","Golda","Golden","Gonzalo","Gordon","Grace","Gracie","Graciela","Grady","Graham","Grant","Granville","Grayce","Grayson","Green","Greg","Gregg","Gregoria","Gregorio","Gregory","Greta","Gretchen","Greyson","Griffin","Grover","Guadalupe","Gudrun","Guido","Guillermo","Guiseppe","Gunnar","Gunner","Gus","Gussie","Gust","Gustave","Guy","Gwen","Gwendolyn","Hadley","Hailee","Hailey","Hailie","Hal","Haleigh","Haley","Halie","Halle","Hallie","Hank","Hanna","Hannah","Hans","Hardy","Harley","Harmon","Harmony","Harold","Harrison","Harry","Harvey","Haskell","Hassan","Hassie","Hattie","Haven","Hayden","Haylee","Hayley","Haylie","Hazel","Hazle","Heath","Heather","Heaven","Heber","Hector","Heidi","Helen","Helena","Helene","Helga","Hellen","Helmer","Heloise","Henderson","Henri","Henriette","Henry","Herbert","Herman","Hermann","Hermina","Herminia","Herminio","Hershel","Herta","Hertha","Hester","Hettie","Hilario","Hilbert","Hilda","Hildegard","Hillard","Hillary","Hilma","Hilton","Hipolito","Hiram","Hobart","Holden","Hollie","Hollis","Holly","Hope","Horace","Horacio","Hortense","Hosea","Houston","Howard","Howell","Hoyt","Hubert","Hudson","Hugh","Hulda","Humberto","Hunter","Hyman","Ian","Ibrahim","Icie","Ida","Idell","Idella","Ignacio","Ignatius","Ike","Ila","Ilene","Iliana","Ima","Imani","Imelda","Immanuel","Imogene","Ines","Irma","Irving","Irwin","Isaac","Isabel","Isabell","Isabella","Isabelle","Isac","Isadore","Isai","Isaiah","Isaias","Isidro","Ismael","Isobel","Isom","Israel","Issac","Itzel","Iva","Ivah","Ivory","Ivy","Izabella","Izaiah","Jabari","Jace","Jacey","Jacinthe","Jacinto","Jack","Jackeline","Jackie","Jacklyn","Jackson","Jacky","Jaclyn","Jacquelyn","Jacques","Jacynthe","Jada","Jade","Jaden","Jadon","Jadyn","Jaeden","Jaida","Jaiden","Jailyn","Jaime","Jairo","Jakayla","Jake","Jakob","Jaleel","Jalen","Jalon","Jalyn","Jamaal","Jamal","Jamar","Jamarcus","Jamel","Jameson","Jamey","Jamie","Jamil","Jamir","Jamison","Jammie","Jan","Jana","Janae","Jane","Janelle","Janessa","Janet","Janice","Janick","Janie","Janis","Janiya","Jannie","Jany","Jaquan","Jaquelin","Jaqueline","Jared","Jaren","Jarod","Jaron","Jarred","Jarrell","Jarret","Jarrett","Jarrod","Jarvis","Jasen","Jasmin","Jason","Jasper","Jaunita","Javier","Javon","Javonte","Jay","Jayce","Jaycee","Jayda","Jayde","Jayden","Jaydon","Jaylan","Jaylen","Jaylin","Jaylon","Jayme","Jayne","Jayson","Jazlyn","Jazmin","Jazmyn","Jazmyne","Jean","Jeanette","Jeanie","Jeanne","Jed","Jedediah","Jedidiah","Jeff","Jefferey","Jeffery","Jeffrey","Jeffry","Jena","Jenifer","Jennie","Jennifer","Jennings","Jennyfer","Jensen","Jerad","Jerald","Jeramie","Jeramy","Jerel","Jeremie","Jeremy","Jermain","Jermaine","Jermey","Jerod","Jerome","Jeromy","Jerrell","Jerrod","Jerrold","Jerry","Jess","Jesse","Jessica","Jessie","Jessika","Jessy","Jessyca","Jesus","Jett","Jettie","Jevon","Jewel","Jewell","Jillian","Jimmie","Jimmy","Jo","Joan","Joana","Joanie","Joanne","Joannie","Joanny","Joany","Joaquin","Jocelyn","Jodie","Jody","Joe","Joel","Joelle","Joesph","Joey","Johan","Johann","Johanna","Johathan","John","Johnathan","Johnathon","Johnnie","Johnny","Johnpaul","Johnson","Jolie","Jon","Jonas","Jonatan","Jonathan","Jonathon","Jordan","Jordane","Jordi","Jordon","Jordy","Jordyn","Jorge","Jose","Josefa","Josefina","Joseph","Josephine","Josh","Joshua","Joshuah","Josiah","Josiane","Josianne","Josie","Josue","Jovan","Jovani","Jovanny","Jovany","Joy","Joyce","Juana","Juanita","Judah","Judd","Jude","Judge","Judson","Judy","Jules","Julia","Julian","Juliana","Julianne","Julie","Julien","Juliet","Julio","Julius","June","Junior","Junius","Justen","Justice","Justina","Justine","Juston","Justus","Justyn","Juvenal","Juwan","Kacey","Kaci","Kacie","Kade","Kaden","Kadin","Kaela","Kaelyn","Kaia","Kailee","Kailey","Kailyn","Kaitlin","Kaitlyn","Kale","Kaleb","Kaleigh","Kaley","Kali","Kallie","Kameron","Kamille","Kamren","Kamron","Kamryn","Kane","Kara","Kareem","Karelle","Karen","Kari","Kariane","Karianne","Karina","Karine","Karl","Karlee","Karley","Karli","Karlie","Karolann","Karson","Kasandra","Kasey","Kassandra","Katarina","Katelin","Katelyn","Katelynn","Katharina","Katherine","Katheryn","Kathleen","Kathlyn","Kathryn","Kathryne","Katlyn","Katlynn","Katrina","Katrine","Kattie","Kavon","Kay","Kaya","Kaycee","Kayden","Kayla","Kaylah","Kaylee","Kayleigh","Kayley","Kayli","Kaylie","Kaylin","Keagan","Keanu","Keara","Keaton","Keegan","Keeley","Keely","Keenan","Keira","Keith","Kellen","Kelley","Kelli","Kellie","Kelly","Kelsi","Kelsie","Kelton","Kelvin","Ken","Kendall","Kendra","Kendrick","Kenna","Kennedi","Kennedy","Kenneth","Kennith","Kenny","Kenton","Kenya","Kenyatta","Kenyon","Keon","Keshaun","Keshawn","Keven","Kevin","Kevon","Keyon","Keyshawn","Khalid","Khalil","Kian","Kiana","Kianna","Kiara","Kiarra","Kiel","Kiera","Kieran","Kiley","Kim","Kimberly","King","Kip","Kira","Kirk","Kirsten","Kirstin","Kitty","Kobe","Koby","Kody","Kolby","Kole","Korbin","Korey","Kory","Kraig","Kris","Krista","Kristian","Kristin","Kristina","Kristofer","Kristoffer","Kristopher","Kristy","Krystal","Krystel","Krystina","Kurt","Kurtis","Kyla","Kyle","Kylee","Kyleigh","Kyler","Kylie","Kyra","Lacey","Lacy","Ladarius","Lafayette","Laila","Laisha","Lamar","Lambert","Lamont","Lance","Landen","Lane","Laney","Larissa","Laron","Larry","Larue","Laura","Laurel","Lauren","Laurence","Lauretta","Lauriane","Laurianne","Laurie","Laurine","Laury","Lauryn","Lavada","Lavern","Laverna","Laverne","Lavina","Lavinia","Lavon","Lavonne","Lawrence","Lawson","Layla","Layne","Lazaro","Lea","Leann","Leanna","Leanne","Leatha","Leda","Lee","Leif","Leila","Leilani","Lela","Lelah","Leland","Lelia","Lempi","Lemuel","Lenna","Lennie","Lenny","Lenora","Lenore","Leo","Leola","Leon","Leonard","Leonardo","Leone","Leonel","Leonie","Leonor","Leonora","Leopold","Leopoldo","Leora","Lera","Lesley","Leslie","Lesly","Lessie","Lester","Leta","Letha","Letitia","Levi","Lew","Lewis","Lexi","Lexie","Lexus","Lia","Liam","Liana","Libbie","Libby","Lila","Lilian","Liliana","Liliane","Lilla","Lillian","Lilliana","Lillie","Lilly","Lily","Lilyan","Lina","Lincoln","Linda","Lindsay","Lindsey","Linnea","Linnie","Linwood","Lionel","Lisa","Lisandro","Lisette","Litzy","Liza","Lizeth","Lizzie","Llewellyn","Lloyd","Logan","Lois","Lola","Lolita","Loma","Lon","London","Lonie","Lonnie","Lonny","Lonzo","Lora","Loraine","Loren","Lorena","Lorenz","Lorenza","Lorenzo","Lori","Lorine","Lorna","Lottie","Lou","Louie","Louisa","Lourdes","Louvenia","Lowell","Loy","Loyal","Loyce","Lucas","Luciano","Lucie","Lucienne","Lucile","Lucinda","Lucio","Lucious","Lucius","Lucy","Ludie","Ludwig","Lue","Luella","Luigi","Luis","Luisa","Lukas","Lula","Lulu","Luna","Lupe","Lura","Lurline","Luther","Luz","Lyda","Lydia","Lyla","Lynn","Lyric","Lysanne","Mabel","Mabelle","Mable","Mac","Macey","Maci","Macie","Mack","Mackenzie","Macy","Madaline","Madalyn","Maddison","Madeline","Madelyn","Madelynn","Madge","Madie","Madilyn","Madisen","Madison","Madisyn","Madonna","Madyson","Mae","Maegan","Maeve","Mafalda","Magali","Magdalen","Magdalena","Maggie","Magnolia","Magnus","Maia","Maida","Maiya","Major","Makayla","Makenna","Makenzie","Malachi","Malcolm","Malika","Malinda","Mallie","Mallory","Malvina","Mandy","Manley","Manuel","Manuela","Mara","Marc","Marcel","Marcelina","Marcelino","Marcella","Marcelle","Marcellus","Marcelo","Marcia","Marco","Marcos","Marcus","Margaret","Margarete","Margarett","Margaretta","Margarette","Margarita","Marge","Margie","Margot","Margret","Marguerite","Maria","Mariah","Mariam","Marian","Mariana","Mariane","Marianna","Marianne","Mariano","Maribel","Marie","Mariela","Marielle","Marietta","Marilie","Marilou","Marilyne","Marina","Mario","Marion","Marisa","Marisol","Maritza","Marjolaine","Marjorie","Marjory","Mark","Markus","Marlee","Marlen","Marlene","Marley","Marlin","Marlon","Marques","Marquis","Marquise","Marshall","Marta","Martin","Martina","Martine","Marty","Marvin","Mary","Maryam","Maryjane","Maryse","Mason","Mateo","Mathew","Mathias","Mathilde","Matilda","Matilde","Matt","Matteo","Mattie","Maud","Maude","Maudie","Maureen","Maurice","Mauricio","Maurine","Maverick","Mavis","Max","Maxie","Maxime","Maximilian","Maximillia","Maximillian","Maximo","Maximus","Maxine","Maxwell","May","Maya","Maybell","Maybelle","Maye","Maymie","Maynard","Mayra","Mazie","Mckayla","Mckenna","Mckenzie","Meagan","Meaghan","Meda","Megane","Meggie","Meghan","Mekhi","Melany","Melba","Melisa","Melissa","Mellie","Melody","Melvin","Melvina","Melyna","Melyssa","Mercedes","Meredith","Merl","Merle","Merlin","Merritt","Mertie","Mervin","Meta","Mia","Micaela","Micah","Michael","Michaela","Michale","Micheal","Michel","Michele","Michelle","Miguel","Mikayla","Mike","Mikel","Milan","Miles","Milford","Miller","Millie","Milo","Milton","Mina","Minerva","Minnie","Miracle","Mireille","Mireya","Misael","Missouri","Misty","Mitchel","Mitchell","Mittie","Modesta","Modesto","Mohamed","Mohammad","Mohammed","Moises","Mollie","Molly","Mona","Monica","Monique","Monroe","Monserrat","Monserrate","Montana","Monte","Monty","Morgan","Moriah","Morris","Mortimer","Morton","Mose","Moses","Moshe","Mossie","Mozell","Mozelle","Muhammad","Muriel","Murl","Murphy","Murray","Mustafa","Mya","Myah","Mylene","Myles","Myra","Myriam","Myrl","Myrna","Myron","Myrtice","Myrtie","Myrtis","Myrtle","Nadia","Nakia","Name","Nannie","Naomi","Naomie","Napoleon","Narciso","Nash","Nasir","Nat","Natalia","Natalie","Natasha","Nathan","Nathanael","Nathanial","Nathaniel","Nathen","Nayeli","Neal","Ned","Nedra","Neha","Neil","Nelda","Nella","Nelle","Nellie","Nels","Nelson","Neoma","Nestor","Nettie","Neva","Newell","Newton","Nia","Nicholas","Nicholaus","Nichole","Nick","Nicklaus","Nickolas","Nico","Nicola","Nicolas","Nicole","Nicolette","Nigel","Nikita","Nikki","Nikko","Niko","Nikolas","Nils","Nina","Noah","Noble","Noe","Noel","Noelia","Noemi","Noemie","Noemy","Nola","Nolan","Nona","Nora","Norbert","Norberto","Norene","Norma","Norris","Norval","Norwood","Nova","Novella","Nya","Nyah","Nyasia","Obie","Oceane","Ocie","Octavia","Oda","Odell","Odessa","Odie","Ofelia","Okey","Ola","Olaf","Ole","Olen","Oleta","Olga","Olin","Oliver","Ollie","Oma","Omari","Omer","Ona","Onie","Opal","Ophelia","Ora","Oral","Oran","Oren","Orie","Orin","Orion","Orland","Orlando","Orlo","Orpha","Orrin","Orval","Orville","Osbaldo","Osborne","Oscar","Osvaldo","Oswald","Oswaldo","Otha","Otho","Otilia","Otis","Ottilie","Ottis","Otto","Ova","Owen","Ozella","Pablo","Paige","Palma","Pamela","Pansy","Paolo","Paris","Parker","Pascale","Pasquale","Pat","Patience","Patricia","Patrick","Patsy","Pattie","Paul","Paula","Pauline","Paxton","Payton","Pearl","Pearlie","Pearline","Pedro","Peggie","Penelope","Percival","Percy","Perry","Pete","Peter","Petra","Peyton","Philip","Phoebe","Phyllis","Pierce","Pierre","Pietro","Pink","Pinkie","Piper","Polly","Porter","Precious","Presley","Preston","Price","Prince","Princess","Priscilla","Providenci","Prudence","Queen","Queenie","Quentin","Quincy","Quinn","Quinten","Quinton","Rachael","Rachel","Rachelle","Rae","Raegan","Rafael","Rafaela","Raheem","Rahsaan","Rahul","Raina","Raleigh","Ralph","Ramiro","Ramon","Ramona","Randal","Randall","Randi","Randy","Ransom","Raoul","Raphael","Raphaelle","Raquel","Rashad","Rashawn","Rasheed","Raul","Raven","Ray","Raymond","Raymundo","Reagan","Reanna","Reba","Rebeca","Rebecca","Rebeka","Rebekah","Reece","Reed","Reese","Regan","Reggie","Reginald","Reid","Reilly","Reina","Reinhold","Remington","Rene","Renee","Ressie","Reta","Retha","Retta","Reuben","Reva","Rex","Rey","Reyes","Reymundo","Reyna","Reynold","Rhea","Rhett","Rhianna","Rhiannon","Rhoda","Ricardo","Richard","Richie","Richmond","Rick","Rickey","Rickie","Ricky","Rico","Rigoberto","Riley","Rita","River","Robb","Robbie","Robert","Roberta","Roberto","Robin","Robyn","Rocio","Rocky","Rod","Roderick","Rodger","Rodolfo","Rodrick","Rodrigo","Roel","Rogelio","Roger","Rogers","Rolando","Rollin","Roma","Romaine","Roman","Ron","Ronaldo","Ronny","Roosevelt","Rory","Rosa","Rosalee","Rosalia","Rosalind","Rosalinda","Rosalyn","Rosamond","Rosanna","Rosario","Roscoe","Rose","Rosella","Roselyn","Rosemarie","Rosemary","Rosendo","Rosetta","Rosie","Rosina","Roslyn","Ross","Rossie","Rowan","Rowena","Rowland","Roxane","Roxanne","Roy","Royal","Royce","Rozella","Ruben","Rubie","Ruby","Rubye","Rudolph","Rudy","Rupert","Russ","Russel","Russell","Rusty","Ruth","Ruthe","Ruthie","Ryan","Ryann","Ryder","Rylan","Rylee","Ryleigh","Ryley","Sabina","Sabrina","Sabryna","Sadie","Sadye","Sage","Saige","Sallie","Sally","Salma","Salvador","Salvatore","Sam","Samanta","Samantha","Samara","Samir","Sammie","Sammy","Samson","Sandra","Sandrine","Sandy","Sanford","Santa","Santiago","Santina","Santino","Santos","Sarah","Sarai","Sarina","Sasha","Saul","Savanah","Savanna","Savannah","Savion","Scarlett","Schuyler","Scot","Scottie","Scotty","Seamus","Sean","Sebastian","Sedrick","Selena","Selina","Selmer","Serena","Serenity","Seth","Shad","Shaina","Shakira","Shana","Shane","Shanel","Shanelle","Shania","Shanie","Shaniya","Shanna","Shannon","Shanny","Shanon","Shany","Sharon","Shaun","Shawn","Shawna","Shaylee","Shayna","Shayne","Shea","Sheila","Sheldon","Shemar","Sheridan","Sherman","Sherwood","Shirley","Shyann","Shyanne","Sibyl","Sid","Sidney","Sienna","Sierra","Sigmund","Sigrid","Sigurd","Silas","Sim","Simeon","Simone","Sincere","Sister","Skye","Skyla","Skylar","Sofia","Soledad","Solon","Sonia","Sonny","Sonya","Sophia","Sophie","Spencer","Stacey","Stacy","Stan","Stanford","Stanley","Stanton","Stefan","Stefanie","Stella","Stephan","Stephania","Stephanie","Stephany","Stephen","Stephon","Sterling","Steve","Stevie","Stewart","Stone","Stuart","Summer","Sunny","Susan","Susana","Susanna","Susie","Suzanne","Sven","Syble","Sydnee","Sydney","Sydni","Sydnie","Sylvan","Sylvester","Sylvia","Tabitha","Tad","Talia","Talon","Tamara","Tamia","Tania","Tanner","Tanya","Tara","Taryn","Tate","Tatum","Tatyana","Taurean","Tavares","Taya","Taylor","Teagan","Ted","Telly","Terence","Teresa","Terrance","Terrell","Terrence","Terrill","Terry","Tess","Tessie","Tevin","Thad","Thaddeus","Thalia","Thea","Thelma","Theo","Theodora","Theodore","Theresa","Therese","Theresia","Theron","Thomas","Thora","Thurman","Tia","Tiana","Tianna","Tiara","Tierra","Tiffany","Tillman","Timmothy","Timmy","Timothy","Tina","Tito","Titus","Tobin","Toby","Tod","Tom","Tomas","Tomasa","Tommie","Toney","Toni","Tony","Torey","Torrance","Torrey","Toy","Trace","Tracey","Tracy","Travis","Travon","Tre","Tremaine","Tremayne","Trent","Trenton","Tressa","Tressie","Treva","Trever","Trevion","Trevor","Trey","Trinity","Trisha","Tristian","Tristin","Triston","Troy","Trudie","Trycia","Trystan","Turner","Twila","Tyler","Tyra","Tyree","Tyreek","Tyrel","Tyrell","Tyrese","Tyrique","Tyshawn","Tyson","Ubaldo","Ulices","Ulises","Una","Unique","Urban","Uriah","Uriel","Ursula","Vada","Valentin","Valentina","Valentine","Valerie","Vallie","Van","Vance","Vanessa","Vaughn","Veda","Velda","Vella","Velma","Velva","Vena","Verda","Verdie","Vergie","Verla","Verlie","Vern","Verna","Verner","Vernice","Vernie","Vernon","Verona","Veronica","Vesta","Vicenta","Vicente","Vickie","Vicky","Victor","Victoria","Vida","Vidal","Vilma","Vince","Vincent","Vincenza","Vincenzo","Vinnie","Viola","Violet","Violette","Virgie","Virgil","Virginia","Virginie","Vita","Vito","Viva","Vivian","Viviane","Vivianne","Vivien","Vivienne","Vladimir","Wade","Waino","Waldo","Walker","Wallace","Walter","Walton","Wanda","Ward","Warren","Watson","Wava","Waylon","Wayne","Webster","Weldon","Wellington","Wendell","Wendy","Werner","Westley","Weston","Whitney","Wilber","Wilbert","Wilburn","Wiley","Wilford","Wilfred","Wilfredo","Wilfrid","Wilhelm","Wilhelmine","Will","Willa","Willard","William","Willie","Willis","Willow","Willy","Wilma","Wilmer","Wilson","Wilton","Winfield","Winifred","Winnifred","Winona","Winston","Woodrow","Wyatt","Wyman","Xander","Xavier","Xzavier","Yadira","Yasmeen","Yasmin","Yasmine","Yazmin","Yesenia","Yessenia","Yolanda","Yoshiko","Yvette","Yvonne","Zachariah","Zachary","Zachery","Zack","Zackary","Zackery","Zakary","Zander","Zane","Zaria","Zechariah","Zelda","Zella","Zelma","Zena","Zetta","Zion","Zita","Zoe","Zoey","Zoie","Zoila","Zola","Zora","Zula"],ha=["Agender","Androgyne","Androgynous","Bigender","Cis female","Cis male","Cis man","Cis woman","Cis","Cisgender female","Cisgender male","Cisgender man","Cisgender woman","Cisgender","Demi-boy","Demi-girl","Demi-man","Demi-woman","Demiflux","Demigender","F2M","FTM","Female to male trans man","Female to male transgender man","Female to male transsexual man","Female to male","Gender fluid","Gender neutral","Gender nonconforming","Gender questioning","Gender variant","Genderflux","Genderqueer","Hermaphrodite","Intersex man","Intersex person","Intersex woman","Intersex","M2F","MTF","Male to female trans woman","Male to female transgender woman","Male to female transsexual woman","Male to female","Man","Multigender","Neither","Neutrois","Non-binary","Omnigender","Other","Pangender","Polygender","T* man","T* woman","Trans female","Trans male","Trans man","Trans person","Trans woman","Trans","Transexual female","Transexual male","Transexual man","Transexual person","Transexual woman","Transexual","Transgender female","Transgender person","Transmasculine","Trigender","Two* person","Two-spirit person","Two-spirit","Woman","Xenogender"],pa=["{{person.jobDescriptor}} {{person.jobArea}} {{person.jobType}}"],ma=["Abbott","Abernathy","Abshire","Adams","Altenwerth","Anderson","Ankunding","Armstrong","Auer","Aufderhar","Bahringer","Bailey","Balistreri","Barrows","Bartell","Bartoletti","Barton","Bashirian","Batz","Bauch","Baumbach","Bayer","Beahan","Beatty","Bechtelar","Becker","Bednar","Beer","Beier","Berge","Bergnaum","Bergstrom","Bernhard","Bernier","Bins","Blanda","Blick","Block","Bode","Boehm","Bogan","Bogisich","Borer","Bosco","Botsford","Boyer","Boyle","Bradtke","Brakus","Braun","Breitenberg","Brekke","Brown","Bruen","Buckridge","Carroll","Carter","Cartwright","Casper","Cassin","Champlin","Christiansen","Cole","Collier","Collins","Conn","Connelly","Conroy","Considine","Corkery","Cormier","Corwin","Cremin","Crist","Crona","Cronin","Crooks","Cruickshank","Cummerata","Cummings","Dach","D'Amore","Daniel","Dare","Daugherty","Davis","Deckow","Denesik","Dibbert","Dickens","Dicki","Dickinson","Dietrich","Donnelly","Dooley","Douglas","Doyle","DuBuque","Durgan","Ebert","Effertz","Emard","Emmerich","Erdman","Ernser","Fadel","Fahey","Farrell","Fay","Feeney","Feest","Feil","Ferry","Fisher","Flatley","Frami","Franecki","Franey","Friesen","Fritsch","Funk","Gerhold","Gerlach","Gibson","Gislason","Gleason","Gleichner","Glover","Goldner","Goodwin","Gorczany","Gottlieb","Goyette","Grady","Graham","Grant","Green","Greenfelder","Greenholt","Grimes","Gulgowski","Gusikowski","Gutkowski","Gutmann","Haag","Hackett","Hagenes","Hahn","Haley","Halvorson","Hamill","Hammes","Hand","Hane","Hansen","Harber","Harris","Hartmann","Harvey","Hauck","Hayes","Heaney","Heathcote","Hegmann","Heidenreich","Heller","Herman","Hermann","Hermiston","Herzog","Hessel","Hettinger","Hickle","Hilll","Hills","Hilpert","Hintz","Hirthe","Hodkiewicz","Hoeger","Homenick","Hoppe","Howe","Howell","Hudson","Huel","Huels","Hyatt","Jacobi","Jacobs","Jacobson","Jakubowski","Jaskolski","Jast","Jenkins","Jerde","Johns","Johnson","Johnston","Jones","Kassulke","Kautzer","Keebler","Keeling","Kemmer","Kerluke","Kertzmann","Kessler","Kiehn","Kihn","Kilback","King","Kirlin","Klein","Kling","Klocko","Koch","Koelpin","Koepp","Kohler","Konopelski","Koss","Kovacek","Kozey","Krajcik","Kreiger","Kris","Kshlerin","Kub","Kuhic","Kuhlman","Kuhn","Kulas","Kunde","Kunze","Kuphal","Kutch","Kuvalis","Labadie","Lakin","Lang","Langosh","Langworth","Larkin","Larson","Leannon","Lebsack","Ledner","Leffler","Legros","Lehner","Lemke","Lesch","Leuschke","Lind","Lindgren","Littel","Little","Lockman","Lowe","Lubowitz","Lueilwitz","Luettgen","Lynch","Macejkovic","MacGyver","Maggio","Mann","Mante","Marks","Marquardt","Marvin","Mayer","Mayert","McClure","McCullough","McDermott","McGlynn","McKenzie","McLaughlin","Medhurst","Mertz","Metz","Miller","Mills","Mitchell","Moen","Mohr","Monahan","Moore","Morar","Morissette","Mosciski","Mraz","Mueller","Muller","Murazik","Murphy","Murray","Nader","Nicolas","Nienow","Nikolaus","Nitzsche","Nolan","Oberbrunner","O'Connell","O'Conner","O'Hara","O'Keefe","O'Kon","Okuneva","Olson","Ondricka","O'Reilly","Orn","Ortiz","Osinski","Pacocha","Padberg","Pagac","Parisian","Parker","Paucek","Pfannerstill","Pfeffer","Pollich","Pouros","Powlowski","Predovic","Price","Prohaska","Prosacco","Purdy","Quigley","Quitzon","Rath","Ratke","Rau","Raynor","Reichel","Reichert","Reilly","Reinger","Rempel","Renner","Reynolds","Rice","Rippin","Ritchie","Robel","Roberts","Rodriguez","Rogahn","Rohan","Rolfson","Romaguera","Roob","Rosenbaum","Rowe","Ruecker","Runolfsdottir","Runolfsson","Runte","Russel","Rutherford","Ryan","Sanford","Satterfield","Sauer","Sawayn","Schaden","Schaefer","Schamberger","Schiller","Schimmel","Schinner","Schmeler","Schmidt","Schmitt","Schneider","Schoen","Schowalter","Schroeder","Schulist","Schultz","Schumm","Schuppe","Schuster","Senger","Shanahan","Shields","Simonis","Sipes","Skiles","Smith","Smitham","Spencer","Spinka","Sporer","Stamm","Stanton","Stark","Stehr","Steuber","Stiedemann","Stokes","Stoltenberg","Stracke","Streich","Stroman","Strosin","Swaniawski","Swift","Terry","Thiel","Thompson","Tillman","Torp","Torphy","Towne","Toy","Trantow","Tremblay","Treutel","Tromp","Turcotte","Turner","Ullrich","Upton","Vandervort","Veum","Volkman","Von","VonRueden","Waelchi","Walker","Walsh","Walter","Ward","Waters","Watsica","Weber","Wehner","Weimann","Weissnat","Welch","West","White","Wiegand","Wilderman","Wilkinson","Will","Williamson","Willms","Windler","Wintheiser","Wisoky","Wisozk","Witting","Wiza","Wolf","Wolff","Wuckert","Wunsch","Wyman","Yost","Yundt","Zboncak","Zemlak","Ziemann","Zieme","Zulauf"],ya=[{value:"{{person.last_name}}",weight:95},{value:"{{person.last_name}}-{{person.last_name}}",weight:5}],ga=["James","John","Robert","Michael","William","David","Richard","Charles","Joseph","Thomas","Christopher","Daniel","Paul","Mark","Donald","George","Kenneth","Steven","Edward","Brian","Ronald","Anthony","Kevin","Jason","Matthew","Gary","Timothy","Jose","Larry","Jeffrey","Frank","Scott","Eric","Stephen","Andrew","Raymond","Gregory","Joshua","Jerry","Dennis","Walter","Patrick","Peter","Harold","Douglas","Henry","Carl","Arthur","Ryan","Roger","Joe","Juan","Jack","Albert","Jonathan","Justin","Terry","Gerald","Keith","Samuel","Willie","Ralph","Lawrence","Nicholas","Roy","Benjamin","Bruce","Brandon","Adam","Harry","Fred","Wayne","Billy","Steve","Louis","Jeremy","Aaron","Randy","Howard","Eugene","Carlos","Russell","Bobby","Victor","Martin","Ernest","Phillip","Todd","Jesse","Craig","Alan","Shawn","Clarence","Sean","Philip","Chris","Johnny","Earl","Jimmy","Antonio","Danny","Bryan","Tony","Luis","Mike","Stanley","Leonard","Nathan","Dale","Manuel","Rodney","Curtis","Norman","Allen","Marvin","Vincent","Glenn","Jeffery","Travis","Jeff","Chad","Jacob","Lee","Melvin","Alfred","Kyle","Francis","Bradley","Jesus","Herbert","Frederick","Ray","Joel","Edwin","Don","Eddie","Ricky","Troy","Randall","Barry","Alexander","Bernard","Mario","Leroy","Francisco","Marcus","Micheal","Theodore","Clifford","Miguel","Oscar","Jay","Jim","Tom","Calvin","Alex","Jon","Ronnie","Bill","Lloyd","Tommy","Leon","Derek","Warren","Darrell","Jerome","Floyd","Leo","Alvin","Tim","Wesley","Gordon","Dean","Greg","Jorge","Dustin","Pedro","Derrick","Dan","Lewis","Zachary","Corey","Herman","Maurice","Vernon","Roberto","Clyde","Glen","Hector","Shane","Ricardo","Sam","Rick","Lester","Brent","Ramon","Charlie","Tyler","Gilbert","Gene","Marc","Reginald","Ruben","Brett","Angel","Nathaniel","Rafael","Leslie","Edgar","Milton","Raul","Ben","Chester","Cecil","Duane","Franklin","Andre","Elmer","Brad","Gabriel","Ron","Mitchell","Roland","Arnold","Harvey","Jared","Adrian","Karl","Cory","Claude","Erik","Darryl","Jamie","Neil","Jessie","Christian","Javier","Fernando","Clinton","Ted","Mathew","Tyrone","Darren","Lonnie","Lance","Cody","Julio","Kelly","Kurt","Allan","Nelson","Guy","Clayton","Hugh","Max","Dwayne","Dwight","Armando","Felix","Jimmie","Everett","Jordan","Ian","Wallace","Ken","Bob","Jaime","Casey","Alfredo","Alberto","Dave","Ivan","Johnnie","Sidney","Byron","Julian","Isaac","Morris","Clifton","Willard","Daryl","Ross","Virgil","Andy","Marshall","Salvador","Perry","Kirk","Sergio","Marion","Tracy","Seth","Kent","Terrance","Rene","Eduardo","Terrence","Enrique","Freddie","Wade","Austin","Stuart","Fredrick","Arturo","Alejandro","Jackie","Joey","Nick","Luther","Wendell","Jeremiah","Evan","Julius","Dana","Donnie","Otis","Shannon","Trevor","Oliver","Luke","Homer","Gerard","Doug","Kenny","Hubert","Angelo","Shaun","Lyle","Matt","Lynn","Alfonso","Orlando","Rex","Carlton","Ernesto","Cameron","Neal","Pablo","Lorenzo","Omar","Wilbur","Blake","Grant","Horace","Roderick","Kerry","Abraham","Willis","Rickey","Jean","Ira","Andres","Cesar","Johnathan","Malcolm","Rudolph","Damon","Kelvin","Rudy","Preston","Alton","Archie","Marco","Wm","Pete","Randolph","Garry","Geoffrey","Jonathon","Felipe","Bennie","Gerardo","Ed","Dominic","Robin","Loren","Delbert","Colin","Guillermo","Earnest","Lucas","Benny","Noel","Spencer","Rodolfo","Myron","Edmund","Garrett","Salvatore","Cedric","Lowell","Gregg","Sherman","Wilson","Devin","Sylvester","Kim","Roosevelt","Israel","Jermaine","Forrest","Wilbert","Leland","Simon","Guadalupe","Clark","Irving","Carroll","Bryant","Owen","Rufus","Woodrow","Sammy","Kristopher","Mack","Levi","Marcos","Gustavo","Jake","Lionel","Marty","Taylor","Ellis","Dallas","Gilberto","Clint","Nicolas","Laurence","Ismael","Orville","Drew","Jody","Ervin","Dewey","Al","Wilfred","Josh","Hugo","Ignacio","Caleb","Tomas","Sheldon","Erick","Frankie","Stewart","Doyle","Darrel","Rogelio","Terence","Santiago","Alonzo","Elias","Bert","Elbert","Ramiro","Conrad","Pat","Noah","Grady","Phil","Cornelius","Lamar","Rolando","Clay","Percy","Dexter","Bradford","Merle","Darin","Amos","Terrell","Moses","Irvin","Saul","Roman","Darnell","Randal","Tommie","Timmy","Darrin","Winston","Brendan","Toby","Van","Abel","Dominick","Boyd","Courtney","Jan","Emilio","Elijah","Cary","Domingo","Santos","Aubrey","Emmett","Marlon","Emanuel","Jerald","Edmond"],fa=["Ace","Aiden","Alexander","Ander","Anthony","Asher","August","Aziel","Bear","Beckham","Benjamin","Buddy","Calvin","Carter","Charles","Christopher","Clyde","Cooper","Daniel","David","Dior","Dylan","Elijah","Ellis","Emerson","Ethan","Ezra","Fletcher","Flynn","Gabriel","Grayson","Gus","Hank","Harrison","Hendrix","Henry","Houston","Hudson","Hugh","Isaac","Jack","Jackson","Jacob","Jakobe","James","Jaxon","Jaxtyn","Jayden","John","Joseph","Josiah","Jude","Julian","Karsyn","Kenji","Kobe","Kylo","Lennon","Leo","Levi","Liam","Lincoln","Logan","Louis","Lucas","Lucky","Luke","Mason","Mateo","Matthew","Maverick","Michael","Monroe","Nixon","Ocean","Oliver","Otis","Otto","Owen","Ozzy","Parker","Rocky","Samuel","Sebastian","Sonny","Teddy","Theo","Theodore","Thomas","Truett","Walter","Warren","Watson","William","Wison","Wyatt","Ziggy","Zyair"],ba=["Mr.","Dr."],ka=["Addison","Alex","Anderson","Angel","Arden","August","Austin","Avery","Bailey","Billie","Blake","Bowie","Brooklyn","Cameron","Charlie","Corey","Dakota","Drew","Elliott","Ellis","Emerson","Finley","Gray","Greer","Harper","Hayden","Jaden","James","Jamie","Jordan","Jules","Kai","Kendall","Kennedy","Kyle","Leslie","Logan","London","Marlowe","Micah","Nico","Noah","North","Parker","Phoenix","Quinn","Reagan","Reese","Reign","Riley","River","Robin","Rory","Rowan","Ryan","Sage","Sasha","Sawyer","Shawn","Shiloh","Skyler","Taylor"],va=[{value:"{{person.firstName}} {{person.lastName}}",weight:49},{value:"{{person.prefix}} {{person.firstName}} {{person.lastName}}",weight:7},{value:"{{person.firstName}} {{person.lastName}} {{person.suffix}}",weight:7},{value:"{{person.prefix}} {{person.firstName}} {{person.lastName}} {{person.suffix}}",weight:1}];function wa(...e){return[...new Set(e.flat())].sort()}var Ca=wa(ua,ba),Sa=["female","male"],Aa=["Jr.","Sr.","I","II","III","IV","V","MD","DDS","PhD","DVM"],Ma={descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","International","Legacy","Forward","Internal","Human","Chief","Principal"],level:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job:["Supervisor","Associate","Executive","Liaison","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"]},Ba=["Aquarius","Pisces","Aries","Taurus","Gemini","Cancer","Leo","Virgo","Libra","Scorpio","Sagittarius","Capricorn"],Ta={bio_part:ia,bio_pattern:oa,bio_supporter:la,female_first_name:sa,female_middle_name:ca,female_prefix:ua,first_name:da,gender:ha,job_title_pattern:pa,last_name:ma,last_name_pattern:ya,male_first_name:ga,male_middle_name:fa,male_prefix:ba,middle_name:ka,name:va,prefix:Ca,sex:Sa,suffix:Aa,title:Ma,western_zodiac_sign:Ba},xa=Ta,Ra=["!##-!##-####","(!##) !##-####","1-!##-!##-####","!##.!##.####","!##-!##-#### x###","(!##) !##-#### x###","1-!##-!##-#### x###","!##.!##.#### x###","!##-!##-#### x####","(!##) !##-#### x####","1-!##-!##-#### x####","!##.!##.#### x####","!##-!##-#### x#####","(!##) !##-#### x#####","1-!##-!##-#### x#####","!##.!##.#### x#####"],La={formats:Ra},Pa=La,Ea=Object.freeze([{symbol:"H",name:"Hydrogen",atomicNumber:1},{symbol:"He",name:"Helium",atomicNumber:2},{symbol:"Li",name:"Lithium",atomicNumber:3},{symbol:"Be",name:"Beryllium",atomicNumber:4},{symbol:"B",name:"Boron",atomicNumber:5},{symbol:"C",name:"Carbon",atomicNumber:6},{symbol:"N",name:"Nitrogen",atomicNumber:7},{symbol:"O",name:"Oxygen",atomicNumber:8},{symbol:"F",name:"Fluorine",atomicNumber:9},{symbol:"Ne",name:"Neon",atomicNumber:10},{symbol:"Na",name:"Sodium",atomicNumber:11},{symbol:"Mg",name:"Magnesium",atomicNumber:12},{symbol:"Al",name:"Aluminium",atomicNumber:13},{symbol:"Si",name:"Silicon",atomicNumber:14},{symbol:"P",name:"Phosphorus",atomicNumber:15},{symbol:"S",name:"Sulfur",atomicNumber:16},{symbol:"Cl",name:"Chlorine",atomicNumber:17},{symbol:"Ar",name:"Argon",atomicNumber:18},{symbol:"K",name:"Potassium",atomicNumber:19},{symbol:"Ca",name:"Calcium",atomicNumber:20},{symbol:"Sc",name:"Scandium",atomicNumber:21},{symbol:"Ti",name:"Titanium",atomicNumber:22},{symbol:"V",name:"Vanadium",atomicNumber:23},{symbol:"Cr",name:"Chromium",atomicNumber:24},{symbol:"Mn",name:"Manganese",atomicNumber:25},{symbol:"Fe",name:"Iron",atomicNumber:26},{symbol:"Co",name:"Cobalt",atomicNumber:27},{symbol:"Ni",name:"Nickel",atomicNumber:28},{symbol:"Cu",name:"Copper",atomicNumber:29},{symbol:"Zn",name:"Zinc",atomicNumber:30},{symbol:"Ga",name:"Gallium",atomicNumber:31},{symbol:"Ge",name:"Germanium",atomicNumber:32},{symbol:"As",name:"Arsenic",atomicNumber:33},{symbol:"Se",name:"Selenium",atomicNumber:34},{symbol:"Br",name:"Bromine",atomicNumber:35},{symbol:"Kr",name:"Krypton",atomicNumber:36},{symbol:"Rb",name:"Rubidium",atomicNumber:37},{symbol:"Sr",name:"Strontium",atomicNumber:38},{symbol:"Y",name:"Yttrium",atomicNumber:39},{symbol:"Zr",name:"Zirconium",atomicNumber:40},{symbol:"Nb",name:"Niobium",atomicNumber:41},{symbol:"Mo",name:"Molybdenum",atomicNumber:42},{symbol:"Tc",name:"Technetium",atomicNumber:43},{symbol:"Ru",name:"Ruthenium",atomicNumber:44},{symbol:"Rh",name:"Rhodium",atomicNumber:45},{symbol:"Pd",name:"Palladium",atomicNumber:46},{symbol:"Ag",name:"Silver",atomicNumber:47},{symbol:"Cd",name:"Cadmium",atomicNumber:48},{symbol:"In",name:"Indium",atomicNumber:49},{symbol:"Sn",name:"Tin",atomicNumber:50},{symbol:"Sb",name:"Antimony",atomicNumber:51},{symbol:"Te",name:"Tellurium",atomicNumber:52},{symbol:"I",name:"Iodine",atomicNumber:53},{symbol:"Xe",name:"Xenon",atomicNumber:54},{symbol:"Cs",name:"Caesium",atomicNumber:55},{symbol:"Ba",name:"Barium",atomicNumber:56},{symbol:"La",name:"Lanthanum",atomicNumber:57},{symbol:"Ce",name:"Cerium",atomicNumber:58},{symbol:"Pr",name:"Praseodymium",atomicNumber:59},{symbol:"Nd",name:"Neodymium",atomicNumber:60},{symbol:"Pm",name:"Promethium",atomicNumber:61},{symbol:"Sm",name:"Samarium",atomicNumber:62},{symbol:"Eu",name:"Europium",atomicNumber:63},{symbol:"Gd",name:"Gadolinium",atomicNumber:64},{symbol:"Tb",name:"Terbium",atomicNumber:65},{symbol:"Dy",name:"Dysprosium",atomicNumber:66},{symbol:"Ho",name:"Holmium",atomicNumber:67},{symbol:"Er",name:"Erbium",atomicNumber:68},{symbol:"Tm",name:"Thulium",atomicNumber:69},{symbol:"Yb",name:"Ytterbium",atomicNumber:70},{symbol:"Lu",name:"Lutetium",atomicNumber:71},{symbol:"Hf",name:"Hafnium",atomicNumber:72},{symbol:"Ta",name:"Tantalum",atomicNumber:73},{symbol:"W",name:"Tungsten",atomicNumber:74},{symbol:"Re",name:"Rhenium",atomicNumber:75},{symbol:"Os",name:"Osmium",atomicNumber:76},{symbol:"Ir",name:"Iridium",atomicNumber:77},{symbol:"Pt",name:"Platinum",atomicNumber:78},{symbol:"Au",name:"Gold",atomicNumber:79},{symbol:"Hg",name:"Mercury",atomicNumber:80},{symbol:"Tl",name:"Thallium",atomicNumber:81},{symbol:"Pb",name:"Lead",atomicNumber:82},{symbol:"Bi",name:"Bismuth",atomicNumber:83},{symbol:"Po",name:"Polonium",atomicNumber:84},{symbol:"At",name:"Astatine",atomicNumber:85},{symbol:"Rn",name:"Radon",atomicNumber:86},{symbol:"Fr",name:"Francium",atomicNumber:87},{symbol:"Ra",name:"Radium",atomicNumber:88},{symbol:"Ac",name:"Actinium",atomicNumber:89},{symbol:"Th",name:"Thorium",atomicNumber:90},{symbol:"Pa",name:"Protactinium",atomicNumber:91},{symbol:"U",name:"Uranium",atomicNumber:92},{symbol:"Np",name:"Neptunium",atomicNumber:93},{symbol:"Pu",name:"Plutonium",atomicNumber:94},{symbol:"Am",name:"Americium",atomicNumber:95},{symbol:"Cm",name:"Curium",atomicNumber:96},{symbol:"Bk",name:"Berkelium",atomicNumber:97},{symbol:"Cf",name:"Californium",atomicNumber:98},{symbol:"Es",name:"Einsteinium",atomicNumber:99},{symbol:"Fm",name:"Fermium",atomicNumber:100},{symbol:"Md",name:"Mendelevium",atomicNumber:101},{symbol:"No",name:"Nobelium",atomicNumber:102},{symbol:"Lr",name:"Lawrencium",atomicNumber:103},{symbol:"Rf",name:"Rutherfordium",atomicNumber:104},{symbol:"Db",name:"Dubnium",atomicNumber:105},{symbol:"Sg",name:"Seaborgium",atomicNumber:106},{symbol:"Bh",name:"Bohrium",atomicNumber:107},{symbol:"Hs",name:"Hassium",atomicNumber:108},{symbol:"Mt",name:"Meitnerium",atomicNumber:109},{symbol:"Ds",name:"Darmstadtium",atomicNumber:110},{symbol:"Rg",name:"Roentgenium",atomicNumber:111},{symbol:"Cn",name:"Copernicium",atomicNumber:112},{symbol:"Nh",name:"Nihonium",atomicNumber:113},{symbol:"Fl",name:"Flerovium",atomicNumber:114},{symbol:"Mc",name:"Moscovium",atomicNumber:115},{symbol:"Lv",name:"Livermorium",atomicNumber:116},{symbol:"Ts",name:"Tennessine",atomicNumber:117},{symbol:"Og",name:"Oganesson",atomicNumber:118}]),Da=Object.freeze([{name:"meter",symbol:"m"},{name:"second",symbol:"s"},{name:"mole",symbol:"mol"},{name:"ampere",symbol:"A"},{name:"kelvin",symbol:"K"},{name:"candela",symbol:"cd"},{name:"kilogram",symbol:"kg"},{name:"radian",symbol:"rad"},{name:"hertz",symbol:"Hz"},{name:"newton",symbol:"N"},{name:"pascal",symbol:"Pa"},{name:"joule",symbol:"J"},{name:"watt",symbol:"W"},{name:"coulomb",symbol:"C"},{name:"volt",symbol:"V"},{name:"ohm",symbol:"Ω"},{name:"tesla",symbol:"T"},{name:"degree Celsius",symbol:"°C"},{name:"lumen",symbol:"lm"},{name:"becquerel",symbol:"Bq"},{name:"gray",symbol:"Gy"},{name:"sievert",symbol:"Sv"},{name:"steradian",symbol:"sr"},{name:"farad",symbol:"F"},{name:"siemens",symbol:"S"},{name:"weber",symbol:"Wb"},{name:"henry",symbol:"H"},{name:"lux",symbol:"lx"},{name:"katal",symbol:"kat"}]),Na={chemicalElement:Ea,unit:Da},Ha=Na,Ga=["ants","bats","bears","bees","birds","buffalo","cats","chickens","cattle","dogs","dolphins","ducks","elephants","fishes","foxes","frogs","geese","goats","horses","kangaroos","lions","monkeys","owls","oxen","penguins","people","pigs","rabbits","sheep","tigers","whales","wolves","zebras","banshees","crows","black cats","chimeras","ghosts","conspirators","dragons","dwarves","elves","enchanters","exorcists","sons","foes","giants","gnomes","goblins","gooses","griffins","lycanthropes","nemesis","ogres","oracles","prophets","sorcerors","spiders","spirits","vampires","warlocks","vixens","werewolves","witches","worshipers","zombies","druids"],Wa=["{{location.state}} {{team.creature}}"],Fa={creature:Ga,name:Wa},za=Fa,Ia=["Adventure Road Bicycle","BMX Bicycle","City Bicycle","Cruiser Bicycle","Cyclocross Bicycle","Dual-Sport Bicycle","Fitness Bicycle","Flat-Foot Comfort Bicycle","Folding Bicycle","Hybrid Bicycle","Mountain Bicycle","Recumbent Bicycle","Road Bicycle","Tandem Bicycle","Touring Bicycle","Track/Fixed-Gear Bicycle","Triathlon/Time Trial Bicycle","Tricycle"],Oa=["Diesel","Electric","Gasoline","Hybrid"],_a=["Aston Martin","Audi","Bentley","BMW","Bugatti","Cadillac","Chevrolet","Chrysler","Dodge","Ferrari","Fiat","Ford","Honda","Hyundai","Jaguar","Jeep","Kia","Lamborghini","Land Rover","Maserati","Mazda","Mercedes Benz","Mini","Nissan","Polestar","Porsche","Rolls Royce","Smart","Tesla","Toyota","Volkswagen","Volvo"],Ka=["Fiesta","Focus","Taurus","Mustang","Explorer","Expedition","F-150","Model T","Ranchero","Volt","Cruze","Malibu","Impala","Camaro","Corvette","Colorado","Silverado","El Camino","CTS","XTS","ATS","Escalade","Alpine","Charger","LeBaron","PT Cruiser","Challenger","Durango","Grand Caravan","Wrangler","Grand Cherokee","Roadster","Model S","Model 3","Model X","Model Y","Camry","Prius","Land Cruiser","Accord","Civic","Element","Sentra","Altima","A8","A4","Beetle","Jetta","Golf","911","Spyder","Countach","Mercielago","Aventador","1","2","Fortwo","V90","XC90","CX-9"],Ja=["Cargo Van","Convertible","Coupe","Crew Cab Pickup","Extended Cab Pickup","Hatchback","Minivan","Passenger Van","SUV","Sedan","Wagon"],ja={bicycle_type:Ia,fuel:Oa,manufacturer:_a,model:Ka,type:Ja},$a=ja,Va=["abandoned","able","absolute","adorable","adventurous","academic","acceptable","acclaimed","accomplished","accurate","aching","acidic","acrobatic","active","actual","adept","admirable","admired","adolescent","adored","advanced","afraid","affectionate","aged","aggravating","aggressive","agile","agitated","agonizing","agreeable","ajar","alarmed","alarming","alert","alienated","alive","all","altruistic","amazing","ambitious","ample","amused","amusing","anchored","ancient","angelic","angry","anguished","animated","annual","another","antique","anxious","any","apprehensive","appropriate","apt","arctic","arid","aromatic","artistic","ashamed","assured","astonishing","athletic","attached","attentive","attractive","austere","authentic","authorized","automatic","avaricious","average","aware","awesome","awful","awkward","babyish","bad","back","baggy","bare","barren","basic","beautiful","belated","beloved","beneficial","better","best","bewitched","big","big-hearted","biodegradable","bite-sized","bitter","black","black-and-white","bland","blank","blaring","bleak","blind","blissful","blond","blue","blushing","bogus","boiling","bold","bony","boring","bossy","both","bouncy","bountiful","bowed","brave","breakable","brief","bright","brilliant","brisk","broken","bronze","brown","bruised","bubbly","bulky","bumpy","buoyant","burdensome","burly","bustling","busy","buttery","buzzing","calculating","calm","candid","canine","capital","carefree","careful","careless","caring","cautious","cavernous","celebrated","charming","cheap","cheerful","cheery","chief","chilly","chubby","circular","classic","clean","clear","clear-cut","clever","close","closed","cloudy","clueless","clumsy","cluttered","coarse","cold","colorful","colorless","colossal","comfortable","common","compassionate","competent","complete","complex","complicated","composed","concerned","concrete","confused","conscious","considerate","constant","content","conventional","cooked","cool","cooperative","coordinated","corny","corrupt","costly","courageous","courteous","crafty","crazy","creamy","creative","creepy","criminal","crisp","critical","crooked","crowded","cruel","crushing","cuddly","cultivated","cultured","cumbersome","curly","curvy","cute","cylindrical","damaged","damp","dangerous","dapper","daring","darling","dark","dazzling","dead","deadly","deafening","dear","dearest","decent","decimal","decisive","deep","defenseless","defensive","defiant","deficient","definite","definitive","delayed","delectable","delicious","delightful","delirious","demanding","dense","dental","dependable","dependent","descriptive","deserted","detailed","determined","devoted","different","difficult","digital","diligent","dim","dimpled","direct","disastrous","discrete","disgusting","disloyal","dismal","distant","downright","dreary","dirty","disguised","dishonest","distinct","distorted","dizzy","doting","double","drab","drafty","dramatic","droopy","dry","dual","dull","dutiful","each","eager","earnest","early","easy","easy-going","ecstatic","edible","educated","elaborate","elastic","elated","elderly","electric","elegant","elementary","elliptical","embarrassed","embellished","eminent","emotional","empty","enchanted","enchanting","energetic","enlightened","enormous","enraged","entire","envious","equal","equatorial","essential","esteemed","ethical","euphoric","even","evergreen","everlasting","every","evil","exalted","excellent","exemplary","exhausted","excitable","excited","exciting","exotic","expensive","experienced","expert","extraneous","extroverted","extra-large","extra-small","fabulous","failing","faint","fair","faithful","fake","false","familiar","famous","fancy","fantastic","far","faraway","far-flung","far-off","fast","fat","fatal","fatherly","favorable","favorite","fearful","fearless","feisty","feline","female","feminine","few","fickle","filthy","fine","finished","firm","first","firsthand","fitting","fixed","flaky","flamboyant","flashy","flat","flawed","flawless","flickering","flimsy","flippant","flowery","fluffy","fluid","flustered","focused","fond","foolhardy","foolish","forceful","forked","formal","forsaken","forthright","fortunate","fragrant","frail","frank","frayed","free","french","fresh","frequent","friendly","frightened","frightening","frigid","frilly","frizzy","frivolous","front","frosty","frozen","frugal","fruitful","full","fumbling","functional","funny","fussy","fuzzy","gargantuan","gaseous","general","generous","gentle","genuine","giant","giddy","gigantic","gifted","giving","glamorous","glaring","glass","gleaming","gleeful","glistening","glittering","gloomy","glorious","glossy","glum","golden","good","good-natured","gorgeous","graceful","gracious","grand","grandiose","granular","grateful","grave","gray","great","greedy","green","gregarious","grim","grimy","gripping","grizzled","grotesque","grouchy","grounded","growing","growling","grown","grubby","gruesome","grumpy","guilty","gullible","gummy","hairy","half","handmade","handsome","handy","happy","happy-go-lucky","hard","hard-to-find","harmful","harmless","harmonious","harsh","hasty","hateful","haunting","healthy","heartfelt","hearty","heavenly","heavy","hefty","helpful","helpless","hidden","hideous","high","high-level","hilarious","hoarse","hollow","homely","honest","honorable","honored","hopeful","horrible","hospitable","hot","huge","humble","humiliating","humming","humongous","hungry","hurtful","husky","icky","icy","ideal","idealistic","identical","idle","idolized","ignorant","ill","ill-fated","ill-informed","illiterate","illustrious","imaginary","imaginative","immaculate","immaterial","immediate","immense","impassioned","impeccable","impartial","imperfect","imperturbable","impish","impolite","important","impossible","impractical","impressionable","impressive","improbable","impure","inborn","incomparable","incompatible","incomplete","inconsequential","incredible","indelible","inexperienced","indolent","infamous","infantile","infatuated","inferior","infinite","informal","innocent","insecure","insidious","insignificant","insistent","instructive","insubstantial","intelligent","intent","intentional","interesting","internal","international","intrepid","ironclad","irresponsible","irritating","itchy","jaded","jagged","jam-packed","jaunty","jealous","jittery","joint","jolly","jovial","joyful","joyous","jubilant","judicious","juicy","jumbo","junior","jumpy","juvenile","kaleidoscopic","keen","key","kind","kindhearted","kindly","klutzy","knobby","knotty","knowledgeable","knowing","known","kooky","kosher","lanky","large","last","lasting","late","lavish","lawful","lazy","leading","lean","leafy","left","legal","legitimate","light","lighthearted","likable","likely","limited","limp","limping","linear","lined","liquid","little","live","lively","livid","loathsome","lone","lonely","long","long-term","loose","lopsided","lost","loud","lovable","lovely","loving","low","loyal","lucky","lumbering","luminous","lumpy","lustrous","luxurious","mad","made-up","magnificent","majestic","major","male","mammoth","married","marvelous","masculine","massive","mature","meager","mealy","mean","measly","meaty","medical","mediocre","medium","meek","mellow","melodic","memorable","menacing","merry","messy","metallic","mild","milky","mindless","miniature","minor","minty","miserable","miserly","misguided","misty","mixed","modern","modest","moist","monstrous","monthly","monumental","moral","mortified","motherly","motionless","mountainous","muddy","muffled","multicolored","mundane","murky","mushy","musty","muted","mysterious","naive","narrow","natural","naughty","nautical","near","neat","necessary","needy","negative","neglected","negligible","neighboring","nervous","new","next","nice","nifty","nimble","nippy","nocturnal","noisy","nonstop","normal","notable","noted","noteworthy","novel","noxious","numb","nutritious","nutty","obedient","oblong","oily","obvious","occasional","odd","oddball","offbeat","offensive","official","old","old-fashioned","only","open","optimal","optimistic","opulent","orange","orderly","organic","ornate","ornery","ordinary","original","other","our","outlying","outgoing","outlandish","outrageous","outstanding","oval","overcooked","overdue","overjoyed","overlooked","palatable","pale","paltry","parallel","parched","partial","passionate","past","pastel","peaceful","peppery","perfect","perfumed","periodic","perky","personal","pertinent","pesky","pessimistic","petty","phony","physical","piercing","pink","pitiful","plain","plaintive","plastic","playful","pleasant","pleased","pleasing","plump","plush","polished","polite","political","pointed","pointless","poised","poor","popular","portly","posh","positive","possible","potable","powerful","powerless","practical","precious","present","prestigious","pretty","previous","pricey","prickly","primary","prime","pristine","private","prize","probable","productive","profitable","profuse","proper","proud","prudent","punctual","pungent","puny","pure","purple","pushy","putrid","puzzled","puzzling","quaint","qualified","quarrelsome","quarterly","queasy","querulous","questionable","quick","quick-witted","quiet","quintessential","quirky","quixotic","quizzical","radiant","ragged","rapid","rare","rash","raw","recent","reckless","rectangular","ready","real","realistic","reasonable","red","reflecting","regal","regular","reliable","relieved","remarkable","remorseful","remote","repentant","required","respectful","responsible","repulsive","revolving","rewarding","rich","rigid","right","ringed","ripe","roasted","robust","rosy","rotating","rotten","rough","round","rowdy","royal","rubbery","rundown","ruddy","rude","runny","rural","rusty","sad","safe","salty","same","sandy","sane","sarcastic","sardonic","satisfied","scaly","scarce","scared","scary","scented","scholarly","scientific","scornful","scratchy","scrawny","second","secondary","second-hand","secret","self-assured","self-reliant","selfish","sentimental","separate","serene","serious","serpentine","several","severe","shabby","shadowy","shady","shallow","shameful","shameless","sharp","shimmering","shiny","shocked","shocking","shoddy","short","short-term","showy","shrill","shy","sick","silent","silky","silly","silver","similar","simple","simplistic","sinful","single","sizzling","skeletal","skinny","sleepy","slight","slim","slimy","slippery","slow","slushy","small","smart","smoggy","smooth","smug","snappy","snarling","sneaky","sniveling","snoopy","sociable","soft","soggy","solid","somber","some","spherical","sophisticated","sore","sorrowful","soulful","soupy","sour","spanish","sparkling","sparse","specific","spectacular","speedy","spicy","spiffy","spirited","spiteful","splendid","spotless","spotted","spry","square","squeaky","squiggly","stable","staid","stained","stale","standard","starchy","stark","starry","steep","sticky","stiff","stimulating","stingy","stormy","straight","strange","steel","strict","strident","striking","striped","strong","studious","stunning","stupendous","sturdy","stylish","subdued","submissive","substantial","subtle","suburban","sudden","sugary","sunny","super","superb","superficial","superior","supportive","sure-footed","surprised","suspicious","svelte","sweaty","sweet","sweltering","swift","sympathetic","tall","talkative","tame","tan","tangible","tart","tasty","tattered","taut","tedious","teeming","tempting","tender","tense","tepid","terrible","terrific","testy","thankful","that","these","thick","thin","third","thirsty","this","thorough","thorny","those","thoughtful","threadbare","thrifty","thunderous","tidy","tight","timely","tinted","tiny","tired","torn","total","tough","traumatic","treasured","tremendous","tragic","trained","triangular","tricky","trifling","trim","trivial","troubled","true","trusting","trustworthy","trusty","truthful","turbulent","twin","ugly","ultimate","unacceptable","unaware","uncomfortable","uncommon","unconscious","understated","unequaled","uneven","unfinished","unfit","unfolded","unfortunate","unhappy","unhealthy","uniform","unimportant","unique","united","unkempt","unknown","unlawful","unlined","unlucky","unnatural","unpleasant","unrealistic","unripe","unruly","unselfish","unsightly","unsteady","unsung","untidy","untimely","untried","untrue","unused","unusual","unwelcome","unwieldy","unwilling","unwitting","unwritten","upbeat","upright","upset","urban","usable","used","useful","useless","utilized","utter","vacant","vague","vain","valid","valuable","vapid","variable","vast","velvety","venerated","vengeful","verifiable","vibrant","vicious","victorious","vigilant","vigorous","villainous","violet","violent","virtual","virtuous","visible","vital","vivacious","vivid","voluminous","wan","warlike","warm","warmhearted","warped","wary","wasteful","watchful","waterlogged","watery","wavy","wealthy","weak","weary","webbed","wee","weekly","weepy","weighty","weird","welcome","well-documented","well-groomed","well-informed","well-lit","well-made","well-off","well-to-do","well-worn","wet","which","whimsical","whirlwind","whispered","white","whole","whopping","wicked","wide","wide-eyed","wiggly","wild","willing","wilted","winding","windy","winged","wiry","wise","witty","wobbly","woeful","wonderful","wooden","woozy","wordy","worldly","worn","worried","worrisome","worse","worst","worthless","worthwhile","worthy","wrathful","wretched","writhing","wrong","wry","yawning","yearly","yellow","yellowish","young","youthful","yummy","zany","zealous","zesty","zigzag"],Ua=["abnormally","absentmindedly","accidentally","acidly","actually","adventurously","afterwards","almost","always","angrily","annually","anxiously","arrogantly","awkwardly","badly","bashfully","beautifully","bitterly","bleakly","blindly","blissfully","boastfully","boldly","bravely","briefly","brightly","briskly","broadly","busily","calmly","carefully","carelessly","cautiously","certainly","cheerfully","clearly","cleverly","closely","coaxingly","colorfully","commonly","continually","coolly","correctly","courageously","crossly","cruelly","curiously","daily","daintily","dearly","deceivingly","deeply","defiantly","deliberately","delightfully","diligently","dimly","doubtfully","dreamily","easily","elegantly","energetically","enormously","enthusiastically","equally","especially","even","evenly","eventually","exactly","excitedly","extremely","fairly","faithfully","famously","far","fast","fatally","ferociously","fervently","fiercely","fondly","foolishly","fortunately","frankly","frantically","freely","frenetically","frightfully","fully","furiously","generally","generously","gently","gladly","gleefully","gracefully","gratefully","greatly","greedily","happily","hastily","healthily","heavily","helpfully","helplessly","highly","honestly","hopelessly","hourly","hungrily","immediately","innocently","inquisitively","instantly","intensely","intently","interestingly","inwardly","irritably","jaggedly","jealously","joshingly","jovially","joyfully","joyously","jubilantly","judgementally","justly","keenly","kiddingly","kindheartedly","kindly","kissingly","knavishly","knottily","knowingly","knowledgeably","kookily","lazily","less","lightly","likely","limply","lively","loftily","longingly","loosely","loudly","lovingly","loyally","madly","majestically","meaningfully","mechanically","merrily","miserably","mockingly","monthly","more","mortally","mostly","mysteriously","naturally","nearly","neatly","needily","nervously","never","nicely","noisily","not","obediently","obnoxiously","oddly","offensively","officially","often","only","openly","optimistically","overconfidently","owlishly","painfully","partially","patiently","perfectly","physically","playfully","politely","poorly","positively","potentially","powerfully","promptly","properly","punctually","quaintly","quarrelsomely","queasily","questionably","questioningly","quicker","quickly","quietly","quirkily","quizzically","rapidly","rarely","readily","really","reassuringly","recklessly","regularly","reluctantly","repeatedly","reproachfully","restfully","righteously","rightfully","rigidly","roughly","rudely","sadly","safely","scarcely","scarily","searchingly","sedately","seemingly","seldom","selfishly","separately","seriously","shakily","sharply","sheepishly","shrilly","shyly","silently","sleepily","slowly","smoothly","softly","solemnly","solidly","sometimes","soon","speedily","stealthily","sternly","strictly","successfully","suddenly","surprisingly","suspiciously","sweetly","swiftly","sympathetically","tenderly","tensely","terribly","thankfully","thoroughly","thoughtfully","tightly","tomorrow","too","tremendously","triumphantly","truly","truthfully","ultimately","unabashedly","unaccountably","unbearably","unethically","unexpectedly","unfortunately","unimpressively","unnaturally","unnecessarily","upbeat","upliftingly","upright","upside-down","upward","upwardly","urgently","usefully","uselessly","usually","utterly","vacantly","vaguely","vainly","valiantly","vastly","verbally","very","viciously","victoriously","violently","vivaciously","voluntarily","warmly","weakly","wearily","well","wetly","wholly","wildly","willfully","wisely","woefully","wonderfully","worriedly","wrongly","yawningly","yearly","yearningly","yesterday","yieldingly","youthfully"],Ya=["after","although","and","as","because","before","but","consequently","even","finally","for","furthermore","hence","how","however","if","inasmuch","incidentally","indeed","instead","lest","likewise","meanwhile","nor","now","once","or","provided","since","so","supposing","than","that","though","till","unless","until","what","when","whenever","where","whereas","wherever","whether","which","while","who","whoever","whose","why","yet"],qa=["yuck","oh","phooey","blah","boo","whoa","yowza","huzzah","boohoo","fooey","geez","pfft","ew","ah","yum","brr","hm","yahoo","aha","woot","drat","gah","meh","psst","aw","ugh","yippee","eek","gee","bah","gadzooks","duh","ha","mmm","ouch","phew","ack","uh-huh","gosh","hmph","pish","zowie","er","ick","oof","um"],Za=["ATM","CD","SUV","TV","aardvark","abacus","abbey","abbreviation","abdomen","ability","abnormality","abolishment","abrogation","absence","abundance","academics","academy","accelerant","accelerator","accent","acceptance","access","accessory","accident","accommodation","accompanist","accomplishment","accord","accordance","accordion","account","accountability","accountant","accounting","accuracy","accusation","acetate","achievement","achiever","acid","acknowledgment","acorn","acoustics","acquaintance","acquisition","acre","acrylic","act","action","activation","activist","activity","actor","actress","acupuncture","ad","adaptation","adapter","addiction","addition","address","adjective","adjustment","admin","administration","administrator","admire","admission","adobe","adoption","adrenalin","adrenaline","adult","adulthood","advance","advancement","advantage","advent","adverb","advertisement","advertising","advice","adviser","advocacy","advocate","affair","affect","affidavit","affiliate","affinity","afoul","afterlife","aftermath","afternoon","aftershave","aftershock","afterthought","age","agency","agenda","agent","aggradation","aggression","aglet","agony","agreement","agriculture","aid","aide","aim","air","airbag","airbus","aircraft","airfare","airfield","airforce","airline","airmail","airman","airplane","airport","airship","airspace","alarm","alb","albatross","album","alcohol","alcove","alder","ale","alert","alfalfa","algebra","algorithm","alias","alibi","alien","allegation","allergist","alley","alliance","alligator","allocation","allowance","alloy","alluvium","almanac","almighty","almond","alpaca","alpenglow","alpenhorn","alpha","alphabet","altar","alteration","alternative","altitude","alto","aluminium","aluminum","amazement","amazon","ambassador","amber","ambience","ambiguity","ambition","ambulance","amendment","amenity","ammunition","amnesty","amount","amusement","anagram","analgesia","analog","analogue","analogy","analysis","analyst","analytics","anarchist","anarchy","anatomy","ancestor","anchovy","android","anesthesiologist","anesthesiology","angel","anger","angina","angle","angora","angstrom","anguish","animal","anime","anise","ankle","anklet","anniversary","announcement","annual","anorak","answer","ant","anteater","antecedent","antechamber","antelope","antennae","anterior","anthropology","antibody","anticipation","anticodon","antigen","antique","antiquity","antler","antling","anxiety","anybody","anyone","anything","anywhere","apartment","ape","aperitif","apology","app","apparatus","apparel","appeal","appearance","appellation","appendix","appetiser","appetite","appetizer","applause","apple","applewood","appliance","application","appointment","appreciation","apprehension","approach","appropriation","approval","apricot","apron","apse","aquarium","aquifer","arcade","arch","arch-rival","archaeologist","archaeology","archeology","archer","architect","architecture","archives","area","arena","argument","arithmetic","ark","arm","arm-rest","armadillo","armament","armchair","armoire","armor","armour","armpit","armrest","army","arrangement","array","arrest","arrival","arrogance","arrow","art","artery","arthur","artichoke","article","artifact","artificer","artist","ascend","ascent","ascot","ash","ashram","ashtray","aside","asparagus","aspect","asphalt","aspic","assassination","assault","assembly","assertion","assessment","asset","assignment","assist","assistance","assistant","associate","association","assumption","assurance","asterisk","astrakhan","astrolabe","astrologer","astrology","astronomy","asymmetry","atelier","atheist","athlete","athletics","atmosphere","atom","atrium","attachment","attack","attacker","attainment","attempt","attendance","attendant","attention","attenuation","attic","attitude","attorney","attraction","attribute","auction","audience","audit","auditorium","aunt","authentication","authenticity","author","authorisation","authority","authorization","auto","autoimmunity","automation","automaton","autumn","availability","avalanche","avenue","average","avocado","award","awareness","awe","axis","azimuth","baboon","babushka","baby","bachelor","back","back-up","backbone","backburn","backdrop","background","backpack","backup","backyard","bacon","bacterium","badge","badger","bafflement","bag","bagel","baggage","baggie","baggy","bagpipe","bail","bait","bake","baker","bakery","bakeware","balaclava","balalaika","balance","balcony","ball","ballet","balloon","balloonist","ballot","ballpark","bamboo","ban","banana","band","bandana","bandanna","bandolier","bandwidth","bangle","banjo","bank","bankbook","banker","banking","bankruptcy","banner","banquette","banyan","baobab","bar","barbecue","barbeque","barber","bargain","barge","baritone","barium","bark","barley","barn","barometer","barracks","barrage","barrel","barrier","barstool","bartender","base","baseball","baseboard","baseline","basement","basics","basil","basin","basis","basket","basketball","bass","bassinet","bassoon","bat","bath","bather","bathhouse","bathrobe","bathroom","bathtub","battalion","batter","battery","batting","battle","battleship","bay","bayou","beach","bead","beak","beam","bean","beancurd","beanie","beanstalk","bear","beard","beast","beastie","beat","beating","beauty","beck","bed","bedrock","bedroom","bee","beech","beef","beet","beetle","beggar","beginner","beginning","begonia","behalf","behavior","behaviour","behest","behold","being","belfry","belief","believer","bell","belligerency","bellows","belly","belt","bench","bend","beneficiary","benefit","beret","berry","best-seller","bestseller","bet","beverage","beyond","bias","bibliography","bicycle","bid","bidder","bidding","bidet","bifocals","bijou","bike","bikini","bill","billboard","billing","billion","bin","binoculars","biology","biopsy","biosphere","biplane","birch","bird","bird-watcher","birdbath","birdcage","birdhouse","birth","birthday","biscuit","bit","bite","bitten","bitter","blackberry","blackbird","blackboard","blackfish","blackness","bladder","blade","blame","blank","blanket","blast","blazer","blend","blessing","blight","blind","blinker","blister","blizzard","block","blocker","blog","blogger","blood","bloodflow","bloom","bloomer","blossom","blouse","blow","blowgun","blowhole","blueberry","blush","boar","board","boat","boatload","boatyard","bob","bobcat","body","bog","bolero","bolt","bond","bonding","bondsman","bone","bonfire","bongo","bonnet","bonsai","bonus","boogeyman","book","bookcase","bookend","booking","booklet","bookmark","boolean","boom","boon","boost","booster","boot","bootie","border","bore","borrower","borrowing","boss","botany","bother","bottle","bottling","bottom","bottom-line","boudoir","bough","boulder","boulevard","boundary","bouquet","bourgeoisie","bout","boutique","bow","bower","bowl","bowler","bowling","bowtie","box","boxer","boxspring","boy","boycott","boyfriend","boyhood","boysenberry","brace","bracelet","bracket","brain","brake","bran","branch","brand","brass","bratwurst","bread","breadcrumb","breadfruit","break","breakdown","breakfast","breakpoint","breakthrough","breastplate","breath","breeze","brewer","bribery","brick","bricklaying","bride","bridge","brief","briefing","briefly","brilliant","brink","brisket","broad","broadcast","broccoli","brochure","brocolli","broiler","broker","bronchitis","bronco","bronze","brooch","brood","brook","broom","brother","brother-in-law","brow","brownie","browser","browsing","brunch","brush","brushfire","brushing","bubble","buck","bucket","buckle","buckwheat","bud","buddy","budget","buffalo","buffer","buffet","bug","buggy","bugle","builder","building","bulb","bulk","bull","bull-fighter","bulldozer","bullet","bump","bumper","bun","bunch","bungalow","bunkhouse","burden","bureau","burglar","burial","burn","burn-out","burning","burrito","burro","burrow","burst","bus","bush","business","businessman","bust","bustle","butane","butcher","butler","butter","butterfly","button","buy","buyer","buying","buzz","buzzard","c-clamp","cabana","cabbage","cabin","cabinet","cable","caboose","cacao","cactus","caddy","cadet","cafe","caffeine","caftan","cage","cake","calcification","calculation","calculator","calculus","calendar","calf","caliber","calibre","calico","call","calm","calorie","camel","cameo","camera","camp","campaign","campaigning","campanile","camper","campus","can","canal","candelabra","candidacy","candidate","candle","candy","cane","cannibal","cannon","canoe","canon","canopy","cantaloupe","canteen","canvas","cap","capability","capacity","cape","caper","capital","capitalism","capitulation","capon","cappelletti","cappuccino","captain","caption","captor","car","carabao","caramel","caravan","carbohydrate","carbon","carboxyl","card","cardboard","cardigan","care","career","cargo","caribou","carload","carnation","carnival","carol","carotene","carp","carpenter","carpet","carpeting","carport","carriage","carrier","carrot","carry","cart","cartel","carter","cartilage","cartload","cartoon","cartridge","carving","cascade","case","casement","cash","cashew","cashier","casino","casket","cassava","casserole","cassock","cast","castanet","castle","casualty","cat","catacomb","catalogue","catalysis","catalyst","catamaran","catastrophe","catch","catcher","category","caterpillar","cathedral","cation","catsup","cattle","cauliflower","causal","cause","causeway","caution","cave","caviar","cayenne","ceiling","celebration","celebrity","celeriac","celery","cell","cellar","cello","celsius","cement","cemetery","cenotaph","census","cent","center","centimeter","centre","centurion","century","cephalopod","ceramic","ceramics","cereal","ceremony","certainty","certificate","certification","cesspool","chafe","chain","chainstay","chair","chairlift","chairman","chairperson","chaise","chalet","chalice","chalk","challenge","chamber","champagne","champion","championship","chance","chandelier","change","channel","chaos","chap","chapel","chaplain","chapter","character","characteristic","characterization","chard","charge","charger","charity","charlatan","charm","charset","chart","charter","chasm","chassis","chastity","chasuble","chateau","chatter","chauffeur","chauvinist","check","checkbook","checking","checkout","checkroom","cheddar","cheek","cheer","cheese","cheesecake","cheetah","chef","chem","chemical","chemistry","chemotaxis","cheque","cherry","chess","chest","chestnut","chick","chicken","chicory","chief","chiffonier","child","childbirth","childhood","chili","chill","chime","chimpanzee","chin","chinchilla","chino","chip","chipmunk","chit-chat","chivalry","chive","chives","chocolate","choice","choir","choker","cholesterol","choosing","chop","chops","chopstick","chopsticks","chord","chorus","chow","chowder","chrome","chromolithograph","chronicle","chronograph","chronometer","chrysalis","chub","chuck","church","churn","chutney","cicada","cigarette","cilantro","cinder","cinema","cinnamon","circadian","circle","circuit","circulation","circumference","circumstance","cirrus","citizen","citizenship","citron","citrus","city","civilian","civilisation","civilization","claim","clam","clamp","clan","clank","clapboard","clarification","clarinet","clarity","clasp","class","classic","classification","classmate","classroom","clause","clave","clavicle","clavier","claw","clay","cleaner","clearance","clearing","cleat","clef","cleft","clergyman","cleric","clerk","click","client","cliff","climate","climb","clinic","clip","clipboard","clipper","cloak","cloakroom","clock","clockwork","clogs","cloister","clone","close","closet","closing","closure","cloth","clothes","clothing","cloud","cloudburst","clove","clover","cloves","club","clue","cluster","clutch","co-producer","coach","coal","coalition","coast","coaster","coat","cob","cobbler","cobweb","cockpit","cockroach","cocktail","cocoa","coconut","cod","code","codepage","codling","codon","coevolution","cofactor","coffee","coffin","cohesion","cohort","coil","coin","coincidence","coinsurance","coke","cold","coleslaw","coliseum","collaboration","collagen","collapse","collar","collard","collateral","colleague","collection","collectivisation","collectivization","collector","college","collision","colloquy","colon","colonial","colonialism","colonisation","colonization","colony","color","colorlessness","colt","column","columnist","comb","combat","combination","combine","comeback","comedy","comestible","comfort","comfortable","comic","comics","comma","command","commander","commandment","comment","commerce","commercial","commission","commitment","committee","commodity","common","commonsense","commotion","communicant","communication","communion","communist","community","commuter","company","comparison","compass","compassion","compassionate","compensation","competence","competition","competitor","complaint","complement","completion","complex","complexity","compliance","complication","complicity","compliment","component","comportment","composer","composite","composition","compost","comprehension","compress","compromise","comptroller","compulsion","computer","comradeship","con","concentrate","concentration","concept","conception","concern","concert","conclusion","concrete","condition","conditioner","condominium","condor","conduct","conductor","cone","confectionery","conference","confidence","confidentiality","configuration","confirmation","conflict","conformation","confusion","conga","congo","congregation","congress","congressman","congressperson","conifer","connection","connotation","conscience","consciousness","consensus","consent","consequence","conservation","conservative","consideration","consignment","consist","consistency","console","consonant","conspiracy","conspirator","constant","constellation","constitution","constraint","construction","consul","consulate","consulting","consumer","consumption","contact","contagion","container","content","contention","contest","context","continent","contingency","continuity","contour","contract","contractor","contrail","contrary","contrast","contribution","contributor","control","controller","controversy","convection","convenience","convention","conversation","conversion","convert","convertible","conviction","cook","cookbook","cookie","cooking","cooperation","coordination","coordinator","cop","cop-out","cope","copper","copy","copying","copyright","copywriter","coral","cord","corduroy","core","cork","cormorant","corn","corner","cornerstone","cornet","cornflakes","cornmeal","corporal","corporation","corporatism","corps","corral","correspondence","correspondent","corridor","corruption","corsage","cosset","cost","costume","cot","cottage","cotton","couch","cougar","cough","council","councilman","councilor","councilperson","counsel","counseling","counselling","counsellor","counselor","count","counter","counter-force","counterpart","countess","country","countryside","county","couple","coupon","courage","course","court","courthouse","courtroom","cousin","covariate","cover","coverage","coverall","cow","cowbell","cowboy","coyote","crab","cradle","craft","craftsman","cranberry","crane","cranky","crate","cravat","craw","crawdad","crayfish","crayon","crazy","cream","creation","creative","creativity","creator","creature","creche","credential","credenza","credibility","credit","creditor","creek","crepe","crest","crew","crewman","crewmate","crewmember","crewmen","cria","crib","cribbage","cricket","cricketer","crime","criminal","crinoline","crisis","crisp","criteria","criterion","critic","criticism","crocodile","crocus","croissant","crook","crop","cross","cross-contamination","cross-stitch","croup","crow","crowd","crown","crude","cruelty","cruise","crumb","crunch","crusader","crush","crust","cry","crystal","crystallography","cub","cube","cuckoo","cucumber","cue","cuff-link","cuisine","cultivar","cultivator","culture","culvert","cummerbund","cup","cupboard","cupcake","cupola","curd","cure","curio","curiosity","curl","curler","currant","currency","current","curriculum","curry","curse","cursor","curtailment","curtain","curve","cushion","custard","custody","custom","customer","cut","cuticle","cutlet","cutover","cutting","cyclamen","cycle","cyclone","cyclooxygenase","cygnet","cylinder","cymbal","cynic","cyst","cytokine","cytoplasm","dad","daddy","daffodil","dagger","dahlia","daikon","daily","dairy","daisy","dam","damage","dame","dance","dancer","dancing","dandelion","danger","dare","dark","darkness","darn","dart","dash","dashboard","data","database","date","daughter","dawn","day","daybed","daylight","dead","deadline","deal","dealer","dealing","dearest","death","deathwatch","debate","debris","debt","debtor","decade","decadence","decency","decimal","decision","decision-making","deck","declaration","declination","decline","decoder","decongestant","decoration","decrease","decryption","dedication","deduce","deduction","deed","deep","deer","default","defeat","defendant","defender","defense","deficit","definition","deformation","degradation","degree","delay","deliberation","delight","delivery","demand","democracy","democrat","demur","den","denim","denominator","density","dentist","deodorant","department","departure","dependency","dependent","deployment","deposit","deposition","depot","depression","depressive","depth","deputy","derby","derivation","derivative","derrick","descendant","descent","description","desert","design","designation","designer","desire","desk","desktop","dessert","destination","destiny","destroyer","destruction","detail","detainee","detainment","detection","detective","detector","detention","determination","detour","devastation","developer","developing","development","developmental","deviance","deviation","device","devil","dew","dhow","diabetes","diadem","diagnosis","diagram","dial","dialect","dialogue","diam","diamond","diaper","diaphragm","diarist","diary","dibble","dickey","dictaphone","dictator","diction","dictionary","die","diesel","diet","difference","differential","difficulty","diffuse","dig","digestion","digestive","digger","digging","digit","dignity","dilapidation","dill","dilution","dime","dimension","dimple","diner","dinghy","dining","dinner","dinosaur","dioxide","dip","diploma","diplomacy","direction","directive","director","directory","dirndl","dirt","disability","disadvantage","disagreement","disappointment","disarmament","disaster","discharge","discipline","disclaimer","disclosure","disco","disconnection","discount","discourse","discovery","discrepancy","discretion","discrimination","discussion","disdain","disease","disembodiment","disengagement","disguise","disgust","dish","dishwasher","disk","disparity","dispatch","displacement","display","disposal","disposer","disposition","dispute","disregard","disruption","dissemination","dissonance","distance","distinction","distortion","distribution","distributor","district","divalent","divan","diver","diversity","divide","dividend","divider","divine","diving","division","divorce","doc","dock","doctor","doctorate","doctrine","document","documentary","documentation","doe","dog","dogsled","dogwood","doing","doll","dollar","dollop","dolman","dolor","dolphin","domain","dome","donation","donkey","donor","donut","door","doorbell","doorknob","doorpost","doorway","dory","dose","dot","double","doubling","doubt","doubter","dough","doughnut","down","downfall","downforce","downgrade","download","downstairs","downtown","downturn","dozen","draft","drag","dragon","dragonfly","dragonfruit","dragster","drain","drainage","drake","drama","dramaturge","drapes","draw","drawbridge","drawer","drawing","dream","dreamer","dredger","dress","dresser","dressing","drill","drink","drinking","drive","driver","driveway","driving","drizzle","dromedary","drop","drudgery","drug","drum","drummer","dryer","duck","duckling","dud","dude","due","duel","dueling","duffel","dugout","dulcimer","dumbwaiter","dump","dune","dungarees","dungeon","duplexer","duration","durian","dusk","dust","duster","duty","dwell","dwelling","dynamics","dynamite","dynamo","dynasty","dysfunction","e-book","e-mail","e-reader","eagle","eaglet","ear","eardrum","earmuffs","earnings","earplug","earring","earrings","earth","earthquake","earthworm","ease","easel","east","eating","eaves","eavesdropper","ecclesia","echidna","eclipse","ecliptic","ecology","economics","economy","ecosystem","ectoderm","ectodermal","ecumenist","eddy","edge","edger","edible","editing","edition","editor","editorial","education","eel","effacement","effect","effective","effectiveness","effector","efficacy","efficiency","effort","egg","egghead","eggnog","eggplant","ego","eicosanoid","ejector","elbow","elderberry","election","electricity","electrocardiogram","electronics","element","elephant","elevation","elevator","eleventh","elf","elicit","eligibility","elimination","elite","elixir","elk","ellipse","elm","elongation","elver","email","emanate","embarrassment","embassy","embellishment","embossing","embryo","emerald","emergence","emergency","emergent","emery","emission","emitter","emotion","emphasis","empire","employ","employee","employer","employment","empowerment","emu","enactment","encirclement","enclave","enclosure","encounter","encouragement","encyclopedia","end","endive","endoderm","endorsement","endothelium","endpoint","enemy","energy","enforcement","engagement","engine","engineer","engineering","enigma","enjoyment","enquiry","enrollment","enterprise","entertainment","enthusiasm","entirety","entity","entrance","entree","entrepreneur","entry","envelope","environment","envy","enzyme","epauliere","epee","ephemera","ephemeris","ephyra","epic","episode","epithelium","epoch","eponym","epoxy","equal","equality","equation","equinox","equipment","equity","equivalent","era","eraser","erosion","error","escalator","escape","espadrille","espalier","essay","essence","essential","establishment","estate","estimate","estrogen","estuary","eternity","ethernet","ethics","ethnicity","ethyl","euphonium","eurocentrism","evaluation","evaluator","evaporation","eve","evening","evening-wear","event","everybody","everyone","everything","eviction","evidence","evil","evocation","evolution","ex-husband","ex-wife","exaggeration","exam","examination","examiner","example","exasperation","excellence","exception","excerpt","excess","exchange","excitement","exclamation","excursion","excuse","execution","executive","executor","exercise","exhaust","exhaustion","exhibit","exhibition","exile","existence","exit","exocrine","expansion","expansionism","expectancy","expectation","expedition","expense","experience","experiment","experimentation","expert","expertise","explanation","exploration","explorer","export","expose","exposition","exposure","expression","extension","extent","exterior","external","extinction","extreme","extremist","eye","eyeball","eyebrow","eyebrows","eyeglasses","eyelash","eyelashes","eyelid","eyelids","eyeliner","eyestrain","eyrie","fabric","face","facelift","facet","facility","facsimile","fact","factor","factory","faculty","fahrenheit","fail","failure","fairness","fairy","faith","faithful","fall","fallacy","falling-out","fame","familiar","familiarity","family","fan","fang","fanlight","fanny-pack","fantasy","farm","farmer","farming","farmland","farrow","fascia","fashion","fat","fate","father","father-in-law","fatigue","fatigues","faucet","fault","fav","fava","favor","favorite","fawn","fax","fear","feast","feather","feature","fedelini","federation","fedora","fee","feed","feedback","feeding","feel","feeling","fellow","felony","female","fen","fence","fencing","fender","feng","fennel","ferret","ferry","ferryboat","fertilizer","festival","fetus","few","fiber","fiberglass","fibre","fibroblast","fibrosis","ficlet","fiction","fiddle","field","fiery","fiesta","fifth","fig","fight","fighter","figure","figurine","file","filing","fill","fillet","filly","film","filter","filth","final","finance","financing","finding","fine","finer","finger","fingerling","fingernail","finish","finisher","fir","fire","fireman","fireplace","firewall","firm","first","fish","fishbone","fisherman","fishery","fishing","fishmonger","fishnet","fit","fitness","fix","fixture","flag","flair","flame","flan","flanker","flare","flash","flat","flatboat","flavor","flax","fleck","fledgling","fleece","flesh","flexibility","flick","flicker","flight","flint","flintlock","flip-flops","flock","flood","floodplain","floor","floozie","flour","flow","flower","flu","flugelhorn","fluke","flume","flung","flute","fly","flytrap","foal","foam","fob","focus","fog","fold","folder","folk","folklore","follower","following","fondue","font","food","foodstuffs","fool","foot","footage","football","footnote","footprint","footrest","footstep","footstool","footwear","forage","forager","foray","force","ford","forearm","forebear","forecast","forehead","foreigner","forelimb","forest","forestry","forever","forgery","fork","form","formal","formamide","format","formation","former","formicarium","formula","fort","forte","fortnight","fortress","fortune","forum","foundation","founder","founding","fountain","fourths","fowl","fox","foxglove","fraction","fragrance","frame","framework","fratricide","fraud","fraudster","freak","freckle","freedom","freelance","freezer","freezing","freight","freighter","frenzy","freon","frequency","fresco","friction","fridge","friend","friendship","fries","frigate","fright","fringe","fritter","frock","frog","front","frontier","frost","frosting","frown","fruit","frustration","fry","fuel","fugato","fulfillment","full","fun","function","functionality","fund","funding","fundraising","fur","furnace","furniture","fusarium","futon","future","gadget","gaffe","gaffer","gain","gaiters","gale","gall-bladder","gallery","galley","gallon","galoshes","gambling","game","gamebird","gaming","gamma-ray","gander","gang","gap","garage","garb","garbage","garden","garlic","garment","garter","gas","gasket","gasoline","gasp","gastronomy","gastropod","gate","gateway","gather","gathering","gator","gauge","gauntlet","gavel","gazebo","gazelle","gear","gearshift","geek","gel","gelatin","gelding","gem","gemsbok","gender","gene","general","generation","generator","generosity","genetics","genie","genius","genre","gentleman","geography","geology","geometry","geranium","gerbil","gesture","geyser","gherkin","ghost","giant","gift","gig","gigantism","giggle","ginger","gingerbread","ginseng","giraffe","girdle","girl","girlfriend","glacier","gladiolus","glance","gland","glass","glasses","glee","glen","glider","gliding","glimpse","globe","glockenspiel","gloom","glory","glove","glow","glucose","glue","glut","glutamate","gnat","gnu","go-kart","goal","goat","gobbler","god","goddess","godfather","godmother","godparent","goggles","going","gold","goldfish","golf","gondola","gong","good","good-bye","goodbye","goodie","goodness","goodnight","goodwill","goose","gopher","gorilla","gosling","gossip","governance","government","governor","gown","grab-bag","grace","grade","gradient","graduate","graduation","graffiti","graft","grain","gram","grammar","gran","grand","grandchild","granddaughter","grandfather","grandma","grandmom","grandmother","grandpa","grandparent","grandson","granny","granola","grant","grape","grapefruit","graph","graphic","grasp","grass","grasshopper","grassland","gratitude","gravel","gravitas","gravity","gravy","gray","grease","great-grandfather","great-grandmother","greatness","greed","green","greenhouse","greens","grenade","grey","grid","grief","grill","grin","grip","gripper","grit","grocery","ground","group","grouper","grouse","grove","growth","grub","guacamole","guarantee","guard","guava","guerrilla","guess","guest","guestbook","guidance","guide","guideline","guilder","guilt","guilty","guinea","guitar","guitarist","gum","gumshoe","gun","gunpowder","gutter","guy","gym","gymnast","gymnastics","gynaecology","gyro","habit","habitat","hacienda","hacksaw","hackwork","hail","hair","haircut","hake","half","half-brother","half-sister","halibut","hall","halloween","hallway","halt","ham","hamburger","hammer","hammock","hamster","hand","hand-holding","handball","handful","handgun","handicap","handle","handlebar","handmaiden","handover","handrail","handsaw","hanger","happening","happiness","harald","harbor","harbour","hard-hat","hardboard","hardcover","hardening","hardhat","hardship","hardware","hare","harm","harmonica","harmonise","harmonize","harmony","harp","harpooner","harpsichord","harvest","harvester","hash","hashtag","hassock","haste","hat","hatbox","hatchet","hatchling","hate","hatred","haunt","haven","haversack","havoc","hawk","hay","haze","hazel","hazelnut","head","headache","headlight","headline","headphones","headquarters","headrest","health","health-care","hearing","hearsay","heart","heart-throb","heartache","heartbeat","hearth","hearthside","heartwood","heat","heater","heating","heaven","heavy","hectare","hedge","hedgehog","heel","heifer","height","heir","heirloom","helicopter","helium","hellcat","hello","helmet","helo","help","hemisphere","hemp","hen","hepatitis","herb","herbs","heritage","hermit","hero","heroine","heron","herring","hesitation","hexagon","heyday","hiccups","hide","hierarchy","high","high-rise","highland","highlight","highway","hike","hiking","hill","hint","hip","hippodrome","hippopotamus","hire","hiring","historian","history","hit","hive","hobbit","hobby","hockey","hog","hold","holder","hole","holiday","home","homeland","homeownership","hometown","homework","homogenate","homonym","honesty","honey","honeybee","honeydew","honor","honoree","hood","hoof","hook","hop","hope","hops","horde","horizon","hormone","horn","hornet","horror","horse","horseradish","horst","hose","hosiery","hospice","hospital","hospitalisation","hospitality","hospitalization","host","hostel","hostess","hotdog","hotel","hound","hour","hourglass","house","houseboat","household","housewife","housework","housing","hovel","hovercraft","howard","howitzer","hub","hubcap","hubris","hug","hugger","hull","human","humanity","humidity","hummus","humor","humour","hundred","hunger","hunt","hunter","hunting","hurdle","hurdler","hurricane","hurry","hurt","husband","hut","hutch","hyacinth","hybridisation","hybridization","hydrant","hydraulics","hydrocarb","hydrocarbon","hydrofoil","hydrogen","hydrolyse","hydrolysis","hydrolyze","hydroxyl","hyena","hygienic","hype","hyphenation","hypochondria","hypothermia","hypothesis","ice","ice-cream","iceberg","icebreaker","icecream","icicle","icing","icon","icy","id","idea","ideal","identification","identity","ideology","idiom","igloo","ignorance","ignorant","ikebana","illiteracy","illness","illusion","illustration","image","imagination","imbalance","imitation","immigrant","immigration","immortal","impact","impairment","impala","impediment","implement","implementation","implication","import","importance","impostor","impress","impression","imprisonment","impropriety","improvement","impudence","impulse","in-joke","in-laws","inability","inauguration","inbox","incandescence","incarnation","incense","incentive","inch","incidence","incident","incision","inclusion","income","incompetence","inconvenience","increase","incubation","independence","independent","index","indication","indicator","indigence","individual","industrialisation","industrialization","industry","inequality","inevitable","infancy","infant","infarction","infection","infiltration","infinite","infix","inflammation","inflation","influence","influx","info","information","infrastructure","infusion","inglenook","ingrate","ingredient","inhabitant","inheritance","inhibition","inhibitor","initial","initialise","initialize","initiative","injunction","injury","injustice","ink","inlay","inn","innervation","innocence","innocent","innovation","input","inquiry","inscription","insect","insectarium","insert","inside","insight","insolence","insomnia","inspection","inspector","inspiration","installation","instance","instant","instinct","institute","institution","instruction","instructor","instrument","instrumentalist","instrumentation","insulation","insurance","insurgence","insurrection","integer","integral","integration","integrity","intellect","intelligence","intensity","intent","intention","intentionality","interaction","interchange","interconnection","interest","interface","interferometer","interior","interject","interloper","internet","interpretation","interpreter","interval","intervenor","intervention","interview","interviewer","intestine","introduction","intuition","invader","invasion","invention","inventor","inventory","inverse","inversion","investigation","investigator","investment","investor","invitation","invite","invoice","involvement","iridescence","iris","iron","ironclad","irony","irrigation","ischemia","island","isogloss","isolation","issue","item","itinerary","ivory","jack","jackal","jacket","jackfruit","jade","jaguar","jail","jailhouse","jalapeño","jam","jar","jasmine","jaw","jazz","jealousy","jeans","jeep","jelly","jellybeans","jellyfish","jet","jewel","jeweller","jewellery","jewelry","jicama","jiffy","job","jockey","jodhpurs","joey","jogging","joint","joke","jot","journal","journalism","journalist","journey","joy","judge","judgment","judo","jug","juggernaut","juice","julienne","jumbo","jump","jumper","jumpsuit","jungle","junior","junk","junker","junket","jury","justice","justification","jute","kale","kangaroo","karate","kayak","kazoo","kebab","keep","keeper","kendo","kennel","ketch","ketchup","kettle","kettledrum","key","keyboard","keyboarding","keystone","kick","kick-off","kid","kidney","kielbasa","kill","killer","killing","kilogram","kilometer","kilt","kimono","kinase","kind","kindness","king","kingdom","kingfish","kiosk","kiss","kit","kitchen","kite","kitsch","kitten","kitty","kiwi","knee","kneejerk","knickers","knife","knife-edge","knight","knitting","knock","knot","know-how","knowledge","knuckle","koala","kohlrabi","lab","label","labor","laboratory","laborer","labour","labourer","lace","lack","lacquerware","lad","ladder","ladle","lady","ladybug","lag","lake","lamb","lambkin","lament","lamp","lanai","land","landform","landing","landmine","landscape","lane","language","lantern","lap","laparoscope","lapdog","laptop","larch","lard","larder","lark","larva","laryngitis","lasagna","lashes","last","latency","latex","lathe","latitude","latte","latter","laugh","laughter","laundry","lava","law","lawmaker","lawn","lawsuit","lawyer","lay","layer","layout","lead","leader","leadership","leading","leaf","league","leaker","leap","learning","leash","leather","leave","leaver","lecture","leek","leeway","left","leg","legacy","legal","legend","legging","legislation","legislator","legislature","legitimacy","legume","leisure","lemon","lemonade","lemur","lender","lending","length","lens","lentil","leopard","leprosy","leptocephalus","lesson","letter","lettuce","level","lever","leverage","leveret","liability","liar","liberty","library","licence","license","licensing","licorice","lid","lie","lieu","lieutenant","life","lifestyle","lifetime","lift","ligand","light","lighting","lightning","lightscreen","ligula","likelihood","likeness","lilac","lily","limb","lime","limestone","limit","limitation","limo","line","linen","liner","linguist","linguistics","lining","link","linkage","linseed","lion","lip","lipid","lipoprotein","lipstick","liquid","liquidity","liquor","list","listening","listing","literate","literature","litigation","litmus","litter","littleneck","liver","livestock","living","lizard","llama","load","loading","loaf","loafer","loan","lobby","lobotomy","lobster","local","locality","location","lock","locker","locket","locomotive","locust","lode","loft","log","loggia","logic","login","logistics","logo","loincloth","lollipop","loneliness","longboat","longitude","look","lookout","loop","loophole","loquat","lord","loss","lot","lotion","lottery","lounge","louse","lout","love","lover","lox","loyalty","luck","luggage","lumber","lumberman","lunch","luncheonette","lunchmeat","lunchroom","lung","lunge","lute","luxury","lychee","lycra","lye","lymphocyte","lynx","lyocell","lyre","lyrics","lysine","mRNA","macadamia","macaroni","macaroon","macaw","machine","machinery","macrame","macro","macrofauna","madam","maelstrom","maestro","magazine","maggot","magic","magnet","magnitude","maid","maiden","mail","mailbox","mailer","mailing","mailman","main","mainland","mainstream","maintainer","maintenance","maize","major","major-league","majority","makeover","maker","makeup","making","male","malice","mall","mallard","mallet","malnutrition","mama","mambo","mammoth","man","manacle","management","manager","manatee","mandarin","mandate","mandolin","mangle","mango","mangrove","manhunt","maniac","manicure","manifestation","manipulation","mankind","manner","manor","mansard","manservant","mansion","mantel","mantle","mantua","manufacturer","manufacturing","many","map","maple","mapping","maracas","marathon","marble","march","mare","margarine","margin","mariachi","marimba","marines","marionberry","mark","marker","market","marketer","marketing","marketplace","marksman","markup","marmalade","marriage","marsh","marshland","marshmallow","marten","marxism","mascara","mask","masonry","mass","massage","mast","masterpiece","mastication","mastoid","mat","match","matchmaker","mate","material","maternity","math","mathematics","matrix","matter","mattock","mattress","max","maximum","maybe","mayonnaise","mayor","meadow","meal","mean","meander","meaning","means","meantime","measles","measure","measurement","meat","meatball","meatloaf","mecca","mechanic","mechanism","med","medal","media","median","medication","medicine","medium","meet","meeting","melatonin","melody","melon","member","membership","membrane","meme","memo","memorial","memory","men","menopause","menorah","mention","mentor","menu","merchandise","merchant","mercury","meridian","meringue","merit","mesenchyme","mess","message","messenger","messy","metabolite","metal","metallurgist","metaphor","meteor","meteorology","meter","methane","method","methodology","metric","metro","metronome","mezzanine","microlending","micronutrient","microphone","microwave","mid-course","midden","middle","middleman","midline","midnight","midwife","might","migrant","migration","mile","mileage","milepost","milestone","military","milk","milkshake","mill","millennium","millet","millimeter","million","millisecond","millstone","mime","mimosa","min","mincemeat","mind","mine","mineral","mineshaft","mini","mini-skirt","minibus","minimalism","minimum","mining","minion","minister","mink","minnow","minor","minor-league","minority","mint","minute","miracle","mirror","miscommunication","misfit","misnomer","misplacement","misreading","misrepresentation","miss","missile","mission","mist","mistake","mister","misunderstand","miter","mitten","mix","mixer","mixture","moai","moat","mob","mobile","mobility","mobster","moccasins","mocha","mochi","mode","model","modeling","modem","modernist","modernity","modification","molar","molasses","molding","mole","molecule","mom","moment","monastery","monasticism","money","monger","monitor","monitoring","monk","monkey","monocle","monopoly","monotheism","monsoon","monster","month","monument","mood","moody","moon","moonlight","moonscape","moose","mop","morale","morbid","morbidity","morning","morphology","morsel","mortal","mortality","mortgage","mortise","mosque","mosquito","most","motel","moth","mother","mother-in-law","motion","motivation","motive","motor","motorboat","motorcar","motorcycle","mound","mountain","mouse","mouser","mousse","moustache","mouth","mouton","movement","mover","movie","mower","mozzarella","mud","muffin","mug","mukluk","mule","multimedia","muscat","muscatel","muscle","musculature","museum","mushroom","music","music-box","music-making","musician","muskrat","mussel","mustache","mustard","mutation","mutt","mutton","mycoplasma","mystery","myth","mythology","nail","name","naming","nanoparticle","napkin","narrative","nasal","nation","nationality","native","naturalisation","nature","navigation","necessity","neck","necklace","necktie","nectar","nectarine","need","needle","neglect","negligee","negotiation","neighbor","neighborhood","neighbour","neighbourhood","neologism","neon","neonate","nephew","nerve","nest","nestling","nestmate","net","netball","netbook","netsuke","network","networking","neurobiologist","neuron","neuropathologist","neuropsychiatry","news","newsletter","newspaper","newsprint","newsstand","nexus","nibble","nicety","niche","nick","nickel","nickname","niece","night","nightclub","nightgown","nightingale","nightlife","nightlight","nightmare","ninja","nit","nitrogen","nobody","nod","node","noir","noise","nonbeliever","nonconformist","nondisclosure","nonsense","noodle","noodles","noon","norm","normal","normalisation","normalization","north","nose","notation","note","notebook","notepad","nothing","notice","notion","notoriety","nougat","noun","nourishment","novel","nucleotidase","nucleotide","nudge","nuke","number","numeracy","numeric","numismatist","nun","nurse","nursery","nursing","nurture","nut","nutmeg","nutrient","nutrition","nylon","oak","oar","oasis","oat","oatmeal","oats","obedience","obesity","obi","object","objection","objective","obligation","oboe","observation","observatory","obsession","obsidian","obstacle","occasion","occupation","occurrence","ocean","ocelot","octagon","octave","octavo","octet","octopus","odometer","odyssey","oeuvre","off-ramp","offence","offense","offer","offering","office","officer","official","offset","oil","okra","oldie","oleo","olive","omega","omelet","omission","omnivore","oncology","onion","online","onset","opening","opera","operating","operation","operator","ophthalmologist","opinion","opossum","opponent","opportunist","opportunity","opposite","opposition","optimal","optimisation","optimist","optimization","option","orange","orangutan","orator","orchard","orchestra","orchid","order","ordinary","ordination","ore","oregano","organ","organisation","organising","organization","organizing","orient","orientation","origin","original","originality","ornament","osmosis","osprey","ostrich","other","otter","ottoman","ounce","outback","outcome","outfielder","outfit","outhouse","outlaw","outlay","outlet","outline","outlook","output","outrage","outrigger","outrun","outset","outside","oval","ovary","oven","overcharge","overclocking","overcoat","overexertion","overflight","overhead","overheard","overload","overnighter","overshoot","oversight","overview","overweight","owl","owner","ownership","ox","oxford","oxygen","oyster","ozone","pace","pacemaker","pack","package","packaging","packet","pad","paddle","paddock","pagan","page","pagoda","pail","pain","paint","painter","painting","paintwork","pair","pajamas","palace","palate","palm","pamphlet","pan","pancake","pancreas","panda","panel","panic","pannier","panpipe","panther","pantologist","pantology","pantry","pants","pantsuit","pantyhose","papa","papaya","paper","paperback","paperwork","parable","parachute","parade","paradise","paragraph","parallelogram","paramecium","paramedic","parameter","paranoia","parcel","parchment","pard","pardon","parent","parenthesis","parenting","park","parka","parking","parliament","parole","parrot","parser","parsley","parsnip","part","participant","participation","particle","particular","partner","partnership","partridge","party","pass","passage","passbook","passenger","passing","passion","passive","passport","password","past","pasta","paste","pastor","pastoralist","pastry","pasture","pat","patch","pate","patent","patentee","path","pathogenesis","pathology","pathway","patience","patient","patina","patio","patriarch","patrimony","patriot","patrol","patroller","patrolling","patron","pattern","patty","pattypan","pause","pavement","pavilion","paw","pawnshop","pay","payee","payment","payoff","pea","peace","peach","peacoat","peacock","peak","peanut","pear","pearl","peasant","pecan","pedal","peek","peen","peer","peer-to-peer","pegboard","pelican","pelt","pen","penalty","pence","pencil","pendant","pendulum","penguin","penicillin","peninsula","pennant","penny","pension","pentagon","peony","people","pepper","pepperoni","percent","percentage","perception","perch","perennial","perfection","performance","perfume","period","periodical","peripheral","permafrost","permission","permit","perp","perpendicular","persimmon","person","personal","personality","personnel","perspective","pest","pet","petal","petition","petitioner","petticoat","pew","pharmacist","pharmacopoeia","phase","pheasant","phenomenon","phenotype","pheromone","philanthropy","philosopher","philosophy","phone","phosphate","photo","photodiode","photograph","photographer","photography","photoreceptor","phrase","phrasing","physical","physics","physiology","pianist","piano","piccolo","pick","pickax","pickaxe","picket","pickle","pickup","picnic","picture","picturesque","pie","piece","pier","piety","pig","pigeon","piglet","pigpen","pigsty","pike","pilaf","pile","pilgrim","pilgrimage","pill","pillar","pillbox","pillow","pilot","pimple","pin","pinafore","pince-nez","pine","pineapple","pinecone","ping","pinkie","pinot","pinstripe","pint","pinto","pinworm","pioneer","pipe","pipeline","piracy","pirate","pit","pita","pitch","pitcher","pitching","pith","pizza","place","placebo","placement","placode","plagiarism","plain","plaintiff","plan","plane","planet","planning","plant","plantation","planter","planula","plaster","plasterboard","plastic","plate","platelet","platform","platinum","platter","platypus","play","player","playground","playroom","playwright","plea","pleasure","pleat","pledge","plenty","plier","pliers","plight","plot","plough","plover","plow","plowman","plug","plugin","plum","plumber","plume","plunger","plywood","pneumonia","pocket","pocket-watch","pocketbook","pod","podcast","poem","poet","poetry","poignance","point","poison","poisoning","poker","polarisation","polarization","pole","polenta","police","policeman","policy","polish","politician","politics","poll","polliwog","pollutant","pollution","polo","polyester","polyp","pomegranate","pomelo","pompom","poncho","pond","pony","pool","poor","pop","popcorn","poppy","popsicle","popularity","population","populist","porcelain","porch","porcupine","pork","porpoise","port","porter","portfolio","porthole","portion","portrait","position","possession","possibility","possible","post","postage","postbox","poster","posterior","postfix","pot","potato","potential","pottery","potty","pouch","poultry","pound","pounding","poverty","powder","power","practice","practitioner","prairie","praise","pray","prayer","precedence","precedent","precipitation","precision","predecessor","preface","preference","prefix","pregnancy","prejudice","prelude","premeditation","premier","premise","premium","preoccupation","preparation","prescription","presence","present","presentation","preservation","preserves","presidency","president","press","pressroom","pressure","pressurisation","pressurization","prestige","presume","pretzel","prevalence","prevention","prey","price","pricing","pride","priest","priesthood","primary","primate","prince","princess","principal","principle","print","printer","printing","prior","priority","prison","prisoner","privacy","private","privilege","prize","prizefight","probability","probation","probe","problem","procedure","proceedings","process","processing","processor","proctor","procurement","produce","producer","product","production","productivity","profession","professional","professor","profile","profit","progenitor","program","programme","programming","progress","progression","prohibition","project","proliferation","promenade","promise","promotion","prompt","pronoun","pronunciation","proof","proof-reader","propane","property","prophet","proponent","proportion","proposal","proposition","proprietor","prose","prosecution","prosecutor","prospect","prosperity","prostacyclin","prostanoid","prostrate","protection","protein","protest","protocol","providence","provider","province","provision","prow","proximal","proximity","prune","pruner","pseudocode","pseudoscience","psychiatrist","psychoanalyst","psychologist","psychology","ptarmigan","pub","public","publication","publicity","publisher","publishing","pudding","puddle","puffin","pug","puggle","pulley","pulse","puma","pump","pumpernickel","pumpkin","pumpkinseed","pun","punch","punctuation","punishment","pup","pupa","pupil","puppet","puppy","purchase","puritan","purity","purpose","purr","purse","pursuit","push","pusher","put","puzzle","pyramid","pyridine","quadrant","quail","qualification","quality","quantity","quart","quarter","quartet","quartz","queen","query","quest","question","questioner","questionnaire","quiche","quicksand","quiet","quill","quilt","quince","quinoa","quit","quiver","quota","quotation","quote","rabbi","rabbit","raccoon","race","racer","racing","rack","radar","radiator","radio","radiosonde","radish","raffle","raft","rag","rage","raid","rail","railing","railroad","railway","raiment","rain","rainbow","raincoat","rainmaker","rainstorm","rainy","raise","raisin","rake","rally","ram","rambler","ramen","ramie","ranch","rancher","randomisation","randomization","range","ranger","rank","rap","raspberry","rat","rate","ratepayer","rating","ratio","rationale","rations","raven","ravioli","rawhide","ray","rayon","razor","reach","reactant","reaction","read","reader","readiness","reading","real","reality","realization","realm","reamer","rear","reason","reasoning","rebel","rebellion","reboot","recall","recapitulation","receipt","receiver","reception","receptor","recess","recession","recipe","recipient","reciprocity","reclamation","recliner","recognition","recollection","recommendation","reconsideration","record","recorder","recording","recovery","recreation","recruit","rectangle","redesign","redhead","redirect","rediscovery","reduction","reef","refectory","reference","referendum","reflection","reform","refreshments","refrigerator","refuge","refund","refusal","refuse","regard","regime","region","regionalism","register","registration","registry","regret","regulation","regulator","rehospitalisation","rehospitalization","reindeer","reinscription","reject","relation","relationship","relative","relaxation","relay","release","reliability","relief","religion","relish","reluctance","remains","remark","reminder","remnant","remote","removal","renaissance","rent","reorganisation","reorganization","repair","reparation","repayment","repeat","replacement","replica","replication","reply","report","reporter","reporting","repository","representation","representative","reprocessing","republic","republican","reputation","request","requirement","resale","rescue","research","researcher","resemblance","reservation","reserve","reservoir","reset","residence","resident","residue","resist","resistance","resolution","resolve","resort","resource","respect","respite","response","responsibility","rest","restaurant","restoration","restriction","restroom","restructuring","result","resume","retailer","retention","rethinking","retina","retirement","retouching","retreat","retrospect","retrospective","retrospectivity","return","reunion","revascularisation","revascularization","reveal","revelation","revenant","revenge","revenue","reversal","reverse","review","revitalisation","revitalization","revival","revolution","revolver","reward","rhetoric","rheumatism","rhinoceros","rhubarb","rhyme","rhythm","rib","ribbon","rice","riddle","ride","rider","ridge","riding","rifle","right","rim","ring","ringworm","riot","rip","ripple","rise","riser","risk","rite","ritual","river","riverbed","rivulet","road","roadway","roar","roast","robe","robin","robot","robotics","rock","rocker","rocket","rocket-ship","rod","role","roll","roller","romaine","romance","roof","room","roommate","rooster","root","rope","rose","rosemary","roster","rostrum","rotation","round","roundabout","route","router","routine","row","rowboat","rowing","rubber","rubbish","rubric","ruby","ruckus","rudiment","ruffle","rug","rugby","ruin","rule","ruler","ruling","rumor","run","runaway","runner","running","runway","rush","rust","rutabaga","rye","sabre","sack","saddle","sadness","safari","safe","safeguard","safety","saffron","sage","sail","sailboat","sailing","sailor","saint","sake","salad","salami","salary","sale","salesman","salmon","salon","saloon","salsa","salt","salute","samovar","sampan","sample","samurai","sanction","sanctity","sanctuary","sand","sandal","sandbar","sandpaper","sandwich","sanity","sardine","sari","sarong","sash","satellite","satin","satire","satisfaction","sauce","saucer","sauerkraut","sausage","savage","savannah","saving","savings","savior","saviour","savory","saw","saxophone","scaffold","scale","scallion","scallops","scalp","scam","scanner","scarecrow","scarf","scarification","scenario","scene","scenery","scent","schedule","scheduling","schema","scheme","schnitzel","scholar","scholarship","school","schoolhouse","schooner","science","scientist","scimitar","scissors","scooter","scope","score","scorn","scorpion","scotch","scout","scow","scrambled","scrap","scraper","scratch","screamer","screen","screening","screenwriting","screw","screw-up","screwdriver","scrim","scrip","script","scripture","scrutiny","sculpting","sculptural","sculpture","sea","seabass","seafood","seagull","seal","seaplane","search","seashore","seaside","season","seat","seaweed","second","secrecy","secret","secretariat","secretary","secretion","section","sectional","sector","security","sediment","seed","seeder","seeker","seep","segment","seizure","selection","self","self-confidence","self-control","self-esteem","seller","selling","semantics","semester","semicircle","semicolon","semiconductor","seminar","senate","senator","sender","senior","sense","sensibility","sensitive","sensitivity","sensor","sentence","sentencing","sentiment","sepal","separation","septicaemia","sequel","sequence","serial","series","sermon","serum","serval","servant","server","service","servitude","sesame","session","set","setback","setting","settlement","settler","severity","sewer","shack","shackle","shade","shadow","shadowbox","shakedown","shaker","shallot","shallows","shame","shampoo","shanty","shape","share","shareholder","shark","shaw","shawl","shear","shearling","sheath","shed","sheep","sheet","shelf","shell","shelter","sherbet","sherry","shield","shift","shin","shine","shingle","ship","shipper","shipping","shipyard","shirt","shirtdress","shoat","shock","shoe","shoe-horn","shoehorn","shoelace","shoemaker","shoes","shoestring","shofar","shoot","shootdown","shop","shopper","shopping","shore","shoreline","short","shortage","shorts","shortwave","shot","shoulder","shout","shovel","show","show-stopper","shower","shred","shrimp","shrine","shutdown","sibling","sick","sickness","side","sideboard","sideburns","sidecar","sidestream","sidewalk","siding","siege","sigh","sight","sightseeing","sign","signal","signature","signet","significance","signify","signup","silence","silica","silicon","silk","silkworm","sill","silly","silo","silver","similarity","simple","simplicity","simplification","simvastatin","sin","singer","singing","singular","sink","sinuosity","sip","sir","sister","sister-in-law","sitar","site","situation","size","skate","skating","skean","skeleton","ski","skiing","skill","skin","skirt","skull","skullcap","skullduggery","skunk","sky","skylight","skyline","skyscraper","skywalk","slang","slapstick","slash","slate","slaw","sled","sledge","sleep","sleepiness","sleeping","sleet","sleuth","slice","slide","slider","slime","slip","slipper","slippers","slope","slot","sloth","slump","smell","smelting","smile","smith","smock","smog","smoke","smoking","smolt","smuggling","snack","snail","snake","snakebite","snap","snarl","sneaker","sneakers","sneeze","sniffle","snob","snorer","snow","snowboarding","snowflake","snowman","snowmobiling","snowplow","snowstorm","snowsuit","snuck","snug","snuggle","soap","soccer","socialism","socialist","society","sociology","sock","socks","soda","sofa","softball","softdrink","softening","software","soil","soldier","sole","solicitation","solicitor","solidarity","solidity","soliloquy","solitaire","solution","solvency","sombrero","somebody","someone","someplace","somersault","something","somewhere","son","sonar","sonata","song","songbird","sonnet","soot","sophomore","soprano","sorbet","sorghum","sorrel","sorrow","sort","soul","soulmate","sound","soundness","soup","source","sourwood","sousaphone","south","southeast","souvenir","sovereignty","sow","soy","soybean","space","spacing","spaghetti","span","spandex","sparerib","spark","sparrow","spasm","spat","spatula","spawn","speaker","speakerphone","speaking","spear","spec","special","specialist","specialty","species","specification","spectacle","spectacles","spectrograph","spectrum","speculation","speech","speed","speedboat","spell","spelling","spelt","spending","sphere","sphynx","spice","spider","spiderling","spike","spill","spinach","spine","spiral","spirit","spiritual","spirituality","spit","spite","spleen","splendor","split","spokesman","spokeswoman","sponge","sponsor","sponsorship","spool","spoon","spork","sport","sportsman","spot","spotlight","spouse","sprag","sprat","spray","spread","spreadsheet","spree","spring","sprinkles","sprinter","sprout","spruce","spud","spume","spur","spy","spyglass","square","squash","squatter","squeegee","squid","squirrel","stab","stability","stable","stack","stacking","stadium","staff","stag","stage","stain","stair","staircase","stake","stalk","stall","stallion","stamen","stamina","stamp","stance","stand","standard","standardisation","standardization","standing","standoff","standpoint","star","starboard","start","starter","state","statement","statin","station","station-wagon","statistic","statistics","statue","status","statute","stay","steak","stealth","steam","steamroller","steel","steeple","stem","stench","stencil","step","step-aunt","step-brother","step-daughter","step-father","step-grandfather","step-grandmother","step-mother","step-sister","step-son","step-uncle","stepdaughter","stepmother","stepping-stone","stepson","stereo","stew","steward","stick","sticker","stiletto","still","stimulation","stimulus","sting","stinger","stir-fry","stitch","stitcher","stock","stock-in-trade","stockings","stole","stomach","stone","stonework","stool","stop","stopsign","stopwatch","storage","store","storey","storm","story","story-telling","storyboard","stot","stove","strait","strand","stranger","strap","strategy","straw","strawberry","strawman","stream","street","streetcar","strength","stress","stretch","strife","strike","string","strip","stripe","strobe","structure","strudel","struggle","stucco","stud","student","studio","study","stuff","stumbling","stump","stupidity","sturgeon","sty","style","styling","stylus","sub","subcomponent","subconscious","subcontractor","subexpression","subgroup","subject","submarine","submitter","subprime","subroutine","subscription","subsection","subset","subsidence","subsidiary","subsidy","substance","substitution","subtitle","suburb","subway","success","succotash","suede","suet","suffocation","sugar","suggestion","suit","suitcase","suite","sulfur","sultan","sum","summary","summer","summit","sun","sunbeam","sunbonnet","sundae","sunday","sundial","sunflower","sunglasses","sunlamp","sunlight","sunrise","sunroom","sunset","sunshine","superiority","supermarket","supernatural","supervision","supervisor","supper","supplement","supplier","supply","support","supporter","suppression","supreme","surface","surfboard","surge","surgeon","surgery","surname","surplus","surprise","surround","surroundings","surrounds","survey","survival","survivor","sushi","suspect","suspenders","suspension","sustainment","sustenance","swamp","swan","swanling","swath","sweat","sweater","sweatshirt","sweatshop","sweatsuit","sweets","swell","swim","swimming","swimsuit","swine","swing","switch","switchboard","switching","swivel","sword","swordfight","swordfish","sycamore","symbol","symmetry","sympathy","symptom","syndicate","syndrome","synergy","synod","synonym","synthesis","syrup","system","t-shirt","tab","tabby","tabernacle","table","tablecloth","tablet","tabletop","tachometer","tackle","taco","tactics","tactile","tadpole","tag","tail","tailbud","tailor","tailspin","take-out","takeover","tale","talent","talk","talking","tam-o'-shanter","tamale","tambour","tambourine","tan","tandem","tangerine","tank","tank-top","tanker","tankful","tap","tape","tapioca","target","taro","tarragon","tart","task","tassel","taste","tatami","tattler","tattoo","tavern","tax","taxi","taxicab","taxpayer","tea","teacher","teaching","team","teammate","teapot","tear","tech","technician","technique","technologist","technology","tectonics","teen","teenager","teepee","telephone","telescreen","teletype","television","tell","teller","temp","temper","temperature","temple","tempo","temporariness","temporary","temptation","temptress","tenant","tendency","tender","tenement","tenet","tennis","tenor","tension","tensor","tent","tentacle","tenth","tepee","teriyaki","term","terminal","termination","terminology","termite","terrace","terracotta","terrapin","terrarium","territory","test","testament","testimonial","testimony","testing","text","textbook","textual","texture","thanks","thaw","theater","theft","theism","theme","theology","theory","therapist","therapy","thermals","thermometer","thermostat","thesis","thickness","thief","thigh","thing","thinking","thirst","thistle","thong","thongs","thorn","thought","thousand","thread","threat","threshold","thrift","thrill","throne","thrush","thumb","thump","thunder","thunderbolt","thunderhead","thunderstorm","thyme","tiara","tic","tick","ticket","tide","tie","tiger","tights","tile","till","tilt","timbale","timber","time","timeline","timeout","timer","timetable","timing","timpani","tin","tinderbox","tintype","tip","tire","tissue","titanium","title","toad","toast","toaster","tobacco","today","toe","toenail","toffee","tofu","tog","toga","toilet","tolerance","tolerant","toll","tom-tom","tomatillo","tomato","tomb","tomography","tomorrow","ton","tonality","tone","tongue","tonic","tonight","tool","toot","tooth","toothbrush","toothpaste","toothpick","top","top-hat","topic","topsail","toque","toreador","tornado","torso","torte","tortellini","tortilla","tortoise","total","tote","touch","tough-guy","tour","tourism","tourist","tournament","tow-truck","towel","tower","town","townhouse","township","toy","trace","trachoma","track","tracking","tracksuit","tract","tractor","trade","trader","trading","tradition","traditionalism","traffic","trafficker","tragedy","trail","trailer","trailpatrol","train","trainer","training","trait","tram","trance","transaction","transcript","transfer","transformation","transit","transition","translation","transmission","transom","transparency","transplantation","transport","transportation","trap","trapdoor","trapezium","trapezoid","trash","travel","traveler","tray","treasure","treasury","treat","treatment","treaty","tree","trek","trellis","tremor","trench","trend","triad","trial","triangle","tribe","tributary","trick","trigger","trigonometry","trillion","trim","trinket","trip","tripod","tritone","triumph","trolley","troop","trooper","trophy","trouble","trousers","trout","trove","trowel","truck","trumpet","trunk","trust","trustee","truth","try","tsunami","tub","tuba","tube","tuber","tug","tugboat","tuition","tulip","tumbler","tummy","tuna","tune","tune-up","tunic","tunnel","turban","turf","turkey","turmeric","turn","turning","turnip","turnover","turnstile","turret","turtle","tusk","tussle","tutu","tuxedo","tweet","tweezers","twig","twilight","twine","twins","twist","twister","twitter","type","typeface","typewriter","typhoon","ukulele","ultimatum","umbrella","unblinking","uncertainty","uncle","underclothes","underestimate","underground","underneath","underpants","underpass","undershirt","understanding","understatement","undertaker","underwear","underweight","underwire","underwriting","unemployment","unibody","uniform","uniformity","union","unique","unit","unity","universe","university","update","upgrade","uplift","upper","upstairs","upward","urge","urgency","urn","usage","use","user","usher","usual","utensil","utilisation","utility","utilization","vacation","vaccine","vacuum","vagrant","valance","valentine","validate","validity","valley","valuable","value","vampire","van","vanadyl","vane","vanilla","vanity","variability","variable","variant","variation","variety","vascular","vase","vault","vaulting","veal","vector","vegetable","vegetarian","vegetarianism","vegetation","vehicle","veil","vein","veldt","vellum","velocity","velodrome","velvet","vendor","veneer","vengeance","venison","venom","venti","venture","venue","veranda","verb","verdict","verification","vermicelli","vernacular","verse","version","vertigo","verve","vessel","vest","vestment","vet","veteran","veterinarian","veto","viability","vibraphone","vibration","vibrissae","vice","vicinity","victim","victory","video","view","viewer","vignette","villa","village","vine","vinegar","vineyard","vintage","vintner","vinyl","viola","violation","violence","violet","violin","virtue","virus","visa","viscose","vise","vision","visit","visitor","visor","vista","visual","vitality","vitamin","vitro","vivo","vogue","voice","void","vol","volatility","volcano","volleyball","volume","volunteer","volunteering","vote","voter","voting","voyage","vulture","wafer","waffle","wage","wagon","waist","waistband","wait","waiter","waiting","waitress","waiver","wake","walk","walker","walking","walkway","wall","wallaby","wallet","walnut","walrus","wampum","wannabe","want","war","warden","wardrobe","warfare","warlock","warlord","warm-up","warming","warmth","warning","warrant","warren","warrior","wasabi","wash","washbasin","washcloth","washer","washtub","wasp","waste","wastebasket","wasting","watch","watcher","watchmaker","water","waterbed","watercress","waterfall","waterfront","watermelon","waterskiing","waterspout","waterwheel","wave","waveform","wax","way","weakness","wealth","weapon","wear","weasel","weather","web","webinar","webmail","webpage","website","wedding","wedge","weeder","weedkiller","week","weekend","weekender","weight","weird","welcome","welfare","well","well-being","west","western","wet-bar","wetland","wetsuit","whack","whale","wharf","wheat","wheel","whelp","whey","whip","whirlpool","whirlwind","whisker","whisper","whistle","whole","wholesale","wholesaler","whorl","wick","widget","widow","width","wife","wifi","wild","wildebeest","wilderness","wildlife","will","willingness","willow","win","wind","wind-chime","windage","window","windscreen","windshield","winery","wing","wingman","wingtip","wink","winner","winter","wire","wiretap","wiring","wisdom","wiseguy","wish","wisteria","wit","witch","witch-hunt","withdrawal","witness","wok","wolf","woman","wombat","wonder","wont","wood","woodchuck","woodland","woodshed","woodwind","wool","woolens","word","wording","work","workbench","worker","workforce","workhorse","working","workout","workplace","workshop","world","worm","worry","worship","worshiper","worth","wound","wrap","wraparound","wrapper","wrapping","wreck","wrecker","wren","wrench","wrestler","wriggler","wrinkle","wrist","writer","writing","wrong","xylophone","yacht","yahoo","yak","yam","yang","yard","yarmulke","yarn","yawl","year","yeast","yellowjacket","yesterday","yew","yin","yoga","yogurt","yoke","yolk","young","youngster","yourself","youth","yoyo","yurt","zampone","zebra","zebrafish","zen","zephyr","zero","ziggurat","zinc","zipper","zither","zombie","zone","zoo","zoologist","zoology","zoot-suit","zucchini"],Xa=["a","abaft","aboard","about","above","absent","across","afore","after","against","along","alongside","amid","amidst","among","amongst","an","anenst","anti","apropos","apud","around","as","aside","astride","at","athwart","atop","barring","before","behind","below","beneath","beside","besides","between","beyond","but","by","circa","concerning","considering","despite","down","during","except","excepting","excluding","failing","following","for","forenenst","from","given","in","including","inside","into","lest","like","mid","midst","minus","modulo","near","next","notwithstanding","of","off","on","onto","opposite","out","outside","over","pace","past","per","plus","pro","qua","regarding","round","sans","save","since","than","the","through","throughout","till","times","to","toward","towards","under","underneath","unlike","until","unto","up","upon","versus","via","vice","with","within","without","worth"],Qa=["abandon","abase","abate","abbreviate","abdicate","abduct","abet","abhor","abide","abjure","abnegate","abolish","abominate","abort","abound","abrade","abridge","abrogate","abscond","abseil","absent","absolve","absorb","abstain","abstract","abut","accede","accelerate","accent","accentuate","accept","access","accessorise","accessorize","acclaim","acclimate","acclimatise","acclimatize","accommodate","accompany","accomplish","accord","accost","account","accouter","accoutre","accredit","accrue","acculturate","accumulate","accuse","accustom","ace","ache","achieve","acidify","acknowledge","acquaint","acquiesce","acquire","acquit","act","action","activate","actualise","actualize","actuate","adapt","add","addle","address","adduce","adhere","adjoin","adjourn","adjudge","adjudicate","adjure","adjust","administer","admire","admit","admonish","adopt","adore","adorn","adsorb","adulterate","adumbrate","advance","advantage","advertise","advise","advocate","aerate","affect","affiliate","affirm","affix","afflict","afford","afforest","affront","age","agglomerate","aggravate","aggregate","agitate","agonise","agonize","agree","aid","ail","aim","air","airbrush","airdrop","airfreight","airlift","alarm","alert","alienate","alight","align","allay","allege","alleviate","allocate","allot","allow","alloy","allude","ally","alphabetise","alphabetize","alter","alternate","amalgamate","amass","amaze","amble","ambush","ameliorate","amend","amortise","amortize","amount","amplify","amputate","amuse","anaesthetise","anaesthetize","analyse","anchor","anesthetize","anger","angle","anglicise","anglicize","animate","anneal","annex","annihilate","annotate","announce","annoy","annul","anodise","anodize","anoint","anonymise","anonymize","answer","antagonise","antagonize","antedate","anthologise","anthologize","anticipate","ape","apologise","apologize","apostrophise","apostrophize","appal","appall","appeal","appear","appease","append","appertain","applaud","apply","appoint","apportion","appraise","appreciate","apprehend","apprentice","apprise","approach","appropriate","approve","approximate","aquaplane","arbitrate","arc","arch","archive","argue","arise","arm","arraign","arrange","array","arrest","arrive","arrogate","art","articulate","ascend","ascertain","ascribe","ask","asphyxiate","aspirate","aspire","assail","assassinate","assault","assay","assemble","assent","assert","assess","assign","assimilate","assist","associate","assuage","assume","assure","asterisk","astonish","astound","atomise","atomize","atone","atrophy","attach","attack","attain","attempt","attend","attenuate","attest","attract","attribute","auction","audit","audition","augment","augur","authenticate","author","authorise","authorize","autograph","automate","autosave","autowind","avail","avenge","aver","average","avert","avoid","avow","await","awake","awaken","award","awe","ax","axe","baa","babble","baby","babysit","back","backcomb","backdate","backfill","backfire","backlight","backpack","backspace","backtrack","badger","baffle","bag","bail","bait","bake","balance","bale","ball","balloon","ballot","balls","bamboozle","ban","band","bandage","bandy","banish","bank","bankroll","bankrupt","banter","baptise","baptize","bar","barbecue","bare","bargain","barge","bark","barnstorm","barrack","barrel","barricade","barter","base","bash","bask","baste","bat","batch","bath","bathe","batten","batter","battle","baulk","bawl","bay","bayonet","be","beach","beam","bean","bear","beard","beat","beatbox","beatboxer","beatify","beautify","beckon","become","bedazzle","bedeck","bedevil","beef","beep","beetle","befall","befit","befog","befriend","beg","beget","beggar","begin","begrudge","beguile","behave","behold","behoove","behove","belabor","belabour","belay","belch","belie","believe","belittle","bellow","belly","bellyache","belong","belt","bemoan","bemuse","benchmark","bend","benefit","bequeath","berate","bereave","berth","beseech","beset","besiege","besmirch","bespatter","bespeak","best","bestir","bestow","bestride","bet","betake","betide","betoken","betray","better","bewail","beware","bewilder","bewitch","bias","bicker","bicycle","bid","bide","biff","bifurcate","big","bike","bilk","bill","billet","billow","bin","bind","binge","biodegrade","bird","bisect","bite","bitmap","bivouac","bivvy","blab","blabber","blacken","blackmail","blag","blame","blanch","blank","blanket","blare","blaspheme","blast","blather","blaze","blazon","bleach","bleat","bleed","bleep","blemish","blench","blend","bless","blight","blind","blindfold","blindfolded","blindside","blink","bliss","blister","blitz","bloat","block","blockade","blog","blood","bloom","bloop","blossom","blot","blow","blub","blubber","bludge","bludgeon","bluff","blunder","blunt","blur","blurt","blush","bluster","board","boast","bob","bobble","bode","bodge","bog","boggle","boil","bolster","bolt","bomb","bombard","bond","bonk","boo","boogie","book","bookmark","boom","boomerang","boost","boot","bootleg","bop","border","bore","born","borrow","boss","botch","bother","bottle","bottleful","bottom","bounce","bound","bow","bowdlerise","bowdlerize","bowl","bowlful","box","boycott","braai","brace","braces","bracket","brag","braid","brain","brainstorm","brainwash","braise","brake","branch","brand","brandish","brave","brawl","bray","brazen","breach","break","breakfast","breathalyse","breathalyze","breathe","breed","breeze","brew","bribe","brick","bridge","bridle","brief","brighten","brim","bring","bristle","broach","broadcast","broaden","broadside","broil","broker","brood","brook","browbeat","browse","bruise","bruit","brush","brutalise","brutalize","bubble","buck","bucket","bucketful","buckle","bud","buddy","budge","budget","buff","buffer","buffet","bug","build","bulge","bulk","bulldoze","bully","bum","bumble","bump","bunch","bundle","bungle","bunk","bunker","bunt","buoy","burble","burden","burgeon","burglarize","burgle","burn","burnish","burp","burrow","burst","bury","bus","bushwhack","busk","bust","bustle","busy","butcher","butt","butter","button","buttonhole","buttress","buy","buzz","buzzing","bypass","cable","cache","cackle","caddie","cadge","cage","cajole","cake","calcify","calculate","calibrate","call","calm","calve","camouflage","camp","campaign","can","canalise","canalize","cancel","cane","cannibalise","cannibalize","cannon","cannulate","canoe","canonise","canonize","canst","cant","canter","canvass","cap","caper","capitalise","capitalize","capitulate","capsize","captain","caption","captivate","capture","caramelise","caramelize","carbonise","carbonize","carburise","carburize","card","care","careen","career","caress","caricature","carjack","carol","carom","carouse","carp","carpet","carpool","carry","cart","cartwheel","carve","cascade","case","cash","cashier","casserole","cast","castigate","catalog","catalogue","catalyse","catalyze","catapult","catch","categorise","categorize","cater","caterwaul","catnap","caucus","caulk","cause","cauterise","cauterize","caution","cave","cavil","cavort","caw","cc","cease","cede","celebrate","cement","censor","censure","centralise","centralize","centre","certificate","certify","chafe","chaff","chain","chair","chalk","challenge","champ","champion","chance","change","channel","chant","chaperon","chaperone","char","characterise","characterize","charbroil","charge","chargesheet","chargrill","charm","chart","charter","chase","chasten","chastise","chat","chatter","chauffeur","cheapen","cheat","cheater","check","checkmate","cheek","cheep","cheer","cherish","chew","chicken","chide","chill","chillax","chime","chip","chirp","chisel","chivvy","chlorinate","choke","chomp","choose","chop","choreograph","chortle","chorus","christen","chromakey","chronicle","chuck","chuckle","chunder","chunter","churn","cinch","circle","circulate","circumnavigate","circumscribe","circumvent","cite","civilise","civilize","clack","claim","clam","clamber","clamor","clamour","clamp","clang","clank","clap","clarify","clash","clasp","class","classify","clatter","claw","clean","cleanse","clear","cleave","clench","clerk","click","climb","clinch","cling","clink","clinking","clip","cloak","clobber","clock","clog","clone","clonk","close","closet","clot","clothe","cloud","clout","clown","club","cluck","clue","clump","clunk","cluster","clutch","clutter","coach","coagulate","coalesce","coarsen","coast","coat","coax","cobble","cocoon","coddle","code","codify","coerce","coexist","cogitate","cohabit","cohere","coil","coin","coincide","collaborate","collapse","collar","collate","collect","collectivise","collectivize","collide","colligate","collocate","collude","colonise","colonize","colorize","colour","comb","combat","combine","combust","come","comfort","command","commandeer","commemorate","commence","commend","comment","commentate","commercialise","commercialize","commingle","commiserate","commission","commit","commune","communicate","commute","compact","compare","compartmentalise","compartmentalize","compel","compensate","compete","compile","complain","complement","complete","complicate","compliment","comply","comport","compose","compost","compound","comprehend","compress","comprise","compromise","compute","computerise","computerize","con","conceal","concede","conceive","concentrate","conceptualise","conceptualize","concern","concertina","conciliate","conclude","concoct","concrete","concur","concuss","condemn","condense","condescend","condition","condone","conduct","cone","confer","confess","confide","configure","confine","confirm","confiscate","conflate","conflict","conform","confound","confront","confuse","confute","congeal","congratulate","congregate","conjecture","conjoin","conjugate","conjure","conk","connect","connive","connote","conquer","conscientise","conscientize","conscript","consecrate","consent","conserve","consider","consign","consist","console","consolidate","consort","conspire","constitute","constrain","constrict","construct","construe","consult","consume","consummate","contact","contain","contaminate","contemplate","contend","content","contest","contextualise","contextualize","continue","contort","contract","contradict","contraindicate","contrast","contravene","contribute","contrive","control","controvert","convalesce","convene","converge","converse","convert","convey","convict","convince","convoke","convulse","coo","cook","cool","coop","cooperate","coordinate","cop","cope","coppice","copy","copyright","cordon","core","cork","corkscrew","corner","corral","correct","correlate","correspond","corrode","corrupt","coruscate","cosh","cosset","cost","cosy","cotton","couch","cough","counsel","count","countenance","counter","counteract","counterbalance","counterfeit","countermand","counterpoint","countersign","couple","courier","course","court","covenant","cover","covet","cow","cower","cozy","crackle","cradle","craft","cram","cramp","crane","crank","crate","crave","crawl","crayon","creak","creaking","cream","crease","create","credential","credit","creep","cremate","creolise","creolize","creosote","crest","crew","crib","crick","criminalise","criminalize","crimp","cringe","crinkle","cripple","crisp","criticise","criticize","critique","croak","crochet","crook","croon","crop","cross","crouch","crow","crowd","crown","cruise","crumble","crumple","crunch","crusade","crush","cry","crystallise","crystallize","cube","cuddle","cudgel","cue","cuff","cull","culminate","cultivate","culture","cup","curate","curb","curdle","cure","curl","curry","curse","curtail","curtain","curtsy","curve","cushion","cuss","customise","customize","cut","cwtch","cycle","dab","dabble","dally","dam","damage","damp","dampen","dance","dandle","dangle","dare","darken","darn","dart","dash","date","daub","daunt","dawdle","dawn","daydream","dazzle","deactivate","deaden","deadhead","deafen","deal","debar","debase","debate","debilitate","debit","debrief","debug","debunk","debut","decamp","decant","decay","deceive","decelerate","decentralise","decentralize","decide","decimalise","decimalize","decimate","decipher","deck","declaim","declare","declassify","decline","declutter","decode","decommission","decompose","decompress","deconsecrate","deconstruct","decontaminate","decontrol","decorate","decouple","decoy","decrease","decree","decriminalise","decriminalize","decry","decrypt","dedicate","deduce","deduct","deejay","deem","deepen","deface","defame","default","defeat","defect","defend","defer","defile","define","deflate","deflect","defog","defoliate","deforest","deform","defrag","defragment","defraud","defray","defrock","defrost","defuse","defy","degenerate","deglaze","degrade","degrease","dehumanise","dehumanize","dehydrate","deify","deign","delay","delegate","delete","deliberate","delight","delimit","delineate","deliquesce","deliver","delouse","delude","deluge","delve","demand","demarcate","demean","demerge","demilitarise","demilitarize","demineralise","demineralize","demist","demo","demob","demobilise","demobilize","democratise","democratize","demolish","demonise","demonize","demonstrate","demoralise","demoralize","demote","demotivate","demur","demystify","denationalise","denationalize","denigrate","denitrify","denominate","denote","denounce","dent","denude","deny","depart","depend","depersonalise","depersonalize","depict","deplane","deplete","deplore","deploy","depopulate","deport","depose","deposit","deprave","deprecate","depreciate","depress","depressurise","depressurize","deprive","depute","deputise","deputize","deracinate","derail","dereference","deregulate","deride","derive","derogate","descale","descend","describe","descry","desecrate","desegregate","deselect","desensitise","desensitize","desert","deserve","design","designate","desire","desist","deskill","desolate","despair","despise","despoil","destabilise","destabilize","destock","destroy","detach","detail","detain","detect","deter","deteriorate","determine","detest","dethrone","detonate","detour","detoxify","detract","detrain","devalue","devastate","develop","deviate","devise","devoice","devolve","devote","devour","diagnose","dial","dice","dicker","dictate","die","diet","differ","differentiate","diffract","diffuse","dig","digest","digitalise","digitalize","digitise","digitize","dignify","digress","dilate","dilute","diluted","dim","diminish","dimple","dine","ding","dip","diphthongise","diphthongize","direct","dirty","dis","disable","disabuse","disadvantage","disaffiliate","disafforest","disagree","disallow","disambiguate","disappear","disappoint","disapprove","disarm","disarrange","disassemble","disassociate","disavow","disband","disbar","disbelieve","disburse","discard","discern","discharge","discipline","disclaim","disclose","discolor","discolour","discomfit","discomfort","discompose","disconcert","disconnect","discontinue","discount","discourage","discourse","discover","discredit","discriminate","discuss","disdain","disembark","disembowel","disenfranchise","disengage","disentangle","disestablish","disgorge","disgrace","disguise","disgust","dish","dishearten","dishonor","dishonour","disillusion","disincentivise","disincentivize","disinfect","disinherit","disinhibit","disintegrate","disinter","disinvest","dislike","dislocate","dislodge","dismantle","dismay","dismember","dismiss","dismount","disobey","disorient","disorientate","disown","disparage","dispatch","dispel","dispense","disperse","displace","display","displease","disport","dispose","dispossess","disprove","dispute","disqualify","disregard","disrespect","disrobe","disrupt","dissect","dissemble","disseminate","dissent","dissimulate","dissipate","dissociate","dissolve","dissuade","distance","distend","distil","distill","distinguish","distort","distract","distress","distribute","distrust","disturb","disunite","ditch","dither","dive","diverge","diversify","divert","divest","divide","divine","divorce","divulge","divvy","do","dob","dock","doctor","document","dodge","doff","dog","dole","doll","dollarise","dollarize","domesticate","dominate","don","donate","doodle","doom","doorstep","dop","dope","dose","doss","dot","dote","double","doubt","douse","dovetail","down","downchange","downgrade","downlink","download","downplay","downshift","downsize","dowse","doze","draft","drag","dragoon","drain","dramatise","dramatize","drape","draught","draw","drawl","dread","dream","dredge","drench","dress","dribble","drift","drill","drink","drip","drive","drivel","drizzle","drone","drool","droop","drop","drown","drowse","drug","drum","dry","dub","duck","duckie","ducks","duel","duff","dull","dumb","dumbfound","dump","dunk","dunt","dupe","duplicate","dust","dwarf","dwell","dwindle","dye","dynamite","earmark","earn","earth","ease","eat","eavesdrop","ebb","echo","eclipse","economise","economize","eddy","edge","edify","edit","editorialise","editorialize","educate","efface","effect","effectuate","egg","eject","eke","elaborate","elapse","elbow","elect","electrify","electrocute","electroplate","elevate","elicit","elide","eliminate","elongate","elope","elucidate","elude","email","emanate","emancipate","embalm","embargo","embark","embarrass","embed","embellish","embezzle","embitter","emblazon","embody","embolden","emboss","embrace","embroider","embroil","emcee","emend","emerge","emigrate","emit","emote","empathise","empathize","emphasise","emphasize","employ","empower","empty","emulate","emulsify","enable","enact","encamp","encapsulate","encase","encash","enchant","encircle","enclose","encode","encompass","encounter","encourage","encroach","encrypt","encumber","end","endanger","endear","endeavor","endeavour","endorse","endow","endure","energise","energize","enervate","enfeeble","enfold","enforce","enfranchise","engage","engender","engineer","engorge","engrave","engross","engulf","enhance","enjoin","enjoy","enlarge","enlighten","enlist","enliven","enmesh","ennoble","enquire","enrage","enrapture","enrich","enrol","enroll","ensconce","enshrine","enshroud","ensnare","ensue","ensure","entail","entangle","enter","entertain","enthral","enthrall","enthrone","enthuse","entice","entitle","entomb","entrance","entrap","entreat","entrench","entrust","entwine","enumerate","enunciate","envelop","envisage","envision","envy","epitomise","epitomize","equal","equalise","equalize","equate","equip","equivocate","eradicate","erase","erode","err","erupt","escalate","escape","eschew","espouse","espy","essay","establish","esteem","estimate","etch","eulogise","eulogize","euthanise","euthanize","evacuate","evade","evaluate","evangelise","evangelize","evaporate","even","eventuate","evict","evidence","evince","eviscerate","evoke","evolve","exacerbate","exact","exaggerate","exalt","examine","exasperate","excavate","exceed","excel","except","excerpt","exchange","excise","excite","exclaim","exclude","excommunicate","excoriate","excrete","exculpate","excuse","execute","exemplify","exempt","exercise","exert","exeunt","exfoliate","exhale","exhaust","exhibit","exhilarate","exhort","exhume","exile","exist","exit","exonerate","exorcise","exorcize","expand","expatiate","expect","expectorate","expedite","expel","expend","experience","experiment","expiate","expire","explain","explicate","explode","exploit","explore","export","expose","expostulate","expound","express","expropriate","expunge","expurgate","extemporise","extemporize","extend","exterminate","externalise","externalize","extinguish","extirpate","extol","extort","extract","extradite","extrapolate","extricate","extrude","exude","exult","eye","eyeball","eyeglasses","fabricate","face","facilitate","factor","factorise","factorize","fade","faff","fail","faint","fake","fall","falsify","falter","familiarise","familiarize","fan","fancy","fantasise","fantasize","fare","farewell","farm","farrow","fascinate","fashion","fast","fasten","father","fathom","fatten","fault","favor","favour","fawn","fax","faze","fear","feast","feather","feature","federate","feed","feel","feign","feint","fell","feminise","feminize","fence","fend","ferment","ferret","ferry","fertilise","fertilize","fess","fester","festoon","fetch","fete","fetter","feud","fib","fictionalise","fictionalize","fiddle","fidget","field","fight","figure","filch","file","filibuster","fill","fillet","film","filter","finagle","finalise","finalize","finance","find","fine","finesse","fingerprint","finish","fire","firebomb","firm","fish","fishtail","fit","fix","fizz","fizzle","flag","flagellate","flail","flake","flame","flank","flap","flare","flash","flat","flatline","flatten","flatter","flaunt","flavour","flay","fleck","flee","fleece","flesh","flex","flick","flicker","flight","flinch","fling","flip","flirt","flit","float","flock","flog","flood","floodlight","floor","flop","floss","flounce","flounder","flour","flourish","flout","flow","flower","flub","fluctuate","fluff","flummox","flunk","flush","fluster","flutter","fly","foal","foam","fob","focalise","focalize","focus","fog","foil","foist","fold","follow","foment","fool","foot","forage","forbear","forbid","force","ford","forearm","forecast","foreclose","foregather","foreground","foresee","foreshadow","foreshorten","forestall","foretell","forewarn","forfeit","forfend","forgather","forge","forget","forgive","forgo","fork","form","formalise","formalize","format","formulate","forsake","forswear","fortify","forward","forwards","fossick","fossilise","fossilize","foster","foul","found","founder","fox","fracture","fragment","frame","franchise","frank","fraternise","fraternize","fray","freak","free","freelance","freeload","freestyle","freewheel","freeze","freight","frequent","freshen","fret","frighten","fringe","frisk","fritter","frizz","frizzle","frogmarch","frolic","front","frost","froth","frown","fruit","frustrate","fry","fudge","fuel","fulfil","fulfill","fulminate","fumble","fume","fumigate","function","fund","funk","funnel","furl","furlough","furnish","furrow","further","fuse","fuss","gab","gabble","gad","gag","gain","gainsay","gall","gallivant","gallop","galumph","galvanise","galvanize","gamble","gambol","gang","gape","garage","garden","gargle","garland","garner","garnish","garrison","garrote","garrotte","gas","gash","gasp","gatecrash","gather","gauge","gawk","gawp","gaze","gazump","gazunder","gear","gee","gel","geld","gen","generalise","generalize","generate","gentrify","genuflect","germinate","gerrymander","gestate","gesticulate","gesture","get","ghost","ghostwrite","gibber","gift","giggle","gild","ginger","gird","girdle","give","gladden","glamorise","glamorize","glance","glare","glass","glaze","gleam","glean","glide","glimmer","glimmering","glimpse","glint","glisten","glister","glitter","gloat","globalise","globalize","glom","glorify","glory","gloss","glow","glower","glue","glug","glut","gnash","gnaw","go","goad","gobble","goggle","goldbrick","goof","google","goose","gore","gorge","gossip","gouge","govern","grab","grace","grade","graduate","graft","grant","grapple","grasp","grass","grate","gratify","gravitate","graze","grease","green","greet","grey","grieve","grill","grimace","grin","grind","grip","gripe","grit","grizzle","groan","grok","groom","grouch","ground","group","grouse","grout","grovel","grow","growl","grub","grudge","grumble","grunt","guarantee","guard","guess","guest","guffaw","guide","guillotine","guilt","gulp","gum","gun","gurgle","gurn","gush","gussy","gust","gut","gutter","guzzle","gybe","gyrate","hack","haemorrhage","haggle","hail","hallmark","halloo","hallucinate","halt","halve","ham","hammer","hamper","hamstring","hand","handcuff","handicap","handle","hang","hanker","happen","harangue","harass","harbor","harbour","harden","hare","hark","harm","harmonise","harmonize","harness","harp","harpoon","harrow","harrumph","harry","harvest","hash","hassle","hasten","hatch","hate","haul","haunt","have","haw","hawk","hazard","haze","head","headbutt","headhunt","headline","heal","heap","hear","hearken","hearten","heat","heave","heckle","hector","hedge","heed","heel","heft","heighten","heist","help","hem","hemorrhage","herald","herd","hesitate","hew","hex","hibernate","hiccough","hiccup","hide","hie","highball","highlight","hightail","hijack","hike","hinder","hinge","hint","hire","hiss","hit","hitch","hitchhike","hive","hoard","hoax","hobble","hobnob","hock","hog","hoick","hoist","hold","hole","holiday","holler","hollow","holster","home","homeschool","homestead","hone","honeymoon","honk","honour","hoodwink","hoof","hook","hoon","hoot","hoover","hop","hope","horn","horrify","horse","horsewhip","hose","hosepipe","hospitalise","hospitalize","host","hot","hotfoot","hound","house","hover","howl","huddle","huff","hug","hull","hum","humanise","humanize","humble","humiliate","humour","hunch","hunger","hunker","hunt","hurdle","hurl","hurry","hurt","hurtle","husband","hush","husk","hustle","hybridise","hybridize","hydrate","hydroplane","hype","hyperventilate","hyphenate","hypnotise","hypnotize","hypothesise","hypothesize","ice","iconify","idealise","idealize","ideate","identify","idle","idolise","idolize","ignite","ignore","illuminate","illumine","illustrate","imagine","imagineer","imbibe","imbue","imitate","immerse","immigrate","immobilise","immobilize","immolate","immortalise","immortalize","immunise","immunize","immure","impact","impair","impale","impanel","impart","impeach","impede","impel","imperil","impersonate","impinge","implant","implement","implicate","implode","implore","imply","import","importune","impose","impound","impoverish","impress","imprint","imprison","improve","improvise","impugn","inactivate","inaugurate","incapacitate","incarcerate","incarnate","incense","incentivise","incentivize","inch","incinerate","incise","incite","incline","include","incommode","inconvenience","incorporate","increase","incriminate","incubate","inculcate","incur","indemnify","indent","index","indicate","indict","individualise","individualize","individuate","indoctrinate","induce","induct","indulge","industrialise","industrialize","infantilise","infantilize","infect","infer","infest","infill","infiltrate","inflame","inflate","inflect","inflict","influence","inform","infringe","infuriate","infuse","ingest","ingratiate","inhabit","inhale","inhere","inherit","inhibit","initial","initialise","initialize","initiate","inject","injure","ink","inlay","innovate","inoculate","input","inscribe","insert","inset","insinuate","insist","inspect","inspire","install","instance","instigate","instil","instill","institute","institutionalise","institutionalize","instruct","insulate","insult","insure","integrate","intend","intensify","inter","interact","intercede","intercept","interchange","interconnect","intercut","interest","interface","interfere","interject","interlace","interleave","interlink","interlock","intermarry","intermesh","intermingle","intermix","intern","internalise","internalize","internationalise","internationalize","interpenetrate","interpolate","interpose","interpret","interrelate","interrogate","interrupt","intersect","intersperse","intertwine","intervene","interview","interweave","interwork","intimate","intimidate","intone","intoxicate","intrigue","introduce","intrude","intubate","intuit","inundate","inure","invade","invalid","invalidate","inveigh","inveigle","invent","inventory","invert","invest","investigate","invigilate","invigorate","invite","invoice","invoke","involve","ionise","ionize","irk","iron","irradiate","irrigate","irritate","irrupt","isolate","issue","italicise","italicize","itch","itemise","itemize","iterate","jab","jabber","jack","jackknife","jail","jam","jangle","jar","jaw","jaywalk","jazz","jeer","jell","jeopardise","jeopardize","jest","jet","jettison","jib","jibe","jiggle","jilt","jingle","jink","jinx","jive","jockey","jog","joggle","join","joint","joke","jol","jolly","jolt","josh","jostle","jot","journey","joust","judder","judge","juggle","juice","jumble","jump","junk","justify","jut","juxtapose","keel","keelhaul","keen","keep","ken","key","keyboard","kibitz","kick","kid","kindle","kip","kiss","kit","kite","klap","kludge","knacker","knead","knee","kneecap","kneel","knife","knight","knit","knock","knot","know","knuckle","kowtow","kvetch","label","labour","lace","lacerate","lack","lacquer","ladder","ladle","lag","lam","lamb","lambast","lambaste","lament","lamp","lampoon","lance","land","lands","landscape","languish","lap","lapse","lard","large","lark","lash","lasso","last","latch","lather","laud","laugh","launch","launder","lavish","lay","layer","laze","leach","lead","leaf","leaflet","leak","lean","leap","leapfrog","learn","lease","leash","leave","leaven","lecture","leer","leg","legalise","legalize","legislate","legitimise","legitimize","lend","lengthen","lessen","let","letter","letterbox","level","lever","leverage","levitate","levy","liaise","libel","liberalise","liberalize","liberate","license","lick","lie","lift","ligate","light","lighten","like","liken","limber","lime","limit","limp","line","linger","link","lionise","lionize","liquefy","liquidate","liquidise","liquidize","lisp","list","listen","litigate","litter","live","liven","load","loads","loaf","loan","loathe","lob","lobby","lobotomise","lobotomize","localise","localize","locate","lock","lodge","loft","log","loiter","loll","lollop","long","look","looks","loom","loop","loose","loosen","loot","lop","lope","lord","lose","lounge","lour","louse","love","low","lowball","lower","lubricate","luck","lug","lull","lumber","lump","lunch","lunge","lurch","lure","lurk","luxuriate","macerate","machine","madden","magic","magnetise","magnetize","magnify","mail","maim","mainline","mainstream","maintain","major","make","malfunction","malign","malinger","maltreat","man","manacle","manage","mandate","mangle","manhandle","manicure","manifest","manipulate","manoeuvre","mantle","manufacture","manure","map","mar","march","marginalise","marginalize","marinate","mark","market","maroon","marry","marshal","martyr","marvel","masculinise","masculinize","mash","mask","masquerade","mass","massacre","massage","master","mastermind","masticate","match","materialise","materialize","matriculate","matter","mature","maul","maunder","max","maximise","maximize","mean","meander","measure","mechanise","mechanize","medal","meddle","mediate","medicate","meditate","meet","meld","mellow","melt","memorialise","memorialize","memorise","memorize","menace","mend","mention","meow","mercerise","mercerize","merchandise","merge","merit","mesh","mesmerise","mesmerize","mess","message","metabolise","metabolize","metamorphose","mete","meter","methinks","mew","mewl","miaow","microblog","microchip","micromanage","microwave","micturate","migrate","militarise","militarize","militate","milk","mill","mime","mimic","mince","mind","mine","mingle","miniaturise","miniaturize","minimise","minimize","minister","minor","mint","minute","mirror","misapply","misappropriate","misbehave","miscalculate","miscast","misconceive","misconstrue","miscount","misdiagnose","misdial","misdirect","misfile","misfire","misgovern","mishandle","mishear","mishit","misinform","misinterpret","misjudge","miskey","mislay","mislead","mismanage","mismatch","misname","misplace","misplay","mispronounce","misquote","misread","misreport","misrepresent","miss","mission","misspell","misspend","mist","mistake","mistime","mistreat","mistrust","misunderstand","misuse","mitigate","mitre","mix","moan","mob","mobilise","mobilize","mock","mod","model","moderate","modernise","modernize","modify","modulate","moisten","moisturise","moisturize","mold","molder","mollify","mollycoddle","molt","monitor","monopolise","monopolize","moo","mooch","moon","moonlight","moonwalk","moor","moot","mop","mope","moralise","moralize","morph","mortar","mortgage","mortify","mosey","mosh","mothball","mother","motion","motivate","motor","mould","moulder","moult","mount","mourn","mouse","mouth","move","movies","mow","muck","muddle","muddy","muffle","mug","mulch","mull","multicast","multiply","multitask","mumble","mumbling","mummify","munch","murmur","murmuring","murmurings","muscle","muse","mushroom","muss","muster","mutate","mute","mutilate","mutiny","mutter","muzzle","mystify","nab","nag","nail","name","namecheck","nap","narrate","narrow","narrowcast","nasalise","nasalize","nationalise","nationalize","natter","naturalise","naturalize","nauseate","navigate","near","nearer","nearest","neaten","necessitate","neck","necklace","need","needle","negate","negative","neglect","negotiate","neigh","nerve","nest","nestle","net","nettle","network","neuter","neutralise","neutralize","nibble","nick","nickname","nitrify","nix","nobble","nod","nominalize","nominate","norm","normalise","normalize","nose","nosedive","nosh","notarise","notarize","notch","note","notice","notify","nourish","nudge","nuke","nullify","numb","number","nurse","nurture","nut","nuzzle","obey","obfuscate","object","objectify","oblige","obliterate","obscure","observe","obsess","obstruct","obtain","obtrude","obviate","occasion","occlude","occupy","occur","off","offend","offer","officiate","offload","offset","offshore","ogle","oil","okay","omit","ooze","open","operate","opine","oppose","oppress","opt","optimise","optimize","option","orbit","orchestrate","ordain","order","organise","organize","orient","orientate","originate","ornament","orphan","oscillate","ossify","ostracise","ostracize","oust","out","outbid","outclass","outdistance","outdo","outface","outfit","outflank","outfox","outgrow","outgun","outlast","outlaw","outline","outlive","outmaneuver","outmanoeuvre","outnumber","outpace","outperform","outplay","outpoint","output","outrage","outrank","outrun","outsell","outshine","outsmart","outsource","outstay","outstrip","outvote","outweigh","outwit","overachieve","overact","overawe","overbalance","overbook","overburden","overcharge","overcome","overcompensate","overcook","overdevelop","overdo","overdose","overdraw","overdub","overeat","overemphasize","overestimate","overexpose","overextend","overfeed","overflow","overfly","overgeneralise","overgeneralize","overgraze","overhang","overhaul","overhear","overheat","overindulge","overlap","overlay","overlie","overload","overlook","overpay","overplay","overpower","overprint","overproduce","overrate","overreach","overreact","override","overrule","overrun","oversee","oversell","overshadow","overshoot","oversimplify","oversleep","overspend","overstate","overstay","overstep","overstock","overstretch","overtake","overtax","overthrow","overtrain","overturn","overuse","overvalue","overwhelm","overwinter","overwork","overwrite","owe","own","oxidise","oxidize","oxygenate","pace","pacify","pack","package","packetise","packetize","pad","paddle","padlock","page","paginate","pailful","pain","paint","pair","pal","palatalise","palatalize","pale","pall","palliate","palm","palpate","palpitate","pamper","pan","pander","panel","panhandle","panic","pant","paper","parachute","parade","parallel","paralyse","paralyze","paraphrase","parboil","parcel","parch","pardon","pare","park","parlay","parley","parody","parole","parrot","parry","parse","part","partake","participate","particularise","particularize","partition","partner","party","pass","passivise","passivize","paste","pasteurise","pasteurize","pasture","pat","patch","patent","patrol","patronise","patronize","patter","pattern","pause","pave","paw","pawn","pay","peak","peal","pedal","peddle","pedestrianise","pedestrianize","peek","peel","peep","peer","peg","pelt","pen","penalise","penalize","pencil","pension","people","pep","pepper","perambulate","perceive","perch","percolate","perfect","perforate","perform","perfume","perish","perjure","perk","perm","permeate","permit","perpetrate","perpetuate","perplex","persecute","persevere","persist","personalise","personalize","personify","perspire","persuade","pertain","perturb","peruse","pervade","pervert","pester","pet","peter","petition","petrify","phase","philosophise","philosophize","phone","photocopy","photograph","photoshop","photosynthesise","photosynthesize","phrase","pick","picket","pickle","picnic","picture","picturise","picturize","piddle","piece","pierce","pig","pigeonhole","piggyback","pike","pile","pilfer","pill","pillage","pillory","pillow","pilot","pin","pinch","pine","ping","pinion","pink","pinpoint","pioneer","pip","pipe","pique","pirate","pirouette","pit","pitch","pity","pivot","pixelate","pixellate","placate","place","plagiarise","plagiarize","plague","plait","plan","plane","plant","plaster","plasticise","plasticize","plate","plateau","play","plead","please","pledge","plight","plod","plonk","plop","plot","plough","pluck","plug","plumb","plummet","plump","plunder","plunge","plunk","pluralise","pluralize","ply","poach","pocket","point","poise","poison","poke","polarise","polarize","pole","poleax","poleaxe","police","polish","politicise","politicize","poll","pollard","pollinate","pollute","polymerise","polymerize","ponce","ponder","pong","pontificate","pony","pooh","pool","pootle","pop","popularise","popularize","populate","pore","port","portend","portion","portray","pose","posit","position","possess","posset","post","postmark","postpone","postulate","posture","pot","potter","pounce","pound","pour","pout","powder","power","practice","practise","praise","praises","prance","prang","prate","prattle","pray","preach","precede","precipitate","precis","preclude","predate","predecease","predetermine","predicate","predict","predispose","predominate","preen","preface","prefer","prefigure","prefix","preheat","prejudge","prejudice","preload","premaster","premiere","preoccupy","prep","prepare","prepone","preregister","presage","prescind","prescribe","preselect","presell","present","preserve","preset","preside","press","pressure","pressurise","pressurize","presume","presuppose","pretend","pretest","prettify","prevail","prevaricate","prevent","preview","prey","price","prickle","pride","prime","primp","print","prioritise","prioritize","prise","privatise","privatize","privilege","prize","probate","probe","proceed","process","proclaim","procrastinate","procreate","proctor","procure","prod","produce","profane","profess","professionalise","professionalize","proffer","profile","profit","program","programme","progress","prohibit","project","proliferate","prolong","promenade","promise","promote","prompt","promulgate","pronounce","proof","proofread","prop","propagandise","propagandize","propagate","propel","prophesy","propitiate","propose","proposition","propound","proscribe","prosecute","proselytise","proselytize","prospect","prosper","prostrate","protect","protest","protrude","prove","provide","provision","provoke","prowl","prune","pry","psych","psychoanalyse","publicise","publicize","publish","pucker","puff","pull","pullulate","pulp","pulsate","pulse","pulverise","pulverize","pummel","pump","pun","punch","punctuate","puncture","punish","punt","pupate","purchase","purge","purify","purl","purloin","purport","purr","purse","pursue","purvey","push","pussyfoot","put","putrefy","putt","putter","puzzle","quack","quadruple","quaff","quail","quake","qualify","quantify","quarantine","quarrel","quarry","quarter","quarterback","quash","quaver","quell","quench","query","quest","question","queue","quibble","quicken","quiet","quieten","quintuple","quip","quirk","quit","quiver","quiz","quote","quoth","rabbit","race","rack","radiate","radicalise","radicalize","radio","raffle","rag","rage","raid","rail","railroad","rain","raise","rake","rally","ram","ramble","ramp","rampage","randomise","randomize","range","rank","rankle","ransack","ransom","rant","rap","rappel","rasp","rasterise","rasterize","rat","ratchet","rate","ratify","ration","rationalise","rationalize","rattle","ravage","rave","ravel","ravish","raze","razz","reach","reacquaint","react","reactivate","read","readdress","readies","readjust","readmit","ready","reaffirm","realign","realise","realize","reallocate","ream","reanimate","reap","reappear","reapply","reappoint","reappraise","rear","rearm","rearrange","reason","reassemble","reassert","reassess","reassign","reassure","reawaken","rebel","reboot","reborn","rebound","rebrand","rebuff","rebuild","rebuke","rebut","recall","recant","recap","recapitulate","recapture","recast","recede","receive","recess","recharge","reciprocate","recite","reckon","reclaim","reclassify","recline","recognise","recognize","recoil","recollect","recommence","recommend","recompense","reconcile","recondition","reconfigure","reconfirm","reconnect","reconnoitre","reconquer","reconsider","reconstitute","reconstruct","reconvene","record","recount","recoup","recover","recreate","recrudesce","recruit","rectify","recuperate","recur","recycle","redact","redden","redecorate","redeem","redefine","redeploy","redesign","redevelop","redial","redirect","rediscover","redistribute","redistrict","redo","redouble","redound","redraft","redraw","redress","reduce","reduplicate","reef","reek","reel","ref","refer","referee","reference","refill","refinance","refine","refit","reflate","reflect","refloat","refocus","reform","reformat","reformulate","refract","refrain","refresh","refrigerate","refuel","refund","refurbish","refuse","refute","regain","regale","regard","regenerate","register","regress","regret","regroup","regularise","regularize","regulate","regurgitate","rehabilitate","rehash","rehear","rehearse","reheat","rehome","rehouse","reign","reignite","reimburse","rein","reincarnate","reinforce","reinstate","reinterpret","reintroduce","reinvent","reinvest","reinvigorate","reissue","reiterate","reject","rejig","rejigger","rejoice","rejoin","rejuvenate","rekindle","relapse","relate","relaunch","relax","relay","release","relegate","relent","relieve","relinquish","relish","relive","reload","relocate","rely","remain","remainder","remake","remand","remap","remark","remarry","remaster","remediate","remedy","remember","remind","reminisce","remit","remix","remodel","remonstrate","remortgage","remould","remount","remove","remunerate","rename","rend","render","rendezvous","renege","renew","renounce","renovate","rent","reoccur","reoffend","reopen","reorder","reorganise","reorganize","reorient","repackage","repair","repatriate","repay","repeal","repeat","repel","repent","rephrase","replace","replay","replenish","replicate","reply","report","repose","repossess","represent","repress","reprieve","reprimand","reprint","reproach","reprocess","reproduce","reprove","repudiate","repulse","repurpose","request","require","requisition","requite","rerun","reschedule","rescind","rescue","research","researches","resect","resell","resemble","resent","reserve","reset","resettle","reshape","reshuffle","reside","resign","resist","resit","resize","reskill","resolve","resonate","resort","resound","resource","respect","respire","respond","respray","rest","restart","restate","restock","restore","restrain","restrict","restring","restructure","result","resume","resupply","resurface","resurrect","resuscitate","retail","retain","retake","retaliate","retch","retell","retest","rethink","retire","retool","retort","retouch","retrace","retract","retrain","retreat","retrench","retrieve","retrofit","retry","return","reunify","reunite","reuse","rev","revalue","revamp","reveal","revel","revenge","reverberate","revere","reverse","revert","review","revile","revise","revisit","revitalise","revitalize","revive","revivify","revoke","revolt","revolutionise","revolutionize","revolve","reward","rewind","rewire","reword","rework","rewrite","rhapsodise","rhapsodize","rhyme","rib","rick","ricochet","rid","riddle","ride","ridge","ridicule","riffle","rifle","rig","right","rightsize","rile","rim","ring","rinse","riot","rip","ripen","riposte","ripple","rise","risk","ritualise","ritualize","rival","rivet","roam","roar","roast","rob","robe","rock","rocket","roger","roll","romance","romanticise","romanticize","romp","roof","room","roost","root","rope","rosin","roster","rot","rotate","rouge","rough","roughen","roughhouse","round","rouse","roust","rout","route","rove","row","rub","rubberneck","rubbish","ruck","rue","ruffle","ruin","ruins","rule","rumble","ruminate","rummage","rumor","rumour","rumple","run","rupture","rush","rust","rustle","sabotage","sack","sacrifice","sadden","saddle","safeguard","sag","sail","salaam","salivate","sally","salt","salute","salvage","salve","sample","sanctify","sanction","sand","sandbag","sandblast","sandpaper","sandwich","sanitise","sanitize","sap","sashay","sass","sate","satiate","satirise","satirize","satisfy","saturate","saunter","savage","save","savor","savour","saw","say","scald","scale","scallop","scalp","scamper","scan","scandalise","scandalize","scapegoat","scar","scare","scarf","scarify","scarper","scatter","scattering","scavenge","scent","schedule","schematise","schematize","scheme","schlep","schlepp","schmooze","school","schtup","schuss","scoff","scold","scoop","scoot","scope","scorch","score","scorn","scotch","scour","scourge","scout","scowl","scrabble","scram","scramble","scrap","scrape","scratch","scrawl","scream","screech","screen","screw","scribble","scrimp","script","scroll","scrounge","scrub","scrummage","scrunch","scruple","scrutinise","scrutinize","scud","scuff","scuffle","scull","sculpt","scupper","scurry","scuttle","scythe","seal","sealift","sear","search","season","seat","secede","seclude","second","secrete","section","secularise","secularize","secure","sedate","see","seed","seek","seep","seethe","segment","segregate","segue","seize","select","sell","sellotape","semaphore","send","sensationalise","sensationalize","sense","sensitise","sensitize","sentence","sentimentalise","sentimentalize","separate","sequence","sequester","sequestrate","serenade","serialise","serialize","sermonise","sermonize","serve","service","set","settle","sever","sew","shack","shackle","shade","shadow","shaft","shake","shalt","sham","shamble","shame","shampoo","shanghai","shape","share","sharpen","shatter","shave","shear","sheathe","shed","sheer","shell","shellac","shelter","shelve","shepherd","shield","shift","shimmer","shimmy","shin","shine","shinny","ship","shipwreck","shirk","shiver","shock","shoe","shoehorn","shoo","shoot","shop","shoplift","shore","short","shorten","shortlist","shoulder","shout","shove","shovel","show","showboat","showcase","shower","shred","shriek","shrill","shrink","shrivel","shroom","shroud","shrug","shuck","shudder","shuffle","shun","shunt","shush","shut","shuttle","shy","sic","sick","sicken","side","sideline","sidestep","sideswipe","sidetrack","sidle","sieve","sift","sigh","sight","sightsee","sign","signal","signify","signpost","silence","silhouette","silt","silver","simmer","simper","simplify","simulate","simulcast","sin","sing","singe","single","sink","sip","siphon","sire","sit","site","situate","size","sizzle","skate","skateboard","skedaddle","sketch","skew","skewer","ski","skid","skim","skimp","skin","skip","skipper","skirmish","skirt","skitter","skive","skivvy","skulk","sky","skyjack","skyrocket","slack","slacken","slake","slam","slander","slap","slash","slate","slather","sledge","sleek","sleep","sleepwalk","sleet","slew","slice","slick","slide","slight","slim","sling","slink","slip","slit","slither","slob","slobber","slog","slop","slope","slosh","slot","slouch","slough","slow","slug","sluice","slum","slumber","slump","slur","slurp","smart","smarten","smash","smear","smell","smelt","smile","smirk","smite","smoke","smooch","smoodge","smooth","smother","smoulder","smudge","smuggle","snack","snaffle","snag","snaggle","snake","snap","snare","snarf","snarl","sneak","sneer","sneeze","snicker","sniff","sniffle","snip","snipe","snitch","snivel","snooker","snoop","snooper","snooze","snore","snorkel","snort","snow","snowball","snowplough","snowplow","snub","snuffle","snuffling","snuggle","soak","soap","soar","sober","socialise","socialize","sock","sod","soften","soil","sojourn","solace","solder","soldier","sole","solemnise","solemnize","solicit","solidify","soliloquize","solve","somersault","soothe","sorrow","sort","sough","sound","soundproof","soup","sour","source","sow","space","span","spangle","spar","spare","spark","sparkle","spatter","spattering","spawn","spay","speak","spear","spearhead","spec","specialise","specialize","specify","spectacles","spectate","speculate","speed","spell","spellcheck","spend","spew","spice","spiff","spike","spill","spin","spiral","spirit","spit","spite","splash","splatter","splay","splice","splinter","split","splosh","splurge","splutter","spoil","sponge","sponsor","spoof","spook","spool","spoon","sport","sports","spot","spotlight","spout","sprain","sprawl","spray","spread","spring","springboard","sprinkle","sprint","spritz","sprout","spruce","spur","spurn","spurt","sputter","spy","squabble","squall","squander","square","squash","squat","squawk","squeak","squeal","squeeze","squelch","squint","squirm","squirrel","squirt","squish","stab","stabilise","stabilize","stable","stables","stack","staff","stage","stagger","stagnate","stain","stake","stalk","stall","stammer","stamp","stampede","stanch","stand","standardise","standardize","staple","star","starch","stare","start","startle","starve","stash","state","statement","station","staunch","stave","stay","steady","steal","steam","steamroller","steel","steep","steepen","steer","stem","stencil","step","stereotype","sterilise","sterilize","stew","stick","stickybeak","stiff","stiffen","stifle","stigmatise","stigmatize","still","stimulate","sting","stinger","stink","stint","stipple","stipulate","stir","stitch","stock","stockpile","stoke","stomach","stomp","stone","stonewall","stoop","stop","stopper","store","storm","storyboard","stow","straddle","strafe","straggle","straighten","strain","strand","strangle","strap","stratify","stravage","stravaig","stray","streak","stream","streamline","strengthen","stress","stretch","stretcher","strew","stride","strike","string","strip","strive","stroll","structure","struggle","strum","strut","stub","stud","study","stuff","stultify","stumble","stump","stun","stunt","stupefy","stutter","style","stymie","sub","subcontract","subdivide","subdue","subedit","subject","sublet","sublimate","submerge","submit","subordinate","suborn","subpoena","subscribe","subside","subsidise","subsidize","subsist","substantiate","substitute","subsume","subtend","subtitle","subtract","subvert","succeed","succor","succour","succumb","suckle","suction","sue","suffer","suffice","suffocate","suffuse","sugar","suggest","suit","sulk","sulks","sully","sum","summarise","summarize","summon","summons","sun","sunbathe","sunder","sunset","sup","superimpose","superintend","superpose","supersede","supersize","supersized","supervene","supervise","supplant","supplement","supply","support","suppose","suppress","suppurate","surcharge","surf","surface","surge","surmise","surmount","surpass","surprise","surrender","surround","survey","survive","suspect","suspend","suspenders","suss","sustain","suture","swab","swaddle","swagger","swamp","swan","swank","swap","swarm","swat","swath","swathe","sway","swear","sweat","sweep","sweeps","sweeten","swell","swelter","swerve","swig","swill","swim","swindle","swing","swipe","swirl","swish","switch","swivel","swoon","swoop","swoosh","swot","symbolise","symbolize","sympathise","sympathize","symptomize","synchronise","synchronize","syndicate","synthesise","synthesize","syringe","systematise","systematize","tab","table","tabulate","tack","tackle","tag","tail","tailgate","tailor","taint","take","talk","tally","tame","tamp","tamper","tan","tangle","tango","tank","tankful","tantalise","tantalize","tap","tape","taper","tar","target","tarmac","tarnish","tarry","tart","task","taste","tattle","tattoo","taunt","tauten","tax","taxi","taxicab","teach","team","tear","tease","tee","teem","teeter","teethe","telecast","telecommute","teleconference","telegraph","telemeter","teleoperate","telephone","teleport","telescope","televise","telex","tell","telnet","temp","temper","temporise","temporize","tempt","tenant","tend","tender","tenderise","tenderize","tense","tension","tergiversate","term","terminate","terraform","terrify","terrorise","terrorize","test","testify","tether","text","thank","thatch","thaw","theorise","theorize","thicken","thin","think","thirst","thrash","thread","threaten","thresh","thrill","thrive","throb","throbbing","throng","throttle","throw","thud","thumb","thump","thunder","thwack","thwart","tick","ticket","tickle","tide","tidy","tie","tighten","tile","till","tilt","time","timetable","tinge","tingle","tingling","tinker","tinkling","tint","tip","tippex","tipple","tiptoe","tire","titillate","titivate","title","titrate","titter","toady","toast","toboggan","toddle","toe","tog","toggle","toil","tolerate","toll","tone","tongue","tonify","tool","toot","tootle","top","topple","torch","torment","torpedo","toss","tot","total","tote","totter","touch","tough","toughen","tour","tousle","tout","tow","towel","tower","toy","trace","track","trade","traduce","traffic","trail","train","traipse","trammel","trample","trampoline","tranquilize","tranquillize","transact","transcend","transcribe","transfer","transfigure","transfix","transform","transfuse","transgress","transit","translate","transliterate","transmit","transmogrify","transmute","transpire","transplant","transport","transpose","trap","trash","traumatise","traumatize","travel","traverse","trawl","tread","treasure","treat","treble","trek","tremble","trembling","trepan","trespass","trial","trick","trickle","trifle","trigger","trill","trim","trip","triple","triumph","trivialise","trivialize","troll","tromp","troop","trot","trouble","troubleshoot","trounce","trouser","truant","truck","trudge","trump","trumpet","truncate","trundle","truss","trust","try","tuck","tug","tugboat","tumble","tune","tunnel","turbocharge","turf","turn","tussle","tut","tutor","twang","tweak","tweet","twiddle","twig","twin","twine","twinkle","twirl","twist","twitch","twitter","twittering","type","typecast","typeset","typify","tyrannise","tyrannize","ulcerate","ululate","ump","umpire","unbalance","unban","unbend","unblock","unbuckle","unburden","unbutton","uncoil","uncork","uncouple","uncover","uncurl","undelete","underachieve","underbid","undercharge","undercook","undercut","underestimate","underestimation","underexpose","undergo","underlie","underline","undermine","underpay","underperform","underpin","underplay","underrate","underscore","undersell","undershoot","underspend","understand","understate","understudy","undertake","undervalue","underwrite","undo","undock","undress","undulate","unearth","unfasten","unfold","unfreeze","unfurl","unhand","unhinge","unhitch","unhook","unify","uninstall","unionise","unionize","unite","unlace","unlearn","unleash","unload","unlock","unloose","unloosen","unmask","unnerve","unpack","unpick","unplug","unravel","unroll","unsaddle","unscramble","unscrew","unseat","unsettle","unsubscribe","untangle","untie","unveil","unwind","unwrap","unzip","up","upbraid","upchange","upchuck","update","upend","upgrade","uphold","upholster","uplift","upload","uproot","upsell","upset","upshift","upskill","upstage","urge","use","usher","usurp","utilise","utilize","utter","vacate","vacation","vaccinate","vacillate","vacuum","valet","validate","value","vamoose","vandalise","vandalize","vanish","vanquish","vaporise","vaporize","varnish","vary","vault","veer","veg","vegetate","veil","vend","veneer","venerate","vent","ventilate","venture","verbalise","verbalize","verge","verify","versify","vest","vet","veto","vex","vibrate","victimise","victimize","vide","video","videotape","vie","view","viewing","vilify","vindicate","violate","visit","visualise","visualize","vitiate","vitrify","vocalize","voice","void","volley","volumise","volumize","volunteer","vote","vouch","vouchsafe","vow","voyage","vulgarise","vulgarize","waddle","wade","waffle","waft","wag","wage","wager","waggle","wail","wait","waive","wake","wakeboard","waken","walk","wall","wallop","wallow","wallpaper","waltz","wander","wane","wangle","want","warble","ward","warm","warn","warp","warrant","wash","wassail","waste","watch","water","waterproof","waterski","wave","waver","wax","waylay","weaken","wean","weaponise","weaponize","wear","weary","weasel","weather","weatherise","weatherize","weave","wed","wedge","weekend","weep","weigh","weight","weird","welch","welcome","weld","well","welly","wend","westernise","westernize","wet","whack","wheedle","wheel","wheeze","whelp","whet","whiff","while","whilst","whimper","whine","whinge","whinny","whip","whirl","whirr","whirring","whisk","whisper","whispering","whistle","whiten","whitewash","whittle","whoop","whoosh","whup","wick","widen","widow","wield","wig","wiggle","wildcat","will","wilt","wimp","win","wince","winch","wind","winds","windsurf","wine","wing","wink","winkle","winnow","winter","wipe","wire","wiretap","wise","wisecrack","wish","withdraw","wither","withhold","withstand","witness","witter","wobble","wolf","wonder","woo","woof","word","work","worm","worry","worsen","worship","worst","wound","wow","wowee","wrangle","wrap","wreak","wreathe","wreck","wrench","wrest","wrestle","wriggle","wring","wrinkle","writ","write","writhe","wrong","wrought","xerox","yack","yak","yap","yaw","yawn","yearn","yell","yellow","yelp","yield","yodel","yoke","yomp","yowl","yuppify","zap","zero","zigzag","zing","zip","zone","zoom"],er={adjective:Va,adverb:Ua,conjunction:Ya,interjection:qa,noun:Za,preposition:Xa,verb:Qa},ar=er,rr={airline:l,animal:A,app:R,cell_phone:E,color:H,commerce:I,company:q,database:Q,date:te,finance:fe,hacker:Ae,internet:Re,location:Ye,lorem:Xe,metadata:ea,music:na,person:xa,phone_number:Pa,science:Ha,team:za,vehicle:$a,word:ar},tr=rr,nr=["Pty Ltd","and Sons","Corp","Group","Brothers","Partners"],ir={suffix:nr},or=ir,lr=["com.au","com","net.au","net","org.au","org"],sr={domain_suffix:lr},cr=sr,ur=["####","###","##"],dr=["{{location.city_prefix}} {{person.firstName}}{{location.city_suffix}}","{{location.city_prefix}} {{person.firstName}}","{{person.firstName}}{{location.city_suffix}}","{{person.last_name}}{{location.city_suffix}}"],hr=["Australia"],pr=["####"],mr=["New South Wales","Queensland","Northern Territory","South Australia","Western Australia","Tasmania","Australian Capital Territory","Victoria"],yr=["NSW","QLD","NT","SA","WA","TAS","ACT","VIC"],gr=["{{person.firstName}} {{location.street_suffix}}","{{person.lastName}} {{location.street_suffix}}"],fr=["Avenue","Boulevard","Circle","Circuit","Court","Crescent","Crest","Drive","Estate Dr","Grove","Hill","Island","Junction","Knoll","Lane","Loop","Mall","Manor","Meadow","Mews","Parade","Parkway","Pass","Place","Plaza","Ridge","Road","Run","Square","Station St","Street","Summit","Terrace","Track","Trail","View Rd","Way"],br={building_number:ur,city_pattern:dr,default_country:hr,postcode:pr,state:mr,state_abbr:yr,street_pattern:gr,street_suffix:fr},kr=br,vr={title:"English (Australia)",code:"en_AU",country:"AU",language:"en",endonym:"English (Australia)",dir:"ltr",script:"Latn"},wr=vr,Cr=["Isabella","Ruby","Chloe","Olivia","Charlotte","Mia","Lily","Emily","Ella","Sienna","Sophie","Amelia","Grace","Ava","Zoe","Emma","Sophia","Matilda","Hannah","Jessica","Lucy","Georgia","Sarah","Abigail","Zara","Eva","Scarlett","Jasmine","Chelsea","Lilly","Ivy","Isla","Evie","Isabelle","Maddison","Layla","Summer","Annabelle","Alexis","Elizabeth","Bella","Holly","Lara","Madison","Alyssa","Maya","Tahlia","Claire","Hayley","Imogen","Jade","Ellie","Sofia","Addison","Molly","Phoebe","Alice","Savannah","Gabriella","Kayla","Mikayla","Abbey","Eliza","Willow","Alexandra","Poppy","Samantha","Stella","Amy","Amelie","Anna","Piper","Gemma","Isabel","Victoria","Stephanie","Caitlin","Heidi","Paige","Rose","Amber","Audrey","Claudia","Taylor","Madeline","Angelina","Natalie","Charli","Lauren","Ashley","Violet","Mackenzie","Abby","Skye","Lillian","Alana","Lola","Leah","Eve","Kiara"],Sr=["William","Jack","Oliver","Joshua","Thomas","Lachlan","Cooper","Noah","Ethan","Lucas","James","Samuel","Jacob","Liam","Alexander","Benjamin","Max","Isaac","Daniel","Riley","Ryan","Charlie","Tyler","Jake","Matthew","Xavier","Harry","Jayden","Nicholas","Harrison","Levi","Luke","Adam","Henry","Aiden","Dylan","Oscar","Michael","Jackson","Logan","Joseph","Blake","Nathan","Connor","Elijah","Nate","Archie","Bailey","Marcus","Cameron","Jordan","Zachary","Caleb","Hunter","Ashton","Toby","Aidan","Hayden","Mason","Hamish","Edward","Angus","Eli","Sebastian","Christian","Patrick","Andrew","Anthony","Luca","Kai","Beau","Alex","George","Callum","Finn","Zac","Mitchell","Jett","Jesse","Gabriel","Leo","Declan","Charles","Jasper","Jonathan","Aaron","Hugo","David","Christopher","Chase","Owen","Justin","Ali","Darcy","Lincoln","Cody","Phoenix","Sam","John","Joel"],Ar=wa(Cr,Sr),Mr=["Smith","Jones","Williams","Brown","Wilson","Taylor","Johnson","White","Martin","Anderson","Thompson","Nguyen","Thomas","Walker","Harris","Lee","Ryan","Robinson","Kelly","King","Davis","Wright","Evans","Roberts","Green","Hall","Wood","Jackson","Clarke","Patel","Khan","Lewis","James","Phillips","Mason","Mitchell","Rose","Davies","Rodriguez","Cox","Alexander","Garden","Campbell","Johnston","Moore","Smyth","O'Neill","Doherty","Stewart","Quinn","Murphy","Graham","Mclaughlin","Hamilton","Murray","Hughes","Robertson","Thomson","Scott","Macdonald","Reid","Clark","Ross","Young","Watson","Paterson","Morrison","Morgan","Griffiths","Edwards","Rees","Jenkins","Owen","Price","Moss","Richards","Abbott","Adams","Armstrong","Bahringer","Bailey","Barrows","Bartell","Bartoletti","Barton","Bauch","Baumbach","Bayer","Beahan","Beatty","Becker","Beier","Berge","Bergstrom","Bode","Bogan","Borer","Bosco","Botsford","Boyer","Boyle","Braun","Bruen","Carroll","Carter","Cartwright","Casper","Cassin","Champlin","Christiansen","Cole","Collier","Collins","Connelly","Conroy","Corkery","Cormier","Corwin","Cronin","Crooks","Cruickshank","Cummings","D'Amore","Daniel","Dare","Daugherty","Dickens","Dickinson","Dietrich","Donnelly","Dooley","Douglas","Doyle","Durgan","Ebert","Emard","Emmerich","Erdman","Ernser","Fadel","Fahey","Farrell","Fay","Feeney","Feil","Ferry","Fisher","Flatley","Gibson","Gleason","Glover","Goldner","Goodwin","Grady","Grant","Greenfelder","Greenholt","Grimes","Gutmann","Hackett","Hahn","Haley","Hammes","Hand","Hane","Hansen","Harber","Hartmann","Harvey","Hayes","Heaney","Heathcote","Heller","Hermann","Hermiston","Hessel","Hettinger","Hickle","Hill","Hills","Hoppe","Howe","Howell","Hudson","Huel","Hyatt","Jacobi","Jacobs","Jacobson","Jerde","Johns","Keeling","Kemmer","Kessler","Kiehn","Kirlin","Klein","Koch","Koelpin","Kohler","Koss","Kovacek","Kreiger","Kris","Kuhlman","Kuhn","Kulas","Kunde","Kutch","Lakin","Lang","Langworth","Larkin","Larson","Leannon","Leffler","Little","Lockman","Lowe","Lynch","Mann","Marks","Marvin","Mayer","Mccullough","Mcdermott","Mckenzie","Miller","Mills","Monahan","Morissette","Mueller","Muller","Nader","Nicolas","Nolan","O'Connell","O'Conner","O'Hara","O'Keefe","Olson","O'Reilly","Parisian","Parker","Quigley","Reilly","Reynolds","Rice","Ritchie","Rohan","Rolfson","Rowe","Russel","Rutherford","Sanford","Sauer","Schmidt","Schmitt","Schneider","Schroeder","Schultz","Shields","Smitham","Spencer","Stanton","Stark","Stokes","Swift","Tillman","Towne","Tremblay","Tromp","Turcotte","Turner","Walsh","Walter","Ward","Waters","Weber","Welch","West","Wilderman","Wilkinson","Williamson","Windler","Wolf"],Br=[{value:"{{person.last_name}}",weight:95},{value:"{{person.last_name}}-{{person.last_name}}",weight:5}],Tr={female_first_name:Cr,first_name:Ar,last_name:Mr,last_name_pattern:Br,male_first_name:Sr},xr=Tr,Rr=["0# #### ####","+61 # #### ####","04## ### ###","+61 4## ### ###"],Lr={formats:Rr},Pr=Lr,Er={company:or,internet:cr,location:kr,metadata:wr,person:xr,phone_number:Pr},Dr=Er,Nr=(r(4114),r(6573),r(8100),r(7936),r(9479),r(7467),r(4732),r(9577),r(4603),r(7566),r(8721),Object.defineProperty),Hr=(e,a,r)=>a in e?Nr(e,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[a]=r,Gr=(e,a,r)=>(Hr(e,"symbol"!=typeof a?a+"":a,r),r),Wr=class extends Error{};function Fr(e){let a=Object.getPrototypeOf(e);do{for(let r of Object.getOwnPropertyNames(a))"function"==typeof e[r]&&"constructor"!==r&&(e[r]=e[r].bind(e));a=Object.getPrototypeOf(a)}while(a!==Object.prototype)}var zr=class{constructor(e){this.faker=e,Fr(this)}},Ir=class extends zr{constructor(e){super(e),this.faker=e}},Or=(e=>(e.Narrowbody="narrowbody",e.Regional="regional",e.Widebody="widebody",e))(Or||{}),_r=["0","1","2","3","4","5","6","7","8","9"],Kr=["0","O","1","I","L"],Jr={regional:20,narrowbody:35,widebody:60},jr={regional:["A","B","C","D"],narrowbody:["A","B","C","D","E","F"],widebody:["A","B","C","D","E","F","G","H","J","K"]},$r=class extends Ir{airport(){return this.faker.helpers.arrayElement(this.faker.definitions.airline.airport)}airline(){return this.faker.helpers.arrayElement(this.faker.definitions.airline.airline)}airplane(){return this.faker.helpers.arrayElement(this.faker.definitions.airline.airplane)}recordLocator(e={}){let{allowNumerics:a=!1,allowVisuallySimilarCharacters:r=!1}=e,t=[];return a||t.push(..._r),r||t.push(...Kr),this.faker.string.alphanumeric({length:6,casing:"upper",exclude:t})}seat(e={}){let{aircraftType:a="narrowbody"}=e,r=Jr[a],t=jr[a],n=this.faker.number.int({min:1,max:r}),i=this.faker.helpers.arrayElement(t);return`${n}${i}`}aircraftType(){return this.faker.helpers.enumValue(Or)}flightNumber(e={}){let{length:a={min:1,max:4},addLeadingZeros:r=!1}=e,t=this.faker.string.numeric({length:a,allowLeadingZeros:!1});return r?t.padStart(4,"0"):t}},Vr=(e=>(e.SRGB="sRGB",e.DisplayP3="display-p3",e.REC2020="rec2020",e.A98RGB="a98-rgb",e.ProphotoRGB="prophoto-rgb",e))(Vr||{}),Ur=(e=>(e.RGB="rgb",e.RGBA="rgba",e.HSL="hsl",e.HSLA="hsla",e.HWB="hwb",e.CMYK="cmyk",e.LAB="lab",e.LCH="lch",e.COLOR="color",e))(Ur||{});function Yr(e,a){let{prefix:r,casing:t}=a;switch(t){case"upper":e=e.toUpperCase();break;case"lower":e=e.toLowerCase();break;case"mixed":}return r&&(e=r+e),e}function qr(e){return e.map((e=>{if(e%1!==0){let a=new ArrayBuffer(4);new DataView(a).setFloat32(0,e);let r=new Uint8Array(a);return qr([...r]).replace(/ /g,"")}return(e>>>0).toString(2).padStart(8,"0")})).join(" ")}function Zr(e,a="rgb",r="sRGB"){let t=e=>Math.round(100*e);switch(a){case"rgba":return`rgba(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`;case"color":return`color(${r} ${e[0]} ${e[1]} ${e[2]})`;case"cmyk":return`cmyk(${t(e[0])}%, ${t(e[1])}%, ${t(e[2])}%, ${t(e[3])}%)`;case"hsl":return`hsl(${e[0]}deg ${t(e[1])}% ${t(e[2])}%)`;case"hsla":return`hsl(${e[0]}deg ${t(e[1])}% ${t(e[2])}% / ${t(e[3])})`;case"hwb":return`hwb(${e[0]} ${t(e[1])}% ${t(e[2])}%)`;case"lab":return`lab(${t(e[0])}% ${e[1]} ${e[2]})`;case"lch":return`lch(${t(e[0])}% ${e[1]} ${e[2]})`;case"rgb":default:return`rgb(${e[0]}, ${e[1]}, ${e[2]})`}}function Xr(e,a,r="rgb",t="sRGB"){switch(a){case"css":return Zr(e,r,t);case"binary":return qr(e);case"decimal":default:return e}}var Qr=class extends Ir{human(){return this.faker.helpers.arrayElement(this.faker.definitions.color.human)}space(){return this.faker.helpers.arrayElement(this.faker.definitions.color.space)}cssSupportedFunction(){return this.faker.helpers.enumValue(Ur)}cssSupportedSpace(){return this.faker.helpers.enumValue(Vr)}rgb(e={}){let a,{format:r="hex",includeAlpha:t=!1,prefix:n="#",casing:i="lower"}=e,o="rgb";return"hex"===r?(a=this.faker.string.hexadecimal({length:t?8:6,prefix:""}),a=Yr(a,{prefix:n,casing:i}),a):(a=Array.from({length:3},(()=>this.faker.number.int(255))),t&&(a.push(this.faker.number.float({multipleOf:.01})),o="rgba"),Xr(a,r,o))}cmyk(e){let a=Array.from({length:4},(()=>this.faker.number.float({multipleOf:.01})));return Xr(a,(null==e?void 0:e.format)||"decimal","cmyk")}hsl(e){let a=[this.faker.number.int(360)];for(let r=0;r<(null!=e&&e.includeAlpha?3:2);r++)a.push(this.faker.number.float({multipleOf:.01}));return Xr(a,(null==e?void 0:e.format)||"decimal",null!=e&&e.includeAlpha?"hsla":"hsl")}hwb(e){let a=[this.faker.number.int(360)];for(let r=0;r<2;r++)a.push(this.faker.number.float({multipleOf:.01}));return Xr(a,(null==e?void 0:e.format)||"decimal","hwb")}lab(e){let a=[this.faker.number.float({multipleOf:1e-6})];for(let r=0;r<2;r++)a.push(this.faker.number.float({min:-100,max:100,multipleOf:1e-4}));return Xr(a,(null==e?void 0:e.format)||"decimal","lab")}lch(e){let a=[this.faker.number.float({multipleOf:1e-6})];for(let r=0;r<2;r++)a.push(this.faker.number.float({max:230,multipleOf:.1}));return Xr(a,(null==e?void 0:e.format)||"decimal","lch")}colorByCSSColorSpace(e){"css"===(null==e?void 0:e.format)&&(null==e||!e.space)&&(e={...e,space:"sRGB"});let a=Array.from({length:3},(()=>this.faker.number.float({multipleOf:1e-4})));return Xr(a,(null==e?void 0:e.format)||"decimal","color",null==e?void 0:e.space)}},et=()=>{throw new Wr("You cannot edit the locale data on the faker instance")};function at(e){let a={};return new Proxy(e,{has(){return!0},get(e,r){return"symbol"==typeof r||"nodeType"===r?e[r]:r in a?a[r]:a[r]=tt(r,e[r])},set:et,deleteProperty:et})}function rt(e,...a){if(null===e)throw new Wr(`The locale data for '${a.join(".")}' aren't applicable to this locale.\n  If you think this is a bug, please report it at: https://github.com/faker-js/faker`);if(void 0===e)throw new Wr(`The locale data for '${a.join(".")}' are missing in this locale.\n  Please contribute the missing data to the project or use a locale/Faker instance that has these data.\n  For more information see https://fakerjs.dev/guide/localization.html`)}function tt(e,a={}){return new Proxy(a,{has(e,a){return null!=e[a]},get(a,r){let t=a[r];return"symbol"==typeof r||"nodeType"===r||rt(t,e,r.toString()),t},set:et,deleteProperty:et})}var nt=(e=>(e.Female="female",e.Male="male",e))(nt||{});function it(e,a,r,{generic:t,female:n,male:i},o){let l;switch(r){case"female":l=n;break;case"male":l=i;break;default:l=t;break}return null==l&&(l=null!=n&&null!=i?e.helpers.arrayElement([n,i]):t,rt(l,`person.{${o}, female_${o}, male_${o}}`)),a(l)}var ot=class extends Ir{firstName(e){var a;let{first_name:r,female_first_name:t,male_first_name:n}=null!=(a=this.faker.rawDefinitions.person)?a:{};return it(this.faker,this.faker.helpers.arrayElement,e,{generic:r,female:t,male:n},"first_name")}lastName(e){var a;let{last_name:r,female_last_name:t,male_last_name:n,last_name_pattern:i,male_last_name_pattern:o,female_last_name_pattern:l}=null!=(a=this.faker.rawDefinitions.person)?a:{};if(null!=i||null!=o||null!=l){let a=it(this.faker,this.faker.helpers.weightedArrayElement,e,{generic:i,female:l,male:o},"last_name_pattern");return this.faker.helpers.fake(a)}return it(this.faker,this.faker.helpers.arrayElement,e,{generic:r,female:t,male:n},"last_name")}middleName(e){var a;let{middle_name:r,female_middle_name:t,male_middle_name:n}=null!=(a=this.faker.rawDefinitions.person)?a:{};return it(this.faker,this.faker.helpers.arrayElement,e,{generic:r,female:t,male:n},"middle_name")}fullName(e={}){let{sex:a=this.faker.helpers.arrayElement(["female","male"]),firstName:r=this.firstName(a),lastName:t=this.lastName(a)}=e,n=this.faker.helpers.weightedArrayElement(this.faker.definitions.person.name);return this.faker.helpers.mustache(n,{"person.prefix":()=>this.prefix(a),"person.firstName":()=>r,"person.middleName":()=>this.middleName(a),"person.lastName":()=>t,"person.suffix":()=>this.suffix()})}gender(){return this.faker.helpers.arrayElement(this.faker.definitions.person.gender)}sex(){return this.faker.helpers.arrayElement(this.faker.definitions.person.sex)}sexType(){return this.faker.helpers.enumValue(nt)}bio(){let{bio_pattern:e}=this.faker.definitions.person;return this.faker.helpers.fake(e)}prefix(e){var a;let{prefix:r,female_prefix:t,male_prefix:n}=null!=(a=this.faker.rawDefinitions.person)?a:{};return it(this.faker,this.faker.helpers.arrayElement,e,{generic:r,female:t,male:n},"prefix")}suffix(){return this.faker.helpers.arrayElement(this.faker.definitions.person.suffix)}jobTitle(){return this.faker.helpers.fake(this.faker.definitions.person.job_title_pattern)}jobDescriptor(){let e=this.faker.definitions.person.title.descriptor;if(null==e)throw new Wr("No person.title.descriptor definitions available.");return this.faker.helpers.arrayElement(e)}jobArea(){let e=this.faker.definitions.person.title.level;if(null==e)throw new Wr("No person.title.area definitions available.");return this.faker.helpers.arrayElement(e)}jobType(){let e=this.faker.definitions.person.title.job;if(null==e)throw new Wr("No person.title.job definitions available.");return this.faker.helpers.arrayElement(e)}zodiacSign(){return this.faker.helpers.arrayElement(this.faker.definitions.person.western_zodiac_sign)}},lt=class{constructor(){Gr(this,"N",624),Gr(this,"M",397),Gr(this,"MATRIX_A",2567483615),Gr(this,"UPPER_MASK",2147483648),Gr(this,"LOWER_MASK",2147483647),Gr(this,"mt",Array.from({length:this.N})),Gr(this,"mti",this.N+1),Gr(this,"mag01",[0,this.MATRIX_A])}unsigned32(e){return e<0?(e^this.UPPER_MASK)+this.UPPER_MASK:e}subtraction32(e,a){return e<a?this.unsigned32(4294967296-(a-e)&4294967295):e-a}addition32(e,a){return this.unsigned32(e+a&4294967295)}multiplication32(e,a){let r=0;for(let t=0;t<32;++t)e>>>t&1&&(r=this.addition32(r,this.unsigned32(a<<t)));return r}initGenrand(e){for(this.mt[0]=this.unsigned32(4294967295&e),this.mti=1;this.mti<this.N;this.mti++)this.mt[this.mti]=this.addition32(this.multiplication32(1812433253,this.unsigned32(this.mt[this.mti-1]^this.mt[this.mti-1]>>>30)),this.mti),this.mt[this.mti]=this.unsigned32(4294967295&this.mt[this.mti])}initByArray(e,a){this.initGenrand(19650218);let r=1,t=0,n=this.N>a?this.N:a;for(;n;n--)this.mt[r]=this.addition32(this.addition32(this.unsigned32(this.mt[r]^this.multiplication32(this.unsigned32(this.mt[r-1]^this.mt[r-1]>>>30),1664525)),e[t]),t),this.mt[r]=this.unsigned32(4294967295&this.mt[r]),r++,t++,r>=this.N&&(this.mt[0]=this.mt[this.N-1],r=1),t>=a&&(t=0);for(n=this.N-1;n;n--)this.mt[r]=this.subtraction32(this.unsigned32(this.mt[r]^this.multiplication32(this.unsigned32(this.mt[r-1]^this.mt[r-1]>>>30),1566083941)),r),this.mt[r]=this.unsigned32(4294967295&this.mt[r]),r++,r>=this.N&&(this.mt[0]=this.mt[this.N-1],r=1);this.mt[0]=2147483648}genrandInt32(){let e;if(this.mti>=this.N){let a;for(this.mti===this.N+1&&this.initGenrand(5489),a=0;a<this.N-this.M;a++)e=this.unsigned32(this.mt[a]&this.UPPER_MASK|this.mt[a+1]&this.LOWER_MASK),this.mt[a]=this.unsigned32(this.mt[a+this.M]^e>>>1^this.mag01[1&e]);for(;a<this.N-1;a++)e=this.unsigned32(this.mt[a]&this.UPPER_MASK|this.mt[a+1]&this.LOWER_MASK),this.mt[a]=this.unsigned32(this.mt[a+(this.M-this.N)]^e>>>1^this.mag01[1&e]);e=this.unsigned32(this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK),this.mt[this.N-1]=this.unsigned32(this.mt[this.M-1]^e>>>1^this.mag01[1&e]),this.mti=0}return e=this.mt[this.mti++],e=this.unsigned32(e^e>>>11),e=this.unsigned32(e^e<<7&2636928640),e=this.unsigned32(e^e<<15&4022730752),e=this.unsigned32(e^e>>>18),e}genrandInt31(){return this.genrandInt32()>>>1}genrandReal1(){return this.genrandInt32()*(1/4294967295)}genrandReal2(){return this.genrandInt32()*(1/4294967296)}genrandReal3(){return(this.genrandInt32()+.5)*(1/4294967296)}genrandRes53(){let e=this.genrandInt32()>>>5,a=this.genrandInt32()>>>6;return(67108864*e+a)*(1/9007199254740992)}};function st(){let e=new lt;return e.initGenrand(Math.ceil(Math.random()*Number.MAX_SAFE_INTEGER)),{next(){return e.genrandReal2()},seed(a){"number"==typeof a?e.initGenrand(a):Array.isArray(a)&&e.initByArray(a,a.length)}}}function ct(e){let a=`[@faker-js/faker]: ${e.deprecated} is deprecated`;e.since&&(a+=` since v${e.since}`),e.until&&(a+=` and will be removed in v${e.until}`),e.proposed&&(a+=`. Please use ${e.proposed} instead`),console.warn(`${a}.`)}var ut=class extends zr{number(e=99999){ct({deprecated:"faker.datatype.number()",proposed:"faker.number.int()",since:"8.0",until:"9.0"}),"number"==typeof e&&(e={max:e});let{min:a=0,max:r=a+99999,precision:t=1}=e;return this.faker.number.float({min:a,max:r,multipleOf:t})}float(e={}){ct({deprecated:"faker.datatype.float()",proposed:"faker.number.float()",since:"8.0",until:"9.0"}),"number"==typeof e&&(e={precision:e});let{min:a=0,max:r=a+99999,precision:t=.01}=e;return this.faker.number.float({min:a,max:r,multipleOf:t})}datetime(e={}){ct({deprecated:"faker.datatype.datetime({ min, max })",proposed:"faker.date.between({ from, to }) or faker.date.anytime()",since:"8.0",until:"9.0"});let a=864e13,r="number"==typeof e?void 0:e.min,t="number"==typeof e?e:e.max;return(null==r||r<-1*a)&&(r=Date.UTC(1990,0)),(null==t||t>a)&&(t=Date.UTC(2100,0)),this.faker.date.between({from:r,to:t})}string(e={}){ct({deprecated:"faker.datatype.string()",proposed:"faker.string.sample()",since:"8.0",until:"9.0"}),"number"==typeof e&&(e={length:e});let{length:a=10}=e;return this.faker.string.sample(a)}uuid(){return ct({deprecated:"faker.datatype.uuid()",proposed:"faker.string.uuid()",since:"8.0",until:"9.0"}),this.faker.string.uuid()}boolean(e={}){"number"==typeof e&&(e={probability:e});let{probability:a=.5}=e;return!(a<=0)&&(a>=1||this.faker.number.float()<a)}hexadecimal(e={}){return ct({deprecated:"faker.datatype.hexadecimal()",proposed:"faker.string.hexadecimal() or faker.number.hex()",since:"8.0",until:"9.0"}),this.faker.string.hexadecimal({...e,casing:e.case})}json(){ct({deprecated:"faker.datatype.json()",proposed:"your own function to generate complex objects",since:"8.0",until:"9.0"});let e=["foo","bar","bike","a","b","name","prop"],a={};for(let r of e)a[r]=this.boolean()?this.faker.string.sample():this.faker.number.int();return JSON.stringify(a)}array(e=10){return ct({deprecated:"faker.datatype.array()",proposed:"your own function to build complex arrays",since:"8.0",until:"9.0"}),this.faker.helpers.multiple((()=>this.boolean()?this.faker.string.sample():this.faker.number.int()),{count:e})}bigInt(e){return ct({deprecated:"faker.datatype.bigInt()",proposed:"faker.number.bigInt()",since:"8.0",until:"9.0"}),this.faker.number.bigInt(e)}};function dt(e,a){return null==e?a():(e=new Date(e),Number.isNaN(e.valueOf())&&(e=a()),e)}var ht=class extends zr{anytime(e={}){let{refDate:a}=e,r=dt(a,this.faker.defaultRefDate);return this.between({from:new Date(r.getTime()-31536e6),to:new Date(r.getTime()+31536e6)})}past(e={},a){"number"==typeof e&&(ct({deprecated:"faker.date.past(years, refDate)",proposed:"faker.date.past({ years, refDate })",since:"8.0",until:"9.0"}),e={years:e});let{years:r=1,refDate:t=a}=e;if(r<=0)throw new Wr("Years must be greater than 0.");let n=dt(t,this.faker.defaultRefDate),i={min:1e3,max:365*r*24*3600*1e3},o=n.getTime();return o-=this.faker.number.int(i),n.setTime(o),n}future(e={},a){"number"==typeof e&&(ct({deprecated:"faker.date.future(years, refDate)",proposed:"faker.date.future({ years, refDate })",since:"8.0",until:"9.0"}),e={years:e});let{years:r=1,refDate:t=a}=e;if(r<=0)throw new Wr("Years must be greater than 0.");let n=dt(t,this.faker.defaultRefDate),i={min:1e3,max:365*r*24*3600*1e3},o=n.getTime();return o+=this.faker.number.int(i),n.setTime(o),n}between(e,a){(e instanceof Date||"object"!=typeof e)&&(ct({deprecated:"faker.date.between(from, to)",proposed:"faker.date.between({ from, to })",since:"8.0",until:"9.0"}),e={from:e,to:null!=a?a:e});let{from:r,to:t}=e,n=dt(r,this.faker.defaultRefDate).getTime(),i=dt(t,this.faker.defaultRefDate).getTime(),o=this.faker.number.int(i-n);return new Date(n+o)}betweens(e,a,r=3){(e instanceof Date||"object"!=typeof e)&&(ct({deprecated:"faker.date.betweens(from, to, count)",proposed:"faker.date.betweens({ from, to, count })",since:"8.0",until:"9.0"}),e={from:e,to:null!=a?a:e,count:r});let{from:t,to:n,count:i=3}=e;return this.faker.helpers.multiple((()=>this.between({from:t,to:n})),{count:i}).sort(((e,a)=>e.getTime()-a.getTime()))}recent(e={},a){"number"==typeof e&&(ct({deprecated:"faker.date.recent(days, refDate)",proposed:"faker.date.recent({ days, refDate })",since:"8.0",until:"9.0"}),e={days:e});let{days:r=1,refDate:t=a}=e;if(r<=0)throw new Wr("Days must be greater than 0.");let n=dt(t,this.faker.defaultRefDate),i={min:1e3,max:24*r*3600*1e3},o=n.getTime();return o-=this.faker.number.int(i),n.setTime(o),n}soon(e={},a){"number"==typeof e&&(ct({deprecated:"faker.date.soon(days, refDate)",proposed:"faker.date.soon({ days, refDate })",since:"8.0",until:"9.0"}),e={days:e});let{days:r=1,refDate:t=a}=e;if(r<=0)throw new Wr("Days must be greater than 0.");let n=dt(t,this.faker.defaultRefDate),i={min:1e3,max:24*r*3600*1e3},o=n.getTime();return o+=this.faker.number.int(i),n.setTime(o),n}birthdate(e={}){var a,r,t,n;let i,o,l="age"===e.mode?"age":"year",s=dt(e.refDate,this.faker.defaultRefDate),c=s.getUTCFullYear();if("age"===l?(i=new Date(s).setUTCFullYear(c-(null!=(a=e.max)?a:80)-1),o=new Date(s).setUTCFullYear(c-(null!=(r=e.min)?r:18))):(i=new Date(Date.UTC(0,0,2)).setUTCFullYear(null!=(t=e.min)?t:c-80),o=new Date(Date.UTC(0,11,30)).setUTCFullYear(null!=(n=e.max)?n:c-19)),o<i)throw new Wr(`Max ${e.max} should be larger than or equal to min ${e.min}.`);return new Date(this.faker.number.int({min:i,max:o}))}},pt=class extends ht{constructor(e){super(e),this.faker=e}month(e={}){let{abbr:a,abbreviated:r=null!=a&&a,context:t=!1}=e;null!=a&&ct({deprecated:"faker.date.month({ abbr })",proposed:"faker.date.month({ abbreviated })",since:"8.0",until:"9.0"});let n,i=this.faker.definitions.date.month;n=r?t&&null!=i.abbr_context?"abbr_context":"abbr":t&&null!=i.wide_context?"wide_context":"wide";let o=i[n];return rt(o,"date.month",n),this.faker.helpers.arrayElement(o)}weekday(e={}){let{abbr:a,abbreviated:r=null!=a&&a,context:t=!1}=e;null!=a&&ct({deprecated:"faker.date.weekday({ abbr })",proposed:"faker.date.weekday({ abbreviated })",since:"8.0",until:"9.0"});let n,i=this.faker.definitions.date.weekday;n=r?t&&null!=i.abbr_context?"abbr_context":"abbr":t&&null!=i.wide_context?"wide_context":"wide";let o=i[n];return rt(o,"date.weekday",n),this.faker.helpers.arrayElement(o)}},mt=/\.|\(/;function yt(e,a,r=[a,a.rawDefinitions]){if(0===e.length)throw new Wr("Eval expression cannot be empty.");if(0===r.length)throw new Wr("Eval entrypoints cannot be empty.");let t=r,n=e;do{let e;n.startsWith("(")?[e,t]=gt(n,t):[e,t]=bt(n,t),n=n.substring(e),t=t.filter((e=>null!=e)).map((e=>Array.isArray(e)?a.helpers.arrayElement(e):e))}while(n.length>0&&t.length>0);if(0===t.length)throw new Wr(`Cannot resolve expression '${e}'`);let i=t[0];return"function"==typeof i?i():i}function gt(e,a){let[r,t]=ft(e),n=e[r+1];switch(n){case".":case"(":case void 0:break;default:throw new Wr(`Expected dot ('.'), open parenthesis ('('), or nothing after function call but got '${n}'`)}return[r+("."===n?2:1),a.map((e=>"function"==typeof e?e(...t):e))]}function ft(e){let a=e.indexOf(")",1);if(-1===a)throw new Wr(`Missing closing parenthesis in '${e}'`);for(;-1!==a;){let r=e.substring(1,a);try{return[a,JSON.parse(`[${r}]`)]}catch{if(!r.includes("'")&&!r.includes('"'))try{return[a,JSON.parse(`["${r}"]`)]}catch{}}a=e.indexOf(")",a+1)}a=e.lastIndexOf(")");let r=e.substring(1,a);return[a,[r]]}function bt(e,a){var r,t;let n=mt.exec(e),i="."===(null!=(r=null==n?void 0:n[0])?r:""),o=null!=(t=null==n?void 0:n.index)?t:e.length,l=e.substring(0,o);if(0===l.length)throw new Wr(`Expression parts cannot be empty in '${e}'`);let s=e[o+1];if(i&&(null==s||"."===s||"("===s))throw new Wr(`Found dot without property name in '${e}'`);return[o+(i?1:0),a.map((e=>kt(e,l)))]}function kt(e,a){switch(typeof e){case"function":try{e=e()}catch{return}return null==e?void 0:e[a];case"object":return null==e?void 0:e[a];default:return}}function vt(e){let a=wt(e.replace(/L?$/,"0"));return 0===a?0:10-a}function wt(e){e=e.replace(/[\s-]/g,"");let a=0,r=!1;for(let t=e.length-1;t>=0;t--){let n=Number.parseInt(e[t]);r&&(n*=2,n>9&&(n=n%10+1)),a+=n,r=!r}return a%10}function Ct(e,a){return void 0===e[a]?-1:0}function St(e,a,r,t,n){throw console.error("Error",r),console.log(`Found ${Object.keys(t).length} unique entries before throwing error.\nretried: ${n}\ntotal time: ${a-e}ms`),new Wr(`${r} for uniqueness check.\n\nMay not be able to generate any more unique values with current settings.\nTry adjusting maxTime or maxRetries parameters for faker.helpers.unique().`)}function At(e,a,r={}){let t=Date.now(),{startTime:n=Date.now(),maxTime:i=50,maxRetries:o=50,currentIterations:l=0,compare:s=Ct,store:c={}}=r,{exclude:u=[]}=r;if(r.currentIterations=l,Array.isArray(u)||(u=[u]),t-n>=i)return St(n,t,`Exceeded maxTime: ${i}`,c,l);if(l>=o)return St(n,t,`Exceeded maxRetries: ${o}`,c,l);let d=e(...a);return-1!==s(c,d)||u.includes(d)?(r.currentIterations++,At(e,a,{...r,startTime:n,maxTime:i,maxRetries:o,compare:s,exclude:u})):(c[d]=d,r.currentIterations=0,d)}function Mt(e,a,r,t){let n=1;if(a)switch(a){case"?":n=e.datatype.boolean()?0:1;break;case"*":{let a=1;for(;e.datatype.boolean();)a*=2;n=e.number.int({min:0,max:a});break}case"+":{let a=1;for(;e.datatype.boolean();)a*=2;n=e.number.int({min:1,max:a});break}default:throw new Wr("Unknown quantifier symbol provided.")}else null!=r&&null!=t?n=e.number.int({min:Number.parseInt(r),max:Number.parseInt(t)}):null!=r&&null==t&&(n=Number.parseInt(r));return n}function Bt(e,a=""){let r,t,n,i,o=/(.)\{(\d+),(\d+)\}/,l=/(.)\{(\d+)\}/,s=/\[(\d+)-(\d+)\]/,c=o.exec(a);for(;null!=c;)r=Number.parseInt(c[2]),t=Number.parseInt(c[3]),r>t&&(n=t,t=r,r=n),i=e.number.int({min:r,max:t}),a=a.slice(0,c.index)+c[1].repeat(i)+a.slice(c.index+c[0].length),c=o.exec(a);for(c=l.exec(a);null!=c;)i=Number.parseInt(c[2]),a=a.slice(0,c.index)+c[1].repeat(i)+a.slice(c.index+c[0].length),c=l.exec(a);for(c=s.exec(a);null!=c;)r=Number.parseInt(c[1]),t=Number.parseInt(c[2]),r>t&&(n=t,t=r,r=n),a=a.slice(0,c.index)+e.number.int({min:r,max:t}).toString()+a.slice(c.index+c[0].length),c=s.exec(a);return a}function Tt(e,a="",r="#"){let t="";for(let n=0;n<a.length;n++)a.charAt(n)===r?t+=e.number.int(9):"!"===a.charAt(n)?t+=e.number.int({min:2,max:9}):t+=a.charAt(n);return t}var xt=class extends zr{constructor(){super(...arguments),Gr(this,"uniqueStore",{})}slugify(e=""){return e.normalize("NFKD").replace(/[\u0300-\u036F]/g,"").replace(/ /g,"-").replace(/[^\w.-]+/g,"")}replaceSymbolWithNumber(e="",a="#"){return ct({deprecated:"faker.helpers.replaceSymbolWithNumber",proposed:"string.replace(/#+/g, (m) => faker.string.numeric(m.length))",since:"8.4",until:"9.0"}),Tt(this.faker,e,a)}replaceSymbols(e=""){let a=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],r="";for(let t=0;t<e.length;t++)"#"===e.charAt(t)?r+=this.faker.number.int(9):"?"===e.charAt(t)?r+=this.arrayElement(a):"*"===e.charAt(t)?r+=this.faker.datatype.boolean()?this.arrayElement(a):this.faker.number.int(9):r+=e.charAt(t);return r}replaceCreditCardSymbols(e="6453-####-####-####-###L",a="#"){e=Bt(this.faker,e),e=Tt(this.faker,e,a);let r=vt(e);return e.replace("L",String(r))}regexpStyleStringParse(e=""){return ct({deprecated:"faker.helpers.regexpStyleStringParse",proposed:"faker.helpers.fromRegExp",since:"8.1",until:"9.0"}),Bt(this.faker,e)}fromRegExp(e){var a,r,t,n,i,o,l;let s=!1;e instanceof RegExp&&(s=e.flags.includes("i"),e=e.toString(),e=null!=(r=null==(a=/\/(.+?)\//.exec(e))?void 0:a[1])?r:"");let c,u,d,h=/([.A-Za-z0-9])(?:\{(\d+)(?:,(\d+)|)\}|(\?|\*|\+))(?![^[]*]|[^{]*})/,p=h.exec(e);for(;null!=p;){let a=p[2],r=p[3],t=p[4];d=Mt(this.faker,t,a,r),e=e.slice(0,p.index)+p[1].repeat(d)+e.slice(p.index+p[0].length),p=h.exec(e)}let m=/(\d-\d|\w-\w|\d|\w|[-!@#$&()`.+,/"])/,y=/\[(\^|)(-|)(.+?)\](?:\{(\d+)(?:,(\d+)|)\}|(\?|\*|\+)|)/;for(p=y.exec(e);null!=p;){let a="^"===p[1],r="-"===p[2],h=p[4],g=p[5],f=p[6],b=[],k=p[3],v=m.exec(k);for(r&&b.push(45);null!=v;){if(v[0].includes("-")){let e=v[0].split("-").map((e=>{var a;return null!=(a=e.codePointAt(0))?a:Number.NaN}));if(c=e[0],u=e[1],c>u)throw new Wr("Character range provided is out of order.");for(let a=c;a<=u;a++)if(s&&Number.isNaN(Number(String.fromCodePoint(a)))){let e=String.fromCodePoint(a);b.push(null!=(t=e.toUpperCase().codePointAt(0))?t:Number.NaN,null!=(n=e.toLowerCase().codePointAt(0))?n:Number.NaN)}else b.push(a)}else s&&Number.isNaN(Number(v[0]))?b.push(null!=(i=v[0].toUpperCase().codePointAt(0))?i:Number.NaN,null!=(o=v[0].toLowerCase().codePointAt(0))?o:Number.NaN):b.push(null!=(l=v[0].codePointAt(0))?l:Number.NaN);k=k.substring(v[0].length),v=m.exec(k)}if(d=Mt(this.faker,f,h,g),a){let e=-1;for(let a=48;a<=57;a++)e=b.indexOf(a),e>-1?b.splice(e,1):b.push(a);for(let a=65;a<=90;a++)e=b.indexOf(a),e>-1?b.splice(e,1):b.push(a);for(let a=97;a<=122;a++)e=b.indexOf(a),e>-1?b.splice(e,1):b.push(a)}let w=this.multiple((()=>String.fromCodePoint(this.arrayElement(b))),{count:d}).join("");e=e.slice(0,p.index)+w+e.slice(p.index+p[0].length),p=y.exec(e)}let g=/(.)\{(\d+),(\d+)\}/;for(p=g.exec(e);null!=p;){if(c=Number.parseInt(p[2]),u=Number.parseInt(p[3]),c>u)throw new Wr("Numbers out of order in {} quantifier.");d=this.faker.number.int({min:c,max:u}),e=e.slice(0,p.index)+p[1].repeat(d)+e.slice(p.index+p[0].length),p=g.exec(e)}let f=/(.)\{(\d+)\}/;for(p=f.exec(e);null!=p;)d=Number.parseInt(p[2]),e=e.slice(0,p.index)+p[1].repeat(d)+e.slice(p.index+p[0].length),p=f.exec(e);return e}shuffle(e,a={}){let{inplace:r=!1}=a;r||(e=[...e]);for(let t=e.length-1;t>0;--t){let a=this.faker.number.int(t);[e[t],e[a]]=[e[a],e[t]]}return e}uniqueArray(e,a){if(Array.isArray(e)){let r=[...new Set(e)];return this.shuffle(r).splice(0,a)}let r=new Set;try{if("function"==typeof e){let t=1e3*a,n=0;for(;r.size<a&&n<t;)r.add(e()),n++}}catch{}return[...r]}mustache(e,a){if(null==e)return"";for(let r in a){let t=new RegExp(`{{${r}}}`,"g"),n=a[r];"string"==typeof n&&(n=n.replace(/\$/g,"$$$$")),e=e.replace(t,n)}return e}maybe(e,a={}){if(this.faker.datatype.boolean(a))return e()}objectKey(e){let a=Object.keys(e);return this.arrayElement(a)}objectValue(e){let a=this.faker.helpers.objectKey(e);return e[a]}objectEntry(e){let a=this.faker.helpers.objectKey(e);return[a,e[a]]}arrayElement(e){if(null==e)throw new Wr("Calling `faker.helpers.arrayElement()` without arguments is no longer supported.");if(0===e.length)throw new Wr("Cannot get value from empty dataset.");let a=e.length>1?this.faker.number.int({max:e.length-1}):0;return e[a]}weightedArrayElement(e){if(0===e.length)throw new Wr("weightedArrayElement expects an array with at least one element");if(!e.every((e=>e.weight>0)))throw new Wr("weightedArrayElement expects an array of { weight, value } objects where weight is a positive number");let a=e.reduce(((e,{weight:a})=>e+a),0),r=this.faker.number.float({min:0,max:a}),t=0;for(let{weight:n,value:i}of e)if(t+=n,r<t)return i;return e[e.length-1].value}arrayElements(e,a){if(null==e)throw new Wr("Calling `faker.helpers.arrayElements()` without arguments is no longer supported.");if(0===e.length)return[];let r=this.rangeToNumber(null!=a?a:{min:1,max:e.length});if(r>=e.length)return this.shuffle(e);if(r<=0)return[];let t,n,i=[...e],o=e.length,l=o-r;for(;o-- >l;)n=this.faker.number.int(o),t=i[n],i[n]=i[o],i[o]=t;return i.slice(l)}enumValue(e){let a=Object.keys(e).filter((e=>Number.isNaN(Number(e)))),r=this.arrayElement(a);return e[r]}rangeToNumber(e){return"number"==typeof e?e:this.faker.number.int(e)}unique(e,a=[],r={}){ct({deprecated:"faker.helpers.unique",proposed:"https://github.com/faker-js/faker/issues/1785#issuecomment-1407773744",since:"8.0",until:"9.0"});let{maxTime:t=50,maxRetries:n=50,exclude:i=[],store:o=this.uniqueStore}=r;return At(e,a,{...r,startTime:Date.now(),maxTime:t,maxRetries:n,currentIterations:0,exclude:i,store:o})}multiple(e,a={}){var r;let t=this.rangeToNumber(null!=(r=a.count)?r:3);return t<=0?[]:Array.from({length:t},e)}},Rt=class extends xt{constructor(e){super(e),this.faker=e}fake(e){e="string"==typeof e?e:this.arrayElement(e);let a=e.search(/{{[a-z]/),r=e.indexOf("}}",a);if(-1===a||-1===r)return e;let t=e.substring(a+2,r+2).replace("}}","").replace("{{",""),n=yt(t,this.faker),i=String(n),o=e.substring(0,a)+i+e.substring(r+2);return this.fake(o)}},Lt=class extends zr{int(e={}){"number"==typeof e&&(e={max:e});let{min:a=0,max:r=Number.MAX_SAFE_INTEGER}=e,t=Math.ceil(a),n=Math.floor(r);if(t===n)return t;if(n<t)throw new Wr(r>=a?`No integer value between ${a} and ${r} found.`:`Max ${r} should be greater than min ${a}.`);let i=this.faker._randomizer.next();return Math.floor(i*(n+1-t)+t)}float(e={}){"number"==typeof e&&(e={max:e});let{min:a=0,max:r=1,fractionDigits:t,precision:n,multipleOf:i=n,multipleOf:o=(null!=n?n:null==t?void 0:10**-t)}=e;if(null!=n&&ct({deprecated:"faker.number.float({ precision })",proposed:"faker.number.float({ multipleOf })",since:"8.4",until:"9.0"}),r===a)return a;if(r<a)throw new Wr(`Max ${r} should be greater than min ${a}.`);if(null!=t){if(null!=i)throw new Wr("multipleOf and fractionDigits cannot be set at the same time.");if(!Number.isInteger(t))throw new Wr("fractionDigits should be an integer.");if(t<0)throw new Wr("fractionDigits should be greater than or equal to 0.")}if(null!=o){if(o<=0)throw new Wr("multipleOf/precision should be greater than 0.");let e=Math.log10(o),t=o<1&&Number.isInteger(e)?10**-e:1/o;return this.int({min:a*t,max:r*t})/t}return this.faker._randomizer.next()*(r-a)+a}binary(e={}){"number"==typeof e&&(e={max:e});let{min:a=0,max:r=1}=e;return this.int({max:r,min:a}).toString(2)}octal(e={}){"number"==typeof e&&(e={max:e});let{min:a=0,max:r=7}=e;return this.int({max:r,min:a}).toString(8)}hex(e={}){"number"==typeof e&&(e={max:e});let{min:a=0,max:r=15}=e;return this.int({max:r,min:a}).toString(16)}bigInt(e={}){var a,r;("bigint"==typeof e||"number"==typeof e||"string"==typeof e||"boolean"==typeof e)&&(e={max:e});let t=BigInt(null!=(a=e.min)?a:0),n=BigInt(null!=(r=e.max)?r:t+BigInt(999999999999999));if(n===t)return t;if(n<t)throw new Wr(`Max ${n} should be larger then min ${t}.`);let i=n-t,o=BigInt(this.faker.string.numeric({length:i.toString(10).length,allowLeadingZeros:!0}))%(i+BigInt(1));return t+o}},Pt=[..."ABCDEFGHIJKLMNOPQRSTUVWXYZ"],Et=[..."abcdefghijklmnopqrstuvwxyz"],Dt=[..."0123456789"],Nt=class extends zr{fromCharacters(e,a=1){if(a=this.faker.helpers.rangeToNumber(a),a<=0)return"";if("string"==typeof e&&(e=[...e]),0===e.length)throw new Wr("Unable to generate string: No characters to select from.");return this.faker.helpers.multiple((()=>this.faker.helpers.arrayElement(e)),{count:a}).join("")}alpha(e={}){var a;"number"==typeof e&&(e={length:e});let r=this.faker.helpers.rangeToNumber(null!=(a=e.length)?a:1);if(r<=0)return"";let t,{casing:n="mixed"}=e,{exclude:i=[]}=e;switch("string"==typeof i&&(i=[...i]),n){case"upper":t=[...Pt];break;case"lower":t=[...Et];break;case"mixed":default:t=[...Et,...Pt];break}return t=t.filter((e=>!i.includes(e))),this.fromCharacters(t,r)}alphanumeric(e={}){var a;"number"==typeof e&&(e={length:e});let r=this.faker.helpers.rangeToNumber(null!=(a=e.length)?a:1);if(r<=0)return"";let{casing:t="mixed"}=e,{exclude:n=[]}=e;"string"==typeof n&&(n=[...n]);let i=[...Dt];switch(t){case"upper":i.push(...Pt);break;case"lower":i.push(...Et);break;case"mixed":default:i.push(...Et,...Pt);break}return i=i.filter((e=>!n.includes(e))),this.fromCharacters(i,r)}binary(e={}){var a;let{prefix:r="0b"}=e,t=r;return t+=this.fromCharacters(["0","1"],null!=(a=e.length)?a:1),t}octal(e={}){var a;let{prefix:r="0o"}=e,t=r;return t+=this.fromCharacters(["0","1","2","3","4","5","6","7"],null!=(a=e.length)?a:1),t}hexadecimal(e={}){var a;let{casing:r="mixed",prefix:t="0x"}=e,n=this.faker.helpers.rangeToNumber(null!=(a=e.length)?a:1);if(n<=0)return t;let i=this.fromCharacters(["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","A","B","C","D","E","F"],n);return"upper"===r?i=i.toUpperCase():"lower"===r&&(i=i.toLowerCase()),`${t}${i}`}numeric(e={}){var a;"number"==typeof e&&(e={length:e});let r=this.faker.helpers.rangeToNumber(null!=(a=e.length)?a:1);if(r<=0)return"";let{allowLeadingZeros:t=!0}=e,{exclude:n=[]}=e;"string"==typeof n&&(n=[...n]);let i=Dt.filter((e=>!n.includes(e)));if(0===i.length||1===i.length&&!t&&"0"===i[0])throw new Wr("Unable to generate numeric string, because all possible digits are excluded.");let o="";return!t&&!n.includes("0")&&(o+=this.faker.helpers.arrayElement(i.filter((e=>"0"!==e)))),o+=this.fromCharacters(i,r-o.length),o}sample(e=10){e=this.faker.helpers.rangeToNumber(e);let a={min:33,max:125},r="";for(;r.length<e;)r+=String.fromCodePoint(this.faker.number.int(a));return r}uuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/x/g,(()=>this.faker.number.hex({min:0,max:15}))).replace(/y/g,(()=>this.faker.number.hex({min:8,max:11})))}nanoid(e=21){if(e=this.faker.helpers.rangeToNumber(e),e<=0)return"";let a=[{value:()=>this.alphanumeric(1),weight:62},{value:()=>this.faker.helpers.arrayElement(["_","-"]),weight:2}],r="";for(;r.length<e;){let e=this.faker.helpers.weightedArrayElement(a);r+=e()}return r}symbol(e=1){return this.fromCharacters(["!",'"',"#","$","%","&","'","(",")","*","+",",","-",".","/",":",";","<","=",">","?","@","[","\\","]","^","_","`","{","|","}","~"],e)}},Ht=class{constructor(e={}){Gr(this,"_defaultRefDate",(()=>new Date)),Gr(this,"_randomizer"),Gr(this,"datatype",new ut(this)),Gr(this,"date",new ht(this)),Gr(this,"helpers",new xt(this)),Gr(this,"number",new Lt(this)),Gr(this,"string",new Nt(this));let{randomizer:a=st()}=e;this._randomizer=a}get defaultRefDate(){return this._defaultRefDate}setDefaultRefDate(e=(()=>new Date)){this._defaultRefDate="function"==typeof e?e:()=>new Date(e)}seed(e=Math.ceil(Math.random()*Number.MAX_SAFE_INTEGER)){return this._randomizer.seed(e),e}};new Ht;function Gt(e){let a={};for(let r of e)for(let e in r){let t=r[e];void 0===a[e]?a[e]={...t}:a[e]={...t,...a[e]}}return a}var Wt=class extends Ir{dog(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.dog)}cat(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.cat)}snake(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.snake)}bear(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.bear)}lion(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.lion)}cetacean(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.cetacean)}horse(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.horse)}bird(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.bird)}cow(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.cow)}fish(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.fish)}crocodilia(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.crocodilia)}insect(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.insect)}rabbit(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.rabbit)}rodent(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.rodent)}type(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.type)}},Ft={0:[[1999999,2],[2279999,3],[2289999,4],[3689999,3],[3699999,4],[6389999,3],[6397999,4],[6399999,7],[6449999,3],[6459999,7],[6479999,3],[6489999,7],[6549999,3],[6559999,4],[6999999,3],[8499999,4],[8999999,5],[9499999,6],[9999999,7]],1:[[99999,3],[299999,2],[349999,3],[399999,4],[499999,3],[699999,2],[999999,4],[3979999,3],[5499999,4],[6499999,5],[6799999,4],[6859999,5],[7139999,4],[7169999,3],[7319999,4],[7399999,7],[7749999,5],[7753999,7],[7763999,5],[7764999,7],[7769999,5],[7782999,7],[7899999,5],[7999999,4],[8004999,5],[8049999,5],[8379999,5],[8384999,7],[8671999,5],[8675999,4],[8697999,5],[9159999,6],[9165059,7],[9168699,6],[9169079,7],[9195999,6],[9196549,7],[9729999,6],[9877999,4],[9911499,6],[9911999,7],[9989899,6],[9999999,7]]},zt=class extends Ir{department(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.department)}productName(){return`${this.productAdjective()} ${this.productMaterial()} ${this.product()}`}price(e={},a=1e3,r=2,t=""){"number"==typeof e&&(ct({deprecated:"faker.commerce.price(min, max, dec, symbol)",proposed:"faker.commerce.price({ min, max, dec, symbol })",since:"8.0",until:"9.0"}),e={min:e,dec:r,max:a,symbol:t});let{dec:n=2,max:i=1e3,min:o=1,symbol:l=""}=e;if(o<0||i<0)return`${l}0`;let s=this.faker.number.int({min:o,max:i});return l+s.toFixed(n)}productAdjective(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.product_name.adjective)}productMaterial(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.product_name.material)}product(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.product_name.product)}productDescription(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.product_description)}isbn(e={}){var a;"number"==typeof e&&(e={variant:e});let{variant:r=13,separator:t="-"}=e,n="978",[i,o]=this.faker.helpers.objectEntry(Ft),l=this.faker.string.numeric(8),s=Number.parseInt(l.slice(0,-1)),c=null==(a=o.find((([e])=>s<=e)))?void 0:a[1];if(!c)throw new Wr(`Unable to find a registrant length for the group ${i}`);let u=l.slice(0,c),d=l.slice(c),h=[n,i,u,d];10===r&&h.shift();let p=h.join(""),m=0;for(let y=0;y<r-1;y++){let e=10===r?y+1:y%2?3:1;m+=e*Number.parseInt(p[y])}return m=10===r?m%11:(10-m%10)%10,h.push(10===m?"X":m.toString()),h.join(t)}},It=class extends Ir{suffixes(){return ct({deprecated:"faker.company.suffixes",proposed:"faker.company.name",since:"8.0",until:"9.0"}),[...this.faker.definitions.company.suffix]}name(){return this.faker.helpers.fake(this.faker.definitions.company.name_pattern)}companySuffix(){return ct({deprecated:"faker.company.companySuffix",proposed:"faker.company.name",since:"8.0",until:"9.0"}),this.faker.helpers.arrayElement(this.suffixes())}catchPhrase(){return[this.catchPhraseAdjective(),this.catchPhraseDescriptor(),this.catchPhraseNoun()].join(" ")}bs(){return ct({deprecated:"faker.company.bs",proposed:"faker.company.buzzPhrase",since:"8.0",until:"9.0"}),this.buzzPhrase()}buzzPhrase(){return[this.buzzVerb(),this.buzzAdjective(),this.buzzNoun()].join(" ")}catchPhraseAdjective(){return this.faker.helpers.arrayElement(this.faker.definitions.company.adjective)}catchPhraseDescriptor(){return this.faker.helpers.arrayElement(this.faker.definitions.company.descriptor)}catchPhraseNoun(){return this.faker.helpers.arrayElement(this.faker.definitions.company.noun)}bsAdjective(){return ct({deprecated:"faker.company.bsAdjective",proposed:"faker.company.buzzAdjective",since:"8.0",until:"9.0"}),this.buzzAdjective()}buzzAdjective(){return this.faker.helpers.arrayElement(this.faker.definitions.company.buzz_adjective)}bsBuzz(){return ct({deprecated:"faker.company.bsBuzz",proposed:"faker.company.buzzVerb",since:"8.0",until:"9.0"}),this.buzzVerb()}buzzVerb(){return this.faker.helpers.arrayElement(this.faker.definitions.company.buzz_verb)}bsNoun(){return ct({deprecated:"faker.company.bsNoun",proposed:"faker.company.buzzNoun",since:"8.0",until:"9.0"}),this.buzzNoun()}buzzNoun(){return this.faker.helpers.arrayElement(this.faker.definitions.company.buzz_noun)}},Ot=class extends Ir{column(){return this.faker.helpers.arrayElement(this.faker.definitions.database.column)}type(){return this.faker.helpers.arrayElement(this.faker.definitions.database.type)}collation(){return this.faker.helpers.arrayElement(this.faker.definitions.database.collation)}engine(){return this.faker.helpers.arrayElement(this.faker.definitions.database.engine)}mongodbObjectId(){return this.faker.string.hexadecimal({length:24,casing:"lower",prefix:""})}},_t={alpha:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],formats:[{country:"AL",total:28,bban:[{type:"n",count:8},{type:"c",count:16}],format:"ALkk bbbs sssx cccc cccc cccc cccc"},{country:"AD",total:24,bban:[{type:"n",count:8},{type:"c",count:12}],format:"ADkk bbbb ssss cccc cccc cccc"},{country:"AT",total:20,bban:[{type:"n",count:5},{type:"n",count:11}],format:"ATkk bbbb bccc cccc cccc"},{country:"AZ",total:28,bban:[{type:"a",count:4},{type:"n",count:20}],format:"AZkk bbbb cccc cccc cccc cccc cccc"},{country:"BH",total:22,bban:[{type:"a",count:4},{type:"c",count:14}],format:"BHkk bbbb cccc cccc cccc cc"},{country:"BE",total:16,bban:[{type:"n",count:3},{type:"n",count:9}],format:"BEkk bbbc cccc ccxx"},{country:"BA",total:20,bban:[{type:"n",count:6},{type:"n",count:10}],format:"BAkk bbbs sscc cccc ccxx"},{country:"BR",total:29,bban:[{type:"n",count:13},{type:"n",count:10},{type:"a",count:1},{type:"c",count:1}],format:"BRkk bbbb bbbb ssss sccc cccc ccct n"},{country:"BG",total:22,bban:[{type:"a",count:4},{type:"n",count:6},{type:"c",count:8}],format:"BGkk bbbb ssss ddcc cccc cc"},{country:"CR",total:22,bban:[{type:"n",count:1},{type:"n",count:3},{type:"n",count:14}],format:"CRkk xbbb cccc cccc cccc cc"},{country:"HR",total:21,bban:[{type:"n",count:7},{type:"n",count:10}],format:"HRkk bbbb bbbc cccc cccc c"},{country:"CY",total:28,bban:[{type:"n",count:8},{type:"c",count:16}],format:"CYkk bbbs ssss cccc cccc cccc cccc"},{country:"CZ",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"CZkk bbbb ssss sscc cccc cccc"},{country:"DK",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"DKkk bbbb cccc cccc cc"},{country:"DO",total:28,bban:[{type:"a",count:4},{type:"n",count:20}],format:"DOkk bbbb cccc cccc cccc cccc cccc"},{country:"TL",total:23,bban:[{type:"n",count:3},{type:"n",count:16}],format:"TLkk bbbc cccc cccc cccc cxx"},{country:"EE",total:20,bban:[{type:"n",count:4},{type:"n",count:12}],format:"EEkk bbss cccc cccc cccx"},{country:"FO",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"FOkk bbbb cccc cccc cx"},{country:"FI",total:18,bban:[{type:"n",count:6},{type:"n",count:8}],format:"FIkk bbbb bbcc cccc cx"},{country:"FR",total:27,bban:[{type:"n",count:10},{type:"c",count:11},{type:"n",count:2}],format:"FRkk bbbb bggg ggcc cccc cccc cxx"},{country:"GE",total:22,bban:[{type:"a",count:2},{type:"n",count:16}],format:"GEkk bbcc cccc cccc cccc cc"},{country:"DE",total:22,bban:[{type:"n",count:8},{type:"n",count:10}],format:"DEkk bbbb bbbb cccc cccc cc"},{country:"GI",total:23,bban:[{type:"a",count:4},{type:"c",count:15}],format:"GIkk bbbb cccc cccc cccc ccc"},{country:"GR",total:27,bban:[{type:"n",count:7},{type:"c",count:16}],format:"GRkk bbbs sssc cccc cccc cccc ccc"},{country:"GL",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"GLkk bbbb cccc cccc cc"},{country:"GT",total:28,bban:[{type:"c",count:4},{type:"c",count:4},{type:"c",count:16}],format:"GTkk bbbb mmtt cccc cccc cccc cccc"},{country:"HU",total:28,bban:[{type:"n",count:8},{type:"n",count:16}],format:"HUkk bbbs sssk cccc cccc cccc cccx"},{country:"IS",total:26,bban:[{type:"n",count:6},{type:"n",count:16}],format:"ISkk bbbb sscc cccc iiii iiii ii"},{country:"IE",total:22,bban:[{type:"c",count:4},{type:"n",count:6},{type:"n",count:8}],format:"IEkk aaaa bbbb bbcc cccc cc"},{country:"IL",total:23,bban:[{type:"n",count:6},{type:"n",count:13}],format:"ILkk bbbn nncc cccc cccc ccc"},{country:"IT",total:27,bban:[{type:"a",count:1},{type:"n",count:10},{type:"c",count:12}],format:"ITkk xaaa aabb bbbc cccc cccc ccc"},{country:"JO",total:30,bban:[{type:"a",count:4},{type:"n",count:4},{type:"n",count:18}],format:"JOkk bbbb nnnn cccc cccc cccc cccc cc"},{country:"KZ",total:20,bban:[{type:"n",count:3},{type:"c",count:13}],format:"KZkk bbbc cccc cccc cccc"},{country:"XK",total:20,bban:[{type:"n",count:4},{type:"n",count:12}],format:"XKkk bbbb cccc cccc cccc"},{country:"KW",total:30,bban:[{type:"a",count:4},{type:"c",count:22}],format:"KWkk bbbb cccc cccc cccc cccc cccc cc"},{country:"LV",total:21,bban:[{type:"a",count:4},{type:"c",count:13}],format:"LVkk bbbb cccc cccc cccc c"},{country:"LB",total:28,bban:[{type:"n",count:4},{type:"c",count:20}],format:"LBkk bbbb cccc cccc cccc cccc cccc"},{country:"LI",total:21,bban:[{type:"n",count:5},{type:"c",count:12}],format:"LIkk bbbb bccc cccc cccc c"},{country:"LT",total:20,bban:[{type:"n",count:5},{type:"n",count:11}],format:"LTkk bbbb bccc cccc cccc"},{country:"LU",total:20,bban:[{type:"n",count:3},{type:"c",count:13}],format:"LUkk bbbc cccc cccc cccc"},{country:"MK",total:19,bban:[{type:"n",count:3},{type:"c",count:10},{type:"n",count:2}],format:"MKkk bbbc cccc cccc cxx"},{country:"MT",total:31,bban:[{type:"a",count:4},{type:"n",count:5},{type:"c",count:18}],format:"MTkk bbbb ssss sccc cccc cccc cccc ccc"},{country:"MR",total:27,bban:[{type:"n",count:10},{type:"n",count:13}],format:"MRkk bbbb bsss sscc cccc cccc cxx"},{country:"MU",total:30,bban:[{type:"a",count:4},{type:"n",count:4},{type:"n",count:15},{type:"a",count:3}],format:"MUkk bbbb bbss cccc cccc cccc 000d dd"},{country:"MC",total:27,bban:[{type:"n",count:10},{type:"c",count:11},{type:"n",count:2}],format:"MCkk bbbb bsss sscc cccc cccc cxx"},{country:"MD",total:24,bban:[{type:"c",count:2},{type:"c",count:18}],format:"MDkk bbcc cccc cccc cccc cccc"},{country:"ME",total:22,bban:[{type:"n",count:3},{type:"n",count:15}],format:"MEkk bbbc cccc cccc cccc xx"},{country:"NL",total:18,bban:[{type:"a",count:4},{type:"n",count:10}],format:"NLkk bbbb cccc cccc cc"},{country:"NO",total:15,bban:[{type:"n",count:4},{type:"n",count:7}],format:"NOkk bbbb cccc ccx"},{country:"PK",total:24,bban:[{type:"a",count:4},{type:"n",count:16}],format:"PKkk bbbb cccc cccc cccc cccc"},{country:"PS",total:29,bban:[{type:"c",count:4},{type:"n",count:9},{type:"n",count:12}],format:"PSkk bbbb xxxx xxxx xccc cccc cccc c"},{country:"PL",total:28,bban:[{type:"n",count:8},{type:"n",count:16}],format:"PLkk bbbs sssx cccc cccc cccc cccc"},{country:"PT",total:25,bban:[{type:"n",count:8},{type:"n",count:13}],format:"PTkk bbbb ssss cccc cccc cccx x"},{country:"QA",total:29,bban:[{type:"a",count:4},{type:"c",count:21}],format:"QAkk bbbb cccc cccc cccc cccc cccc c"},{country:"RO",total:24,bban:[{type:"a",count:4},{type:"c",count:16}],format:"ROkk bbbb cccc cccc cccc cccc"},{country:"SM",total:27,bban:[{type:"a",count:1},{type:"n",count:10},{type:"c",count:12}],format:"SMkk xaaa aabb bbbc cccc cccc ccc"},{country:"SA",total:24,bban:[{type:"n",count:2},{type:"c",count:18}],format:"SAkk bbcc cccc cccc cccc cccc"},{country:"RS",total:22,bban:[{type:"n",count:3},{type:"n",count:15}],format:"RSkk bbbc cccc cccc cccc xx"},{country:"SK",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"SKkk bbbb ssss sscc cccc cccc"},{country:"SI",total:19,bban:[{type:"n",count:5},{type:"n",count:10}],format:"SIkk bbss sccc cccc cxx"},{country:"ES",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"ESkk bbbb gggg xxcc cccc cccc"},{country:"SE",total:24,bban:[{type:"n",count:3},{type:"n",count:17}],format:"SEkk bbbc cccc cccc cccc cccc"},{country:"CH",total:21,bban:[{type:"n",count:5},{type:"c",count:12}],format:"CHkk bbbb bccc cccc cccc c"},{country:"TN",total:24,bban:[{type:"n",count:5},{type:"n",count:15}],format:"TNkk bbss sccc cccc cccc cccc"},{country:"TR",total:26,bban:[{type:"n",count:5},{type:"n",count:1},{type:"n",count:16}],format:"TRkk bbbb bxcc cccc cccc cccc cc"},{country:"AE",total:23,bban:[{type:"n",count:3},{type:"n",count:16}],format:"AEkk bbbc cccc cccc cccc ccc"},{country:"GB",total:22,bban:[{type:"a",count:4},{type:"n",count:6},{type:"n",count:8}],format:"GBkk bbbb ssss sscc cccc cc"},{country:"VG",total:24,bban:[{type:"a",count:4},{type:"n",count:16}],format:"VGkk bbbb cccc cccc cccc cccc"}],iso3166:["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW"],mod97:e=>{let a=0;for(let r of e)a=(10*a+ +r)%97;return a},pattern10:["01","02","03","04","05","06","07","08","09"],pattern100:["001","002","003","004","005","006","007","008","009"],toDigitString:e=>e.replace(/[A-Z]/gi,(e=>{var a;return String((null!=(a=e.toUpperCase().codePointAt(0))?a:Number.NaN)-55)}))},Kt=_t;function Jt(e){let a="";for(let r=0;r<e.length;r+=4)a+=`${e.substring(r,r+4)} `;return a.trimEnd()}var jt=class extends Ir{account(e){return ct({deprecated:"faker.finance.account",proposed:"faker.finance.accountNumber",since:"8.0",until:"9.0"}),this.accountNumber(e)}accountNumber(e={}){"number"==typeof e&&(e={length:e});let{length:a=8}=e;return this.faker.string.numeric({length:a,allowLeadingZeros:!0})}accountName(){return[this.faker.helpers.arrayElement(this.faker.definitions.finance.account_type),"Account"].join(" ")}routingNumber(){let e=this.faker.string.numeric({length:8,allowLeadingZeros:!0}),a=0;for(let r=0;r<e.length;r+=3)a+=3*Number(e[r]),a+=7*Number(e[r+1]),a+=Number(e[r+2])||0;return`${e}${10*Math.ceil(a/10)-a}`}mask(e,a,r){return ct({deprecated:"faker.finance.mask",proposed:"faker.finance.maskedNumber",since:"8.0",until:"9.0"}),this.maskedNumber({length:e,parens:a,ellipsis:r})}maskedNumber(e={}){"number"==typeof e&&(e={length:e});let{ellipsis:a=!0,length:r=4,parens:t=!0}=e,n=this.faker.string.numeric({length:r});return a&&(n=`...${n}`),t&&(n=`(${n})`),n}amount(e={},a=1e3,r=2,t="",n=!1){"number"==typeof e&&(ct({deprecated:"faker.finance.amount(min, max, dec, symbol, autoFormat)",proposed:"faker.finance.amount({ min, max, dec, symbol, autoFormat })",since:"8.0",until:"9.0"}),e={min:e});let{autoFormat:i=n,dec:o=r,max:l=a,min:s=0,symbol:c=t}=e,u=this.faker.number.float({max:l,min:s,fractionDigits:o}),d=i?u.toLocaleString(void 0,{minimumFractionDigits:o}):u.toFixed(o);return c+d}transactionType(){return this.faker.helpers.arrayElement(this.faker.definitions.finance.transaction_type)}currency(){return this.faker.helpers.arrayElement(this.faker.definitions.finance.currency)}currencyCode(){return this.currency().code}currencyName(){return this.currency().name}currencySymbol(){let e;do{e=this.currency().symbol}while(0===e.length);return e}bitcoinAddress(){let e=this.faker.number.int({min:25,max:39}),a=this.faker.helpers.arrayElement(["1","3"]);return a+=this.faker.string.alphanumeric({length:e,casing:"mixed",exclude:"0OIl"}),a}litecoinAddress(){let e=this.faker.number.int({min:26,max:33});return this.faker.string.fromCharacters("LM3")+this.faker.string.fromCharacters("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",e-1)}creditCardNumber(e={}){"string"==typeof e&&(e={issuer:e});let a,{issuer:r=""}=e,t=this.faker.definitions.finance.credit_card,n=r.toLowerCase();if(n in t)a=this.faker.helpers.arrayElement(t[n]);else if(r.includes("#"))a=r;else{let e=this.faker.helpers.objectValue(t);a=this.faker.helpers.arrayElement(e)}return a=a.replace(/\//g,""),this.faker.helpers.replaceCreditCardSymbols(a)}creditCardCVV(){return this.faker.string.numeric({length:3,allowLeadingZeros:!0})}creditCardIssuer(){return this.faker.helpers.objectKey(this.faker.definitions.finance.credit_card)}pin(e={}){"number"==typeof e&&(e={length:e});let{length:a=4}=e;if(a<1)throw new Wr("minimum length is 1");return this.faker.string.numeric({length:a,allowLeadingZeros:!0})}ethereumAddress(){return this.faker.string.hexadecimal({length:40,casing:"lower"})}iban(e={},a){"boolean"==typeof e&&(ct({deprecated:"faker.finance.iban(formatted, countryCode)",proposed:"faker.finance.iban({ formatted, countryCode })",since:"8.0",until:"9.0"}),e={formatted:e});let{countryCode:r=a,formatted:t=!1}=e,n=r?Kt.formats.find((e=>e.country===r)):this.faker.helpers.arrayElement(Kt.formats);if(!n)throw new Wr(`Country code ${r} not supported.`);let i="",o=0;for(let c of n.bban){let e=c.count;for(o+=c.count;e>0;)"a"===c.type?i+=this.faker.helpers.arrayElement(Kt.alpha):"c"===c.type?this.faker.datatype.boolean(.8)?i+=this.faker.number.int(9):i+=this.faker.helpers.arrayElement(Kt.alpha):e>=3&&this.faker.datatype.boolean(.3)?this.faker.datatype.boolean()?(i+=this.faker.helpers.arrayElement(Kt.pattern100),e-=2):(i+=this.faker.helpers.arrayElement(Kt.pattern10),e--):i+=this.faker.number.int(9),e--;i=i.substring(0,o)}let l=98-Kt.mod97(Kt.toDigitString(`${i}${n.country}00`));l<10&&(l=`0${l}`);let s=`${n.country}${l}${i}`;return t?Jt(s):s}bic(e={}){let{includeBranchCode:a=this.faker.datatype.boolean()}=e,r=this.faker.string.alpha({length:4,casing:"upper"}),t=this.faker.helpers.arrayElement(Kt.iso3166),n=this.faker.string.alphanumeric({length:2,casing:"upper"}),i=a?this.faker.datatype.boolean()?this.faker.string.alphanumeric({length:3,casing:"upper"}):"XXX":"";return`${r}${t}${n}${i}`}transactionDescription(){let e=this.amount(),a=this.faker.company.name(),r=this.transactionType(),t=this.accountNumber(),n=this.maskedNumber(),i=this.currencyCode();return`${r} transaction at ${a} using card ending with ***${n} for ${i} ${e} in account ***${t}`}},$t=" ",Vt=class extends Ir{branch(){let e=this.faker.hacker.noun().replace(" ","-"),a=this.faker.hacker.verb().replace(" ","-");return`${e}-${a}`}commitEntry(e={}){let{merge:a=this.faker.datatype.boolean({probability:.2}),eol:r="CRLF",refDate:t}=e,n=[`commit ${this.faker.git.commitSha()}`];a&&n.push(`Merge: ${this.commitSha({length:7})} ${this.commitSha({length:7})}`);let i=this.faker.person.firstName(),o=this.faker.person.lastName(),l=this.faker.person.fullName({firstName:i,lastName:o}),s=this.faker.internet.userName({firstName:i,lastName:o}),c=this.faker.helpers.arrayElement([l,s]),u=this.faker.internet.email({firstName:i,lastName:o});c=c.replace(/^[.,:;"\\']|[<>\n]|[.,:;"\\']$/g,""),n.push(`Author: ${c} <${u}>`,`Date: ${this.commitDate({refDate:t})}`,"",`${$t.repeat(4)}${this.commitMessage()}`,"");let d="CRLF"===r?"\r\n":"\n";return n.join(d)}commitMessage(){return`${this.faker.hacker.verb()} ${this.faker.hacker.adjective()} ${this.faker.hacker.noun()}`}commitDate(e={}){let{refDate:a=this.faker.defaultRefDate()}=e,r=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],t=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],n=this.faker.date.recent({days:1,refDate:a}),i=r[n.getUTCDay()],o=t[n.getUTCMonth()],l=n.getUTCDate(),s=n.getUTCHours().toString().padStart(2,"0"),c=n.getUTCMinutes().toString().padStart(2,"0"),u=n.getUTCSeconds().toString().padStart(2,"0"),d=n.getUTCFullYear(),h=this.faker.number.int({min:-11,max:12}),p=Math.abs(h).toString().padStart(2,"0"),m="00",y=h>=0?"+":"-";return`${i} ${o} ${l} ${s}:${c}:${u} ${d} ${y}${p}${m}`}commitSha(e={}){let{length:a=40}=e;return this.faker.string.hexadecimal({length:a,casing:"lower",prefix:""})}shortSha(){return ct({deprecated:"faker.git.shortSha()",proposed:"faker.git.commitSha({ length: 7 })",since:"8.0",until:"9.0"}),this.commitSha({length:7})}},Ut=class extends Ir{abbreviation(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.abbreviation)}adjective(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.adjective)}noun(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.noun)}verb(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.verb)}ingverb(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.ingverb)}phrase(){let e={abbreviation:this.abbreviation,adjective:this.adjective,ingverb:this.ingverb,noun:this.noun,verb:this.verb},a=this.faker.helpers.arrayElement(this.faker.definitions.hacker.phrase);return this.faker.helpers.mustache(a,e)}},Yt=class{constructor(e){this.faker=e}image(e,a,r,t){return ct({deprecated:"faker.lorempicsum.image",proposed:"faker.image.urlPicsumPhotos",since:"8.0",until:"9.0"}),this.imageUrl(e,a,r,t)}imageGrayscale(e,a,r){return ct({deprecated:"faker.lorempicsum.imageGrayscale",proposed:"faker.image.urlPicsumPhotos",since:"8.0",until:"9.0"}),this.imageUrl(e,a,r)}imageBlurred(e,a,r){return ct({deprecated:"faker.lorempicsum.imageBlurred",proposed:"faker.image.urlPicsumPhotos",since:"8.0",until:"9.0"}),this.imageUrl(e,a,void 0,r)}imageRandomSeeded(e,a,r,t,n){return ct({deprecated:"faker.lorempicsum.imageRandomSeeded",proposed:"faker.image.urlPicsumPhotos",since:"8.0",until:"9.0"}),this.imageUrl(e,a,r,t,n)}imageUrl(e,a,r,t,n){ct({deprecated:"faker.lorempicsum.imageUrl",proposed:"faker.image.urlPicsumPhotos",since:"8.0",until:"9.0"}),e=e||640,a=a||480;let i="https://picsum.photos";return n&&(i+=`/seed/${n}`),i+=`/${e}/${a}`,r&&t?`${i}?grayscale&blur=${t}`:r?`${i}?grayscale`:t?`${i}?blur=${t}`:i}},qt=class e{constructor(a){this.faker=a;for(let r of Object.getOwnPropertyNames(e.prototype))"constructor"===r||"function"!=typeof this[r]||(this[r]=this[r].bind(this))}imageUrl(e,a,r,t,n,i){ct({deprecated:"faker.placeholder.imageUrl",proposed:"faker.image.urlPlaceholder",since:"8.0",until:"9.0"}),e=e||640,a=a||e;let o="https://via.placeholder.com";if(o+=`/${e}x${a}`,null!=n&&(o+=`/${n.replace("#","").toUpperCase()}`,null!=i&&(o+=`/${i.replace("#","").toUpperCase()}`)),null!=t&&(o+=`.${t}`),null!=r){let e=new URLSearchParams({text:r});o+=`?${e.toString()}`}return o}randomUrl(e,a,r){return ct({deprecated:"faker.placeholder.randomUrl",proposed:"faker.image.urlPlaceholder",since:"8.0",until:"9.0"}),this.imageUrl(e,a,this.faker.lorem.word(),r,this.faker.color.rgb({casing:"upper",prefix:""}),this.faker.color.rgb({casing:"upper",prefix:""}))}},Zt=class{constructor(e){this.faker=e}image(e,a,r){return ct({deprecated:"faker.unsplash.image",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,void 0,r)}imageUrl(e,a,r,t){ct({deprecated:"faker.unsplash.imageUrl",proposed:"faker.image.url",since:"8.0",until:"9.0"}),e=e||640,a=a||480;let n="https://source.unsplash.com";return null!=r&&(n+=`/category/${r}`),n+=`/${e}x${a}`,null!=t&&/^([A-Za-z0-9].+,[A-Za-z0-9]+)$|^([A-Za-z0-9]+)$/.test(t)&&(n+=`?${t}`),n}food(e,a,r){return ct({deprecated:"faker.unsplash.food",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(e,a,"food",r)}people(e,a,r){return ct({deprecated:"faker.unsplash.people",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(e,a,"people",r)}nature(e,a,r){return ct({deprecated:"faker.unsplash.nature",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(e,a,"nature",r)}technology(e,a,r){return ct({deprecated:"faker.unsplash.technology",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(e,a,"technology",r)}objects(e,a,r){return ct({deprecated:"faker.unsplash.objects",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(e,a,"objects",r)}buildings(e,a,r){return ct({deprecated:"faker.unsplash.buildings",proposed:"faker.image.url",since:"8.0",until:"9.0"}),this.faker.image.unsplash.imageUrl(e,a,"buildings",r)}},Xt=class extends Ir{constructor(e){super(e),Gr(this,"unsplash"),Gr(this,"lorempicsum"),Gr(this,"placeholder"),this.unsplash=new Zt(this.faker),this.lorempicsum=new Yt(this.faker),this.placeholder=new qt(this.faker)}avatar(){return this.faker.helpers.arrayElement([this.avatarLegacy,this.avatarGitHub])()}avatarGitHub(){return`https://avatars.githubusercontent.com/u/${this.faker.number.int(1e8)}`}avatarLegacy(){return`https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/${this.faker.number.int(1249)}.jpg`}url(e={}){let{width:a=640,height:r=480}=e;return this.faker.helpers.arrayElement([this.urlLoremFlickr,this.urlPicsumPhotos])({width:a,height:r})}urlLoremFlickr(e={}){let{width:a=640,height:r=480,category:t}=e;return`https://loremflickr.com/${a}/${r}${null==t?"":`/${t}`}?lock=${this.faker.number.int()}`}urlPicsumPhotos(e={}){let{width:a=640,height:r=480,grayscale:t=!1,blur:n}=e,i=`https://picsum.photos/seed/${this.faker.string.alphanumeric({length:{min:5,max:10}})}/${a}/${r}`,o="number"==typeof n&&n>=1&&n<=10;return(t||o)&&(i+="?",t&&(i+="grayscale"),t&&o&&(i+="&"),o&&(i+=`blur=${n}`)),i}urlPlaceholder(e={}){let{width:a=this.faker.number.int({min:1,max:3999}),height:r=this.faker.number.int({min:1,max:3999}),backgroundColor:t=this.faker.color.rgb({format:"hex",prefix:""}),textColor:n=this.faker.color.rgb({format:"hex",prefix:""}),format:i=this.faker.helpers.arrayElement(["gif","jpeg","jpg","png","webp"]),text:o=this.faker.lorem.words()}=e,l="https://via.placeholder.com";return l+=`/${a}`,l+=`x${r}`,l+=`/${t}`,l+=`/${n}`,l+=`.${i}`,l+=`?text=${encodeURIComponent(o)}`,l}dataUri(e={}){let{width:a=640,height:r=480,color:t=this.faker.color.rgb(),type:n="svg-uri"}=e,i=`<svg xmlns="http://www.w3.org/2000/svg" version="1.1" baseProfile="full" width="${a}" height="${r}"><rect width="100%" height="100%" fill="${t}"/><text x="${a/2}" y="${r/2}" font-size="20" alignment-baseline="middle" text-anchor="middle" fill="white">${a}x${r}</text></svg>`;return"svg-uri"===n?`data:image/svg+xml;charset=UTF-8,${encodeURIComponent(i)}`:`data:image/svg+xml;base64,${Buffer.from(i).toString("base64")}`}image(e,a,r){ct({deprecated:"faker.image.image",proposed:"faker.image.url",since:"8.0",until:"9.0"});let t=["abstract","animals","business","cats","city","food","nightlife","fashion","people","nature","sports","technics","transport"];return this[this.faker.helpers.arrayElement(t)](e,a,r)}imageUrl(e,a,r,t){ct({deprecated:"faker.image.imageUrl",proposed:"faker.image.url",since:"8.0",until:"9.0"}),e=e||640,a=a||480;let n=`https://loremflickr.com/${e}/${a}`;return null!=r&&(n+=`/${r}`),t&&(n+=`?lock=${this.faker.number.int()}`),n}abstract(e,a,r){return ct({deprecated:"faker.image.abstract",proposed:"faker.image.urlLoremFlickr({ category: 'abstract' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"abstract",r)}animals(e,a,r){return ct({deprecated:"faker.image.animals",proposed:"faker.image.urlLoremFlickr({ category: 'animals' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"animals",r)}business(e,a,r){return ct({deprecated:"faker.image.business",proposed:"faker.image.urlLoremFlickr({ category: 'business' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"business",r)}cats(e,a,r){return ct({deprecated:"faker.image.cats",proposed:"faker.image.urlLoremFlickr({ category: 'cats' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"cats",r)}city(e,a,r){return ct({deprecated:"faker.image.city",proposed:"faker.image.urlLoremFlickr({ category: 'city' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"city",r)}food(e,a,r){return ct({deprecated:"faker.image.food",proposed:"faker.image.urlLoremFlickr({ category: 'food' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"food",r)}nightlife(e,a,r){return ct({deprecated:"faker.image.nightlife",proposed:"faker.image.urlLoremFlickr({ category: 'nightlife' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"nightlife",r)}fashion(e,a,r){return ct({deprecated:"faker.image.fashion",proposed:"faker.image.urlLoremFlickr({ category: 'fashion' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"fashion",r)}people(e,a,r){return ct({deprecated:"faker.image.people",proposed:"faker.image.urlLoremFlickr({ category: 'people' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"people",r)}nature(e,a,r){return ct({deprecated:"faker.image.nature",proposed:"faker.image.urlLoremFlickr({ category: 'nature' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"nature",r)}sports(e,a,r){return ct({deprecated:"faker.image.sports",proposed:"faker.image.urlLoremFlickr({ category: 'sports' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"sports",r)}technics(e,a,r){return ct({deprecated:"faker.image.technics",proposed:"faker.image.urlLoremFlickr({ category: 'technics' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"technics",r)}transport(e,a,r){return ct({deprecated:"faker.image.transport",proposed:"faker.image.urlLoremFlickr({ category: 'transport' }) or faker.image.url",since:"8.0",until:"9.0"}),this.imageUrl(e,a,"transport",r)}},Qt=Object.fromEntries([["А","A"],["а","a"],["Б","B"],["б","b"],["В","V"],["в","v"],["Г","G"],["г","g"],["Д","D"],["д","d"],["ъе","ye"],["Ъе","Ye"],["ъЕ","yE"],["ЪЕ","YE"],["Е","E"],["е","e"],["Ё","Yo"],["ё","yo"],["Ж","Zh"],["ж","zh"],["З","Z"],["з","z"],["И","I"],["и","i"],["ый","iy"],["Ый","Iy"],["ЫЙ","IY"],["ыЙ","iY"],["Й","Y"],["й","y"],["К","K"],["к","k"],["Л","L"],["л","l"],["М","M"],["м","m"],["Н","N"],["н","n"],["О","O"],["о","o"],["П","P"],["п","p"],["Р","R"],["р","r"],["С","S"],["с","s"],["Т","T"],["т","t"],["У","U"],["у","u"],["Ф","F"],["ф","f"],["Х","Kh"],["х","kh"],["Ц","Ts"],["ц","ts"],["Ч","Ch"],["ч","ch"],["Ш","Sh"],["ш","sh"],["Щ","Sch"],["щ","sch"],["Ъ",""],["ъ",""],["Ы","Y"],["ы","y"],["Ь",""],["ь",""],["Э","E"],["э","e"],["Ю","Yu"],["ю","yu"],["Я","Ya"],["я","ya"]]),en=Object.fromEntries([["α","a"],["β","v"],["γ","g"],["δ","d"],["ε","e"],["ζ","z"],["η","i"],["θ","th"],["ι","i"],["κ","k"],["λ","l"],["μ","m"],["ν","n"],["ξ","ks"],["ο","o"],["π","p"],["ρ","r"],["σ","s"],["τ","t"],["υ","y"],["φ","f"],["χ","x"],["ψ","ps"],["ω","o"],["ά","a"],["έ","e"],["ί","i"],["ό","o"],["ύ","y"],["ή","i"],["ώ","o"],["ς","s"],["ϊ","i"],["ΰ","y"],["ϋ","y"],["ΐ","i"],["Α","A"],["Β","B"],["Γ","G"],["Δ","D"],["Ε","E"],["Ζ","Z"],["Η","I"],["Θ","TH"],["Ι","I"],["Κ","K"],["Λ","L"],["Μ","M"],["Ν","N"],["Ξ","KS"],["Ο","O"],["Π","P"],["Ρ","R"],["Σ","S"],["Τ","T"],["Υ","Y"],["Φ","F"],["Χ","X"],["Ψ","PS"],["Ω","O"],["Ά","A"],["Έ","E"],["Ί","I"],["Ό","O"],["Ύ","Y"],["Ή","I"],["Ώ","O"],["Ϊ","I"],["Ϋ","Y"]]),an=Object.fromEntries([["ء","e"],["آ","a"],["أ","a"],["ؤ","w"],["إ","i"],["ئ","y"],["ا","a"],["ب","b"],["ة","t"],["ت","t"],["ث","th"],["ج","j"],["ح","h"],["خ","kh"],["د","d"],["ذ","dh"],["ر","r"],["ز","z"],["س","s"],["ش","sh"],["ص","s"],["ض","d"],["ط","t"],["ظ","z"],["ع","e"],["غ","gh"],["ـ","_"],["ف","f"],["ق","q"],["ك","k"],["ل","l"],["م","m"],["ن","n"],["ه","h"],["و","w"],["ى","a"],["ي","y"],["َ‎","a"],["ُ","u"],["ِ‎","i"]]),rn=Object.fromEntries([["ա","a"],["Ա","A"],["բ","b"],["Բ","B"],["գ","g"],["Գ","G"],["դ","d"],["Դ","D"],["ե","ye"],["Ե","Ye"],["զ","z"],["Զ","Z"],["է","e"],["Է","E"],["ը","y"],["Ը","Y"],["թ","t"],["Թ","T"],["ժ","zh"],["Ժ","Zh"],["ի","i"],["Ի","I"],["լ","l"],["Լ","L"],["խ","kh"],["Խ","Kh"],["ծ","ts"],["Ծ","Ts"],["կ","k"],["Կ","K"],["հ","h"],["Հ","H"],["ձ","dz"],["Ձ","Dz"],["ղ","gh"],["Ղ","Gh"],["ճ","tch"],["Ճ","Tch"],["մ","m"],["Մ","M"],["յ","y"],["Յ","Y"],["ն","n"],["Ն","N"],["շ","sh"],["Շ","Sh"],["ո","vo"],["Ո","Vo"],["չ","ch"],["Չ","Ch"],["պ","p"],["Պ","P"],["ջ","j"],["Ջ","J"],["ռ","r"],["Ռ","R"],["ս","s"],["Ս","S"],["վ","v"],["Վ","V"],["տ","t"],["Տ","T"],["ր","r"],["Ր","R"],["ց","c"],["Ց","C"],["ու","u"],["ՈՒ","U"],["Ու","U"],["փ","p"],["Փ","P"],["ք","q"],["Ք","Q"],["օ","o"],["Օ","O"],["ֆ","f"],["Ֆ","F"],["և","yev"]]),tn=Object.fromEntries([["چ","ch"],["ک","k"],["گ","g"],["پ","p"],["ژ","zh"],["ی","y"]]),nn={...Qt,...en,...an,...tn,...rn};function on(e){let a=()=>e.helpers.arrayElement(["AB","AF","AN","AR","AS","AZ","BE","BG","BN","BO","BR","BS","CA","CE","CO","CS","CU","CY","DA","DE","EL","EN","EO","ES","ET","EU","FA","FI","FJ","FO","FR","FY","GA","GD","GL","GV","HE","HI","HR","HT","HU","HY","ID","IS","IT","JA","JV","KA","KG","KO","KU","KW","KY","LA","LB","LI","LN","LT","LV","MG","MK","MN","MO","MS","MT","MY","NB","NE","NL","NN","NO","OC","PL","PT","RM","RO","RU","SC","SE","SK","SL","SO","SQ","SR","SV","SW","TK","TR","TY","UK","UR","UZ","VI","VO","YI","ZH"]),r=()=>{let a={chrome:["win","mac","lin"],firefox:["win","mac","lin"],opera:["win","mac","lin"],safari:["win","mac"],iexplorer:["win"]},r=e.helpers.objectKey(a),t=e.helpers.arrayElement(a[r]);return[r,t]},t=a=>e.helpers.arrayElement({lin:["i686","x86_64"],mac:["Intel","PPC","U; Intel","U; PPC"],win:["","WOW64","Win64; x64"]}[a]),n=a=>{let r="";for(let t=0;t<a;t++)r+=`.${e.string.numeric({allowLeadingZeros:!0})}`;return r},i={net(){return[e.number.int({min:1,max:4}),e.number.int(9),e.number.int({min:1e4,max:99999}),e.number.int(9)].join(".")},nt(){return[e.number.int({min:5,max:6}),e.number.int(3)].join(".")},ie(){return e.number.int({min:7,max:11})},trident(){return[e.number.int({min:3,max:7}),e.number.int(1)].join(".")},osx(a){return[10,e.number.int({min:5,max:10}),e.number.int(9)].join(a||".")},chrome(){return[e.number.int({min:13,max:39}),0,e.number.int({min:800,max:899}),0].join(".")},presto(){return`2.9.${e.number.int({min:160,max:190})}`},presto2(){return`${e.number.int({min:10,max:12})}.00`},safari(){return[e.number.int({min:531,max:538}),e.number.int(2),e.number.int(2)].join(".")}},o={firefox(a){let r=`${e.number.int({min:5,max:15})}${n(2)}`,o=`Gecko/20100101 Firefox/${r}`,l=t(a);return`Mozilla/5.0 ${"win"===a?`(Windows NT ${i.nt()}${l?`; ${l}`:""}`:"mac"===a?`(Macintosh; ${l} Mac OS X ${i.osx()}`:`(X11; Linux ${l}`}; rv:${r.slice(0,-2)}) ${o}`},iexplorer(){let a=i.ie();return a>=11?`Mozilla/5.0 (Windows NT 6.${e.number.int({min:1,max:3})}; Trident/7.0; ${e.datatype.boolean()?"Touch; ":""}rv:11.0) like Gecko`:`Mozilla/5.0 (compatible; MSIE ${a}.0; Windows NT ${i.nt()}; Trident/${i.trident()}${e.datatype.boolean()?`; .NET CLR ${i.net()}`:""})`},opera(r){let n=` Presto/${i.presto()} Version/${i.presto2()})`,o="win"===r?`(Windows NT ${i.nt()}; U; ${a()}${n}`:"lin"===r?`(X11; Linux ${t(r)}; U; ${a()}${n}`:`(Macintosh; Intel Mac OS X ${i.osx()} U; ${a()} Presto/${i.presto()} Version/${i.presto2()})`;return`Opera/${e.number.int({min:9,max:14})}.${e.number.int(99)} ${o}`},safari(r){let n=i.safari(),o=`${e.number.int({min:4,max:7})}.${e.number.int(1)}.${e.number.int(10)}`;return`Mozilla/5.0 ${"mac"===r?`(Macintosh; ${t("mac")} Mac OS X ${i.osx("_")} rv:${e.number.int({min:2,max:6})}.0; ${a()}) `:`(Windows; U; Windows NT ${i.nt()})`}AppleWebKit/${n} (KHTML, like Gecko) Version/${o} Safari/${n}`},chrome(e){let a=i.safari();return`Mozilla/5.0 ${"mac"===e?`(Macintosh; ${t("mac")} Mac OS X ${i.osx("_")}) `:"win"===e?`(Windows; U; Windows NT ${i.nt()})`:`(X11; Linux ${t(e)}`} AppleWebKit/${a} (KHTML, like Gecko) Chrome/${i.chrome()} Safari/${a}`}},[l,s]=r();return o[l](s)}var ln=class extends Ir{avatar(){return ct({deprecated:"faker.internet.avatar()",proposed:"faker.image.avatarLegacy() or faker.image.avatar()",since:"8.4",until:"9.0"}),this.faker.image.avatarLegacy()}email(e={},a,r,t){var n;("string"==typeof e||null!=a||null!=r||null!=t)&&ct({deprecated:"faker.internet.email(firstName, lastName, provider, options)",proposed:"faker.internet.email({ firstName, lastName, provider, ... })",since:"8.0",until:"9.0"}),"string"==typeof e&&(e={firstName:e});let{firstName:i,lastName:o=a,provider:l=(null!=r?r:this.faker.helpers.arrayElement(this.faker.definitions.internet.free_email)),allowSpecialCharacters:s=null!=(n=null==t?void 0:t.allowSpecialCharacters)&&n}=e,c=this.userName({firstName:i,lastName:o});if(c=c.replace(/[^A-Za-z0-9._+-]+/g,""),c=c.substring(0,50),s){let e=[..."._-"],a=[...".!#$%&'*+-/=?^_`{|}~"];c=c.replace(this.faker.helpers.arrayElement(e),this.faker.helpers.arrayElement(a))}return c=c.replace(/\.{2,}/g,"."),c=c.replace(/^\./,""),c=c.replace(/\.$/,""),`${c}@${l}`}exampleEmail(e={},a,r){var t;("string"==typeof e||null!=a||null!=r)&&ct({deprecated:"faker.internet.exampleEmail(firstName, lastName, options)",proposed:"faker.internet.exampleEmail({ firstName, lastName, ... })",since:"8.0",until:"9.0"}),"string"==typeof e&&(e={firstName:e});let{firstName:n,lastName:i=a,allowSpecialCharacters:o=null!=(t=null==r?void 0:r.allowSpecialCharacters)&&t}=e,l=this.faker.helpers.arrayElement(this.faker.definitions.internet.example_email);return this.email({firstName:n,lastName:i,provider:l,allowSpecialCharacters:o})}userName(e={},a){("string"==typeof e||null!=a)&&ct({deprecated:"faker.internet.userName(firstName, lastName)",proposed:"faker.internet.userName({ firstName, lastName })",since:"8.0",until:"9.0"}),"string"==typeof e&&(e={firstName:e});let r,{firstName:t=this.faker.person.firstName(),lastName:n=(null!=a?a:this.faker.person.lastName()),lastName:i=a}=e,o=this.faker.number.int(i?1:2),l=this.faker.helpers.arrayElement([".","_"]);switch(o){case 0:r=`${t}${l}${n}${this.faker.number.int(99)}`;break;case 1:r=`${t}${l}${n}`;break;case 2:default:r=`${t}${this.faker.number.int(99)}`;break}return r=r.normalize("NFKD").replace(/[\u0300-\u036F]/g,""),r=[...r].map((e=>{var a;if(nn[e])return nn[e];let r=null!=(a=e.codePointAt(0))?a:Number.NaN;return r<128?e:r.toString(36)})).join(""),r=r.toString().replace(/'/g,""),r=r.replace(/ /g,""),r}displayName(e={},a){("string"==typeof e||null!=a)&&ct({deprecated:"faker.internet.displayName(firstName, lastName)",proposed:"faker.internet.displayName({ firstName, lastName })",since:"8.0",until:"9.0"}),"string"==typeof e&&(e={firstName:e});let r,{firstName:t=this.faker.person.firstName(),lastName:n=(null!=a?a:this.faker.person.lastName())}=e;switch(this.faker.number.int(2)){case 0:r=`${t}${this.faker.number.int(99)}`;break;case 1:r=t+this.faker.helpers.arrayElement([".","_"])+n;break;case 2:default:r=`${t}${this.faker.helpers.arrayElement([".","_"])}${n}${this.faker.number.int(99)}`;break}return r=r.toString().replace(/'/g,""),r=r.replace(/ /g,""),r}protocol(){let e=["http","https"];return this.faker.helpers.arrayElement(e)}httpMethod(){let e=["GET","POST","PUT","DELETE","PATCH"];return this.faker.helpers.arrayElement(e)}httpStatusCode(e={}){let{types:a=Object.keys(this.faker.definitions.internet.http_status_code)}=e,r=this.faker.helpers.arrayElement(a);return this.faker.helpers.arrayElement(this.faker.definitions.internet.http_status_code[r])}url(e={}){let{appendSlash:a=this.faker.datatype.boolean(),protocol:r="https"}=e;return`${r}://${this.domainName()}${a?"/":""}`}domainName(){return`${this.domainWord()}.${this.domainSuffix()}`}domainSuffix(){return this.faker.helpers.arrayElement(this.faker.definitions.internet.domain_suffix)}domainWord(){return this.faker.helpers.slugify(`${this.faker.word.adjective()}-${this.faker.word.noun()}`).toLowerCase()}ip(){return this.faker.datatype.boolean()?this.ipv4():this.ipv6()}ipv4(){return Array.from({length:4},(()=>this.faker.number.int(255))).join(".")}ipv6(){return Array.from({length:8},(()=>this.faker.string.hexadecimal({length:4,casing:"lower",prefix:""}))).join(":")}port(){return this.faker.number.int(65535)}userAgent(){return on(this.faker)}color(e={},a,r){("number"==typeof e||null!=r||null!=a)&&ct({deprecated:"faker.internet.color(redBase, greenBase, blueBase)",proposed:"faker.internet.color({ redBase, greenBase, blueBase })",since:"8.0",until:"9.0"}),"number"==typeof e&&(e={redBase:e});let{redBase:t=0,greenBase:n=(null!=a?a:0),blueBase:i=(null!=r?r:0)}=e,o=e=>Math.floor((this.faker.number.int(256)+e)/2).toString(16).padStart(2,"0"),l=o(t),s=o(n),c=o(i);return`#${l}${s}${c}`}mac(e={}){"string"==typeof e&&(e={separator:e});let a,{separator:r=":"}=e,t="";for([":","-",""].includes(r)||(r=":"),a=0;a<12;a++)t+=this.faker.number.hex(15),a%2===1&&11!==a&&(t+=r);return t}password(e={},a,r,t){let n=/[aeiouAEIOU]$/,i=/[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/,o=(e,a,r,t)=>{if(t.length>=e)return t;a&&(r=i.test(t)?n:i);let l=this.faker.number.int(94)+33,s=String.fromCodePoint(l);return a&&(s=s.toLowerCase()),r.test(s)?o(e,a,r,t+s):o(e,a,r,t)};("string"==typeof e||null!=a||null!=r||null!=t)&&ct({deprecated:"faker.internet.password(length, memorable, pattern, prefix)",proposed:"faker.internet.password({ length, memorable, pattern, prefix })",since:"8.0",until:"9.0"}),"number"==typeof e&&(e={length:e});let{length:l=15,memorable:s=null!=a&&a,pattern:c=(null!=r?r:/\w/),prefix:u=(null!=t?t:"")}=e;return o(l,s,c,u)}emoji(e={}){let{types:a=Object.keys(this.faker.definitions.internet.emoji)}=e,r=this.faker.helpers.arrayElement(a);return this.faker.helpers.arrayElement(this.faker.definitions.internet.emoji[r])}},sn=class extends Ir{zipCode(e={}){"string"==typeof e&&(e={format:e});let{state:a}=e;if(a){let e=this.faker.definitions.location.postcode_by_state[a];if(e)return this.faker.helpers.fake(e);throw new Wr(`No zip code definition found for state "${a}"`)}let{format:r=this.faker.definitions.location.postcode}=e;return"string"==typeof r&&(r=[r]),r=this.faker.helpers.arrayElement(r),this.faker.helpers.replaceSymbols(r)}zipCodeByState(e={}){ct({deprecated:"faker.location.zipCodeByState",proposed:"faker.location.zipCode({ state })",since:"8.0",until:"9.0"}),"string"==typeof e&&(e={state:e});let{state:a}=e;return this.zipCode({state:a})}city(){return this.faker.helpers.fake(this.faker.definitions.location.city_pattern)}cityName(){return ct({deprecated:"faker.location.cityName",proposed:"faker.location.city",since:"8.0",until:"9.0"}),this.faker.helpers.arrayElement(this.faker.definitions.location.city_name)}buildingNumber(){return this.faker.helpers.arrayElement(this.faker.definitions.location.building_number).replace(/#+/g,(e=>this.faker.string.numeric({length:e.length,allowLeadingZeros:!1})))}street(){return this.faker.helpers.fake(this.faker.definitions.location.street_pattern)}streetName(){return ct({deprecated:"faker.location.streetName",proposed:"faker.location.street",since:"8.0",until:"9.0"}),this.faker.helpers.arrayElement(this.faker.definitions.location.street_name)}streetAddress(e={}){"boolean"==typeof e&&(e={useFullAddress:e});let{useFullAddress:a}=e,r=this.faker.definitions.location.street_address[a?"full":"normal"];return this.faker.helpers.fake(r)}secondaryAddress(){return this.faker.helpers.arrayElement(this.faker.definitions.location.secondary_address).replace(/#+/g,(e=>this.faker.string.numeric({length:e.length,allowLeadingZeros:!1})))}county(){return this.faker.helpers.arrayElement(this.faker.definitions.location.county)}country(){return this.faker.helpers.arrayElement(this.faker.definitions.location.country)}countryCode(e={}){"string"==typeof e&&(e={variant:e});let{variant:a="alpha-2"}=e,r=(()=>{switch(a){case"numeric":return"numeric";case"alpha-3":return"alpha3";case"alpha-2":default:return"alpha2"}})();return this.faker.helpers.arrayElement(this.faker.definitions.location.country_code)[r]}state(e={}){let{abbreviated:a=!1}=e,r=a?this.faker.definitions.location.state_abbr:this.faker.definitions.location.state;return this.faker.helpers.arrayElement(r)}stateAbbr(){return ct({deprecated:"faker.location.stateAbbr()",proposed:"faker.location.state({ abbreviated: true })",since:"8.0",until:"9.0"}),this.state({abbreviated:!0})}latitude(e={},a=-90,r=4){"number"==typeof e&&(ct({deprecated:"faker.location.latitude(max, min, precision)",proposed:"faker.location.latitude({ max, min, precision })",since:"8.0",until:"9.0"}),e={max:e});let{max:t=90,min:n=a,precision:i=r}=e;return this.faker.number.float({min:n,max:t,fractionDigits:i})}longitude(e={},a=-180,r=4){"number"==typeof e&&(ct({deprecated:"faker.location.longitude(max, min, precision)",proposed:"faker.location.longitude({ max, min, precision })",since:"8.0",until:"9.0"}),e={max:e});let{max:t=180,min:n=a,precision:i=r}=e;return this.faker.number.float({max:t,min:n,fractionDigits:i})}direction(e={}){"boolean"==typeof e&&(ct({deprecated:"faker.location.direction(abbreviated)",proposed:"faker.location.direction({ abbreviated })",since:"8.0",until:"9.0"}),e={abbreviated:e});let{abbreviated:a=!1}=e;return a?this.faker.helpers.arrayElement(this.faker.definitions.location.direction_abbr):this.faker.helpers.arrayElement(this.faker.definitions.location.direction)}cardinalDirection(e={}){"boolean"==typeof e&&(ct({deprecated:"faker.location.cardinalDirection(abbreviated)",proposed:"faker.location.cardinalDirection({ abbreviated })",since:"8.0",until:"9.0"}),e={abbreviated:e});let{abbreviated:a=!1}=e;return a?this.faker.helpers.arrayElement(this.faker.definitions.location.direction_abbr.slice(0,4)):this.faker.helpers.arrayElement(this.faker.definitions.location.direction.slice(0,4))}ordinalDirection(e={}){"boolean"==typeof e&&(ct({deprecated:"faker.location.ordinalDirection(abbreviated)",proposed:"faker.location.ordinalDirection({ abbreviated })",since:"8.0",until:"9.0"}),e={abbreviated:e});let{abbreviated:a=!1}=e;return a?this.faker.helpers.arrayElement(this.faker.definitions.location.direction_abbr.slice(4,8)):this.faker.helpers.arrayElement(this.faker.definitions.location.direction.slice(4,8))}nearbyGPSCoordinate(e={},a=10,r=!1){Array.isArray(e)&&(ct({deprecated:"faker.location.nearbyGPSCoordinate(coordinate, radius, isMetric)",proposed:"faker.location.nearbyGPSCoordinate({ origin, radius, isMetric })",since:"8.0",until:"9.0"}),e={origin:e});let{origin:t,radius:n=a,isMetric:i=r}=e;if(null==t)return[this.latitude(),this.longitude()];let o=this.faker.number.float({max:2*Math.PI,fractionDigits:5}),l=i?n:1.60934*n,s=.995*this.faker.number.float({max:l,fractionDigits:3}),c=4e4/360,u=s/c,d=[t[0]+Math.sin(o)*u,t[1]+Math.cos(o)*u];return d[0]=d[0]%180,(d[0]<-90||d[0]>90)&&(d[0]=180*Math.sign(d[0])-d[0],d[1]+=180),d[1]=(d[1]%360+540)%360-180,[d[0],d[1]]}timeZone(){return this.faker.helpers.arrayElement(this.faker.definitions.location.time_zone)}};function cn(e,a,r=(e=>e)){let t={};for(let n of e){let e=a(n);void 0===t[e]&&(t[e]=[]),t[e].push(r(n))}return t}var un={fail:()=>{throw new Wr("No words found that match the given length.")},closest:(e,a)=>{let r=cn(e,(e=>e.length)),t=Object.keys(r).map(Number),n=Math.min(...t),i=Math.max(...t),o=Math.min(a.min-n,i-a.max);return e.filter((e=>e.length===a.min-o||e.length===a.max+o))},shortest:e=>{let a=Math.min(...e.map((e=>e.length)));return e.filter((e=>e.length===a))},longest:e=>{let a=Math.max(...e.map((e=>e.length)));return e.filter((e=>e.length===a))},"any-length":e=>[...e]};function dn(e){let{wordList:a,length:r,strategy:t="any-length"}=e;if(r){let e="number"==typeof r?e=>e.length===r:e=>e.length>=r.min&&e.length<=r.max,n=a.filter(e);return n.length>0?n:"number"==typeof r?un[t](a,{min:r,max:r}):un[t](a,r)}return"shortest"===t||"longest"===t?un[t](a):[...a]}var hn=class extends Ir{word(e={}){let a="number"==typeof e?{length:e}:e;return this.faker.helpers.arrayElement(dn({...a,wordList:this.faker.definitions.lorem.words}))}words(e=3){return this.faker.helpers.multiple((()=>this.word()),{count:e}).join(" ")}sentence(e={min:3,max:10}){let a=this.words(e);return`${a.charAt(0).toUpperCase()+a.substring(1)}.`}slug(e=3){let a=this.words(e);return this.faker.helpers.slugify(a)}sentences(e={min:2,max:6},a=" "){return this.faker.helpers.multiple((()=>this.sentence()),{count:e}).join(a)}paragraph(e=3){return this.sentences(e)}paragraphs(e=3,a="\n"){return this.faker.helpers.multiple((()=>this.paragraph()),{count:e}).join(a)}text(){let e=["sentence","sentences","paragraph","paragraphs","lines"],a=this.faker.helpers.arrayElement(e);return this[a]()}lines(e={min:1,max:5}){return this.sentences(e,"\n")}},pn=class extends Ir{genre(){return this.faker.helpers.arrayElement(this.faker.definitions.music.genre)}songName(){return this.faker.helpers.arrayElement(this.faker.definitions.music.song_name)}},mn=class extends Ir{number(e){return null!=e&&ct({deprecated:"faker.phone.number(format)",proposed:"faker.phone.number(), faker.string.numeric() or faker.helpers.fromRegExp()",since:"8.1",until:"9.0"}),e=null!=e?e:this.faker.helpers.arrayElement(this.faker.definitions.phone_number.formats),Tt(this.faker,e)}imei(){return this.faker.helpers.replaceCreditCardSymbols("##-######-######-L","#")}},yn=class extends Ir{word(){ct({deprecated:"faker.random.word()",proposed:"faker.lorem.word() or faker.word.sample()",since:"8.0",until:"9.0"});let e=[()=>this.faker.location.cardinalDirection(),this.faker.location.country,this.faker.location.county,()=>this.faker.location.direction(),()=>this.faker.location.ordinalDirection(),this.faker.location.state,this.faker.location.street,this.faker.color.human,this.faker.commerce.department,this.faker.commerce.product,this.faker.commerce.productAdjective,this.faker.commerce.productMaterial,this.faker.commerce.productName,this.faker.company.buzzAdjective,this.faker.company.buzzNoun,this.faker.company.buzzVerb,this.faker.company.catchPhraseAdjective,this.faker.company.catchPhraseDescriptor,this.faker.company.catchPhraseNoun,this.faker.finance.accountName,this.faker.finance.currencyName,this.faker.finance.transactionType,this.faker.hacker.abbreviation,this.faker.hacker.adjective,this.faker.hacker.ingverb,this.faker.hacker.noun,this.faker.hacker.verb,this.faker.lorem.word,this.faker.music.genre,this.faker.person.gender,this.faker.person.jobArea,this.faker.person.jobDescriptor,this.faker.person.jobTitle,this.faker.person.jobType,this.faker.person.sex,()=>this.faker.science.chemicalElement().name,()=>this.faker.science.unit().name,this.faker.vehicle.bicycle,this.faker.vehicle.color,this.faker.vehicle.fuel,this.faker.vehicle.manufacturer,this.faker.vehicle.type,this.faker.word.adjective,this.faker.word.adverb,this.faker.word.conjunction,this.faker.word.interjection,this.faker.word.noun,this.faker.word.preposition,this.faker.word.verb],a=["!","#","%","&","*",")","(","+","=",".","<",">","{","}","[","]",":",";","'",'"',"_","-"],r="",t=0;do{let a=this.faker.helpers.arrayElement(e);try{r=a()}catch{if(t++,t>100)throw new Wr("No matching word data available for the current locale");continue}}while(!r||a.some((e=>r.includes(e))));return this.faker.helpers.arrayElement(r.split(" "))}words(e={min:1,max:3}){return ct({deprecated:"faker.random.words()",proposed:"faker.lorem.words() or faker.word.words()",since:"8.0",until:"9.0"}),this.faker.helpers.multiple(this.word,{count:e}).join(" ")}locale(){throw new Wr("This method has been removed. Please use `faker.helpers.objectKey(allLocales/allFakers)` instead.")}alpha(e={}){return ct({deprecated:"faker.random.alpha()",proposed:"faker.string.alpha()",since:"8.0",until:"9.0"}),"number"==typeof e?this.faker.string.alpha(e):this.faker.string.alpha({length:e.count,casing:e.casing,exclude:e.bannedChars})}alphaNumeric(e=1,a={}){return ct({deprecated:"faker.random.alphaNumeric()",proposed:"faker.string.alphanumeric()",since:"8.0",until:"9.0"}),this.faker.string.alphanumeric({length:e,exclude:a.bannedChars,casing:a.casing})}numeric(e=1,a={}){return ct({deprecated:"faker.random.numeric()",proposed:"faker.string.numeric()",since:"8.0",until:"9.0"}),this.faker.string.numeric({length:e,allowLeadingZeros:a.allowLeadingZeros,exclude:a.bannedDigits})}},gn=class extends Ir{chemicalElement(){return this.faker.helpers.arrayElement(this.faker.definitions.science.chemicalElement)}unit(){return this.faker.helpers.arrayElement(this.faker.definitions.science.unit)}},fn=["video","audio","image","text","application"],bn=["application/pdf","audio/mpeg","audio/wav","image/png","image/jpeg","image/gif","video/mp4","video/mpeg","text/html"],kn=["en","wl","ww"],vn={index:"o",slot:"s",mac:"x",pci:"p"},wn=["SUN","MON","TUE","WED","THU","FRI","SAT"],Cn=class extends Ir{fileName(e={}){let{extensionCount:a=1}=e,r=this.faker.word.words().toLowerCase().replace(/\W/g,"_"),t=this.faker.helpers.multiple((()=>this.fileExt()),{count:a}).join(".");return 0===t.length?r:`${r}.${t}`}commonFileName(e){return`${this.fileName({extensionCount:0})}.${e||this.commonFileExt()}`}mimeType(){let e=Object.keys(this.faker.definitions.system.mimeTypes);return this.faker.helpers.arrayElement(e)}commonFileType(){return this.faker.helpers.arrayElement(fn)}commonFileExt(){return this.fileExt(this.faker.helpers.arrayElement(bn))}fileType(){let e=this.faker.definitions.system.mimeTypes,a=new Set(Object.keys(e).map((e=>e.split("/")[0])));return this.faker.helpers.arrayElement([...a])}fileExt(e){let a=this.faker.definitions.system.mimeTypes;if("string"==typeof e)return this.faker.helpers.arrayElement(a[e].extensions);let r=new Set(Object.values(a).flatMap((({extensions:e})=>e)));return this.faker.helpers.arrayElement([...r])}directoryPath(){let e=this.faker.definitions.system.directoryPaths;return this.faker.helpers.arrayElement(e)}filePath(){return`${this.directoryPath()}/${this.fileName()}`}semver(){return[this.faker.number.int(9),this.faker.number.int(9),this.faker.number.int(9)].join(".")}networkInterface(e={}){var a,r,t,n,i;let o,{interfaceType:l=this.faker.helpers.arrayElement(kn),interfaceSchema:s=this.faker.helpers.objectKey(vn)}=e,c="",u=()=>this.faker.string.numeric({allowLeadingZeros:!0});switch(s){case"index":o=u();break;case"slot":o=`${u()}${null!=(a=this.faker.helpers.maybe((()=>`f${u()}`)))?a:""}${null!=(r=this.faker.helpers.maybe((()=>`d${u()}`)))?r:""}`;break;case"mac":o=this.faker.internet.mac("");break;case"pci":c=null!=(t=this.faker.helpers.maybe((()=>`P${u()}`)))?t:"",o=`${u()}s${u()}${null!=(n=this.faker.helpers.maybe((()=>`f${u()}`)))?n:""}${null!=(i=this.faker.helpers.maybe((()=>`d${u()}`)))?i:""}`;break}return`${c}${l}${vn[s]}${o}`}cron(e={}){let{includeYear:a=!1,includeNonStandard:r=!1}=e,t=[this.faker.number.int(59),"*"],n=[this.faker.number.int(23),"*"],i=[this.faker.number.int({min:1,max:31}),"*","?"],o=[this.faker.number.int({min:1,max:12}),"*"],l=[this.faker.number.int(6),this.faker.helpers.arrayElement(wn),"*","?"],s=[this.faker.number.int({min:1970,max:2099}),"*"],c=this.faker.helpers.arrayElement(t),u=this.faker.helpers.arrayElement(n),d=this.faker.helpers.arrayElement(i),h=this.faker.helpers.arrayElement(o),p=this.faker.helpers.arrayElement(l),m=this.faker.helpers.arrayElement(s),y=`${c} ${u} ${d} ${h} ${p}`;a&&(y+=` ${m}`);let g=["@annually","@daily","@hourly","@monthly","@reboot","@weekly","@yearly"];return!r||this.faker.datatype.boolean()?y:this.faker.helpers.arrayElement(g)}},Sn=class extends Ir{vehicle(){return`${this.manufacturer()} ${this.model()}`}manufacturer(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.manufacturer)}model(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.model)}type(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.type)}fuel(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.fuel)}vin(){let e=["o","i","q","O","I","Q"];return`${this.faker.string.alphanumeric({length:10,casing:"upper",exclude:e})}${this.faker.string.alpha({length:1,casing:"upper",exclude:e})}${this.faker.string.alphanumeric({length:1,casing:"upper",exclude:e})}${this.faker.number.int({min:1e4,max:99999})}`}color(){return this.faker.color.human()}vrm(){return`${this.faker.string.alpha({length:2,casing:"upper"})}${this.faker.string.numeric({length:2,allowLeadingZeros:!0})}${this.faker.string.alpha({length:3,casing:"upper"})}`}bicycle(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.bicycle_type)}},An=class extends Ir{adjective(e={}){let a="number"==typeof e?{length:e}:e;return this.faker.helpers.arrayElement(dn({...a,wordList:this.faker.definitions.word.adjective}))}adverb(e={}){let a="number"==typeof e?{length:e}:e;return this.faker.helpers.arrayElement(dn({...a,wordList:this.faker.definitions.word.adverb}))}conjunction(e={}){let a="number"==typeof e?{length:e}:e;return this.faker.helpers.arrayElement(dn({...a,wordList:this.faker.definitions.word.conjunction}))}interjection(e={}){let a="number"==typeof e?{length:e}:e;return this.faker.helpers.arrayElement(dn({...a,wordList:this.faker.definitions.word.interjection}))}noun(e={}){let a="number"==typeof e?{length:e}:e;return this.faker.helpers.arrayElement(dn({...a,wordList:this.faker.definitions.word.noun}))}preposition(e={}){let a="number"==typeof e?{length:e}:e;return this.faker.helpers.arrayElement(dn({...a,wordList:this.faker.definitions.word.preposition}))}verb(e={}){let a="number"==typeof e?{length:e}:e;return this.faker.helpers.arrayElement(dn({...a,wordList:this.faker.definitions.word.verb}))}sample(e={}){let a=this.faker.helpers.shuffle([this.adjective,this.adverb,this.conjunction,this.interjection,this.noun,this.preposition,this.verb]);for(let r of a)try{return r(e)}catch{continue}throw new Wr("No matching word data available for the current locale")}words(e={}){"number"==typeof e&&(e={count:e});let{count:a={min:1,max:3}}=e;return this.faker.helpers.multiple((()=>this.sample()),{count:a}).join(" ")}},Mn=class extends Ht{constructor(e){super({randomizer:e.randomizer}),Gr(this,"rawDefinitions"),Gr(this,"definitions"),Gr(this,"random",new yn(this)),Gr(this,"airline",new $r(this)),Gr(this,"animal",new Wt(this)),Gr(this,"color",new Qr(this)),Gr(this,"commerce",new zt(this)),Gr(this,"company",new It(this)),Gr(this,"database",new Ot(this)),Gr(this,"date",new pt(this)),Gr(this,"finance",new jt(this)),Gr(this,"git",new Vt(this)),Gr(this,"hacker",new Ut(this)),Gr(this,"helpers",new Rt(this)),Gr(this,"image",new Xt(this)),Gr(this,"internet",new ln(this)),Gr(this,"location",new sn(this)),Gr(this,"lorem",new hn(this)),Gr(this,"music",new pn(this)),Gr(this,"person",new ot(this)),Gr(this,"phone",new mn(this)),Gr(this,"science",new gn(this)),Gr(this,"system",new Cn(this)),Gr(this,"vehicle",new Sn(this)),Gr(this,"word",new An(this));let{locales:a}=e;if(null!=a){ct({deprecated:"new Faker({ locales: {a, b}, locale: 'a', localeFallback: 'b' })",proposed:"new Faker({ locale: [a, b, ...] }) or new Faker({ locale: a })",since:"8.0",until:"9.0"});let{locale:r="en",localeFallback:t="en"}=e;e={locale:[a[r],a[t]]}}let{locale:r}=e;if(Array.isArray(r)){if(0===r.length)throw new Wr("The locale option must contain at least one locale definition.");r=Gt(r)}this.rawDefinitions=r,this.definitions=at(this.rawDefinitions)}get address(){return ct({deprecated:"faker.address",proposed:"faker.location",since:"8.0",until:"10.0"}),this.location}get name(){return ct({deprecated:"faker.name",proposed:"faker.person",since:"8.0",until:"10.0"}),this.person}getMetadata(){var e;return null!=(e=this.rawDefinitions.metadata)?e:{}}get locales(){throw new Wr("The locales property has been removed. Please use the constructor instead.")}set locales(e){throw new Wr("The locales property has been removed. Please use the constructor instead.")}get locale(){throw new Wr("The locale property has been removed. Please use the constructor instead.")}set locale(e){throw new Wr("The locale property has been removed. Please use the constructor instead.")}get localeFallback(){throw new Wr("The localeFallback property has been removed. Please use the constructor instead.")}set localeFallback(e){throw new Wr("The localeFallback property has been removed. Please use the constructor instead.")}setLocale(){throw new Wr("This method has been removed. Please use the constructor instead.")}},Bn=["CIE 1931 XYZ","CIEUVW","Uniform Color Spaces (UCSs)","CIELUV","CIELAB","HSLuv","sRGB","Adobe RGB","Adobe Wide Gamut RGB","Rec. 2100","ProPhoto RGB Color Space","scRGB","DCI-P3","Display-P3","Rec. 601","Rec. 709","Academy Color Encoding System (ACES)","Rec. 2020","YPbPr","YDbDr","YIQ","xvYCC","sYCC","HSV","HSL","HWB","RGBA","HSLA","LCh","CMY","CMYK","Munsell Color System","Natural Color System (NSC)","Pantone Matching System (PMS)","RAL","Federal Standard 595C","British Standard Colour (BS)","HKS","LMS","RG","RGK"],Tn={space:Bn},xn=Tn,Rn=["utf8_unicode_ci","utf8_general_ci","utf8_bin","ascii_bin","ascii_general_ci","cp1250_bin","cp1250_general_ci"],Ln=["InnoDB","MyISAM","MEMORY","CSV","BLACKHOLE","ARCHIVE"],Pn=["int","varchar","text","date","datetime","tinyint","time","timestamp","smallint","mediumint","bigint","decimal","float","double","real","bit","boolean","serial","blob","binary","enum","set","geometry","point"],En={collation:Rn,engine:Ln,type:Pn},Dn=En,Nn=["ADP","AGP","AI","API","ASCII","CLI","COM","CSS","DNS","DRAM","EXE","FTP","GB","HDD","HEX","HTTP","IB","IP","JBOD","JSON","OCR","PCI","PNG","RAM","RSS","SAS","SCSI","SDD","SMS","SMTP","SQL","SSD","SSL","TCP","THX","TLS","UDP","USB","UTF8","VGA","XML","XSS"],Hn={abbreviation:Nn},Gn=Hn,Wn={smiley:["😀","😃","😄","😁","😆","😅","🤣","😂","🙂","🙃","😉","😊","😇","🥰","😍","🤩","😘","😗","☺️","😚","😙","🥲","😋","😛","😜","🤪","😝","🤑","🤗","🤭","🤫","🤔","🤐","🤨","😐","😑","😶","😶‍🌫️","😏","😒","🙄","😬","😮‍💨","🤥","😌","😔","😪","🤤","😴","😷","🤒","🤕","🤢","🤮","🤧","🥵","🥶","🥴","😵","😵‍💫","🤯","🤠","🥳","🥸","😎","🤓","🧐","😕","😟","🙁","☹️","😮","😯","😲","😳","🥺","😦","😧","😨","😰","😥","😢","😭","😱","😖","😣","😞","😓","😩","😫","🥱","😤","😡","😠","🤬","😈","👿","💀","☠️","💩","🤡","👹","👺","👻","👽","👾","🤖","😺","😸","😹","😻","😼","😽","🙀","😿","😾","🙈","🙉","🙊","💋","💌","💘","💝","💖","💗","💓","💞","💕","💟","❣️","💔","❤️‍🔥","❤️‍🩹","❤️","🧡","💛","💚","💙","💜","🤎","🖤","🤍","💯","💢","💥","💫","💦","💨","🕳️","💣","💬","👁️‍🗨️","🗨️","🗯️","💭","💤"],body:["👋","👋🏻","👋🏼","👋🏽","👋🏾","👋🏿","🤚","🤚🏻","🤚🏼","🤚🏽","🤚🏾","🤚🏿","🖐️","🖐🏻","🖐🏼","🖐🏽","🖐🏾","🖐🏿","✋","✋🏻","✋🏼","✋🏽","✋🏾","✋🏿","🖖","🖖🏻","🖖🏼","🖖🏽","🖖🏾","🖖🏿","👌","👌🏻","👌🏼","👌🏽","👌🏾","👌🏿","🤌","🤌🏻","🤌🏼","🤌🏽","🤌🏾","🤌🏿","🤏","🤏🏻","🤏🏼","🤏🏽","🤏🏾","🤏🏿","✌️","✌🏻","✌🏼","✌🏽","✌🏾","✌🏿","🤞","🤞🏻","🤞🏼","🤞🏽","🤞🏾","🤞🏿","🤟","🤟🏻","🤟🏼","🤟🏽","🤟🏾","🤟🏿","🤘","🤘🏻","🤘🏼","🤘🏽","🤘🏾","🤘🏿","🤙","🤙🏻","🤙🏼","🤙🏽","🤙🏾","🤙🏿","👈","👈🏻","👈🏼","👈🏽","👈🏾","👈🏿","👉","👉🏻","👉🏼","👉🏽","👉🏾","👉🏿","👆","👆🏻","👆🏼","👆🏽","👆🏾","👆🏿","🖕","🖕🏻","🖕🏼","🖕🏽","🖕🏾","🖕🏿","👇","👇🏻","👇🏼","👇🏽","👇🏾","👇🏿","☝️","☝🏻","☝🏼","☝🏽","☝🏾","☝🏿","👍","👍🏻","👍🏼","👍🏽","👍🏾","👍🏿","👎","👎🏻","👎🏼","👎🏽","👎🏾","👎🏿","✊","✊🏻","✊🏼","✊🏽","✊🏾","✊🏿","👊","👊🏻","👊🏼","👊🏽","👊🏾","👊🏿","🤛","🤛🏻","🤛🏼","🤛🏽","🤛🏾","🤛🏿","🤜","🤜🏻","🤜🏼","🤜🏽","🤜🏾","🤜🏿","👏","👏🏻","👏🏼","👏🏽","👏🏾","👏🏿","🙌","🙌🏻","🙌🏼","🙌🏽","🙌🏾","🙌🏿","👐","👐🏻","👐🏼","👐🏽","👐🏾","👐🏿","🤲","🤲🏻","🤲🏼","🤲🏽","🤲🏾","🤲🏿","🤝","🙏","🙏🏻","🙏🏼","🙏🏽","🙏🏾","🙏🏿","✍️","✍🏻","✍🏼","✍🏽","✍🏾","✍🏿","💅","💅🏻","💅🏼","💅🏽","💅🏾","💅🏿","🤳","🤳🏻","🤳🏼","🤳🏽","🤳🏾","🤳🏿","💪","💪🏻","💪🏼","💪🏽","💪🏾","💪🏿","🦾","🦿","🦵","🦵🏻","🦵🏼","🦵🏽","🦵🏾","🦵🏿","🦶","🦶🏻","🦶🏼","🦶🏽","🦶🏾","🦶🏿","👂","👂🏻","👂🏼","👂🏽","👂🏾","👂🏿","🦻","🦻🏻","🦻🏼","🦻🏽","🦻🏾","🦻🏿","👃","👃🏻","👃🏼","👃🏽","👃🏾","👃🏿","🧠","🫀","🫁","🦷","🦴","👀","👁️","👅","👄"],person:["👶","👶🏻","👶🏼","👶🏽","👶🏾","👶🏿","🧒","🧒🏻","🧒🏼","🧒🏽","🧒🏾","🧒🏿","👦","👦🏻","👦🏼","👦🏽","👦🏾","👦🏿","👧","👧🏻","👧🏼","👧🏽","👧🏾","👧🏿","🧑","🧑🏻","🧑🏼","🧑🏽","🧑🏾","🧑🏿","👱","👱🏻","👱🏼","👱🏽","👱🏾","👱🏿","👨","👨🏻","👨🏼","👨🏽","👨🏾","👨🏿","🧔","🧔🏻","🧔🏼","🧔🏽","🧔🏾","🧔🏿","🧔‍♂️","🧔🏻‍♂️","🧔🏼‍♂️","🧔🏽‍♂️","🧔🏾‍♂️","🧔🏿‍♂️","🧔‍♀️","🧔🏻‍♀️","🧔🏼‍♀️","🧔🏽‍♀️","🧔🏾‍♀️","🧔🏿‍♀️","👨‍🦰","👨🏻‍🦰","👨🏼‍🦰","👨🏽‍🦰","👨🏾‍🦰","👨🏿‍🦰","👨‍🦱","👨🏻‍🦱","👨🏼‍🦱","👨🏽‍🦱","👨🏾‍🦱","👨🏿‍🦱","👨‍🦳","👨🏻‍🦳","👨🏼‍🦳","👨🏽‍🦳","👨🏾‍🦳","👨🏿‍🦳","👨‍🦲","👨🏻‍🦲","👨🏼‍🦲","👨🏽‍🦲","👨🏾‍🦲","👨🏿‍🦲","👩","👩🏻","👩🏼","👩🏽","👩🏾","👩🏿","👩‍🦰","👩🏻‍🦰","👩🏼‍🦰","👩🏽‍🦰","👩🏾‍🦰","👩🏿‍🦰","🧑‍🦰","🧑🏻‍🦰","🧑🏼‍🦰","🧑🏽‍🦰","🧑🏾‍🦰","🧑🏿‍🦰","👩‍🦱","👩🏻‍🦱","👩🏼‍🦱","👩🏽‍🦱","👩🏾‍🦱","👩🏿‍🦱","🧑‍🦱","🧑🏻‍🦱","🧑🏼‍🦱","🧑🏽‍🦱","🧑🏾‍🦱","🧑🏿‍🦱","👩‍🦳","👩🏻‍🦳","👩🏼‍🦳","👩🏽‍🦳","👩🏾‍🦳","👩🏿‍🦳","🧑‍🦳","🧑🏻‍🦳","🧑🏼‍🦳","🧑🏽‍🦳","🧑🏾‍🦳","🧑🏿‍🦳","👩‍🦲","👩🏻‍🦲","👩🏼‍🦲","👩🏽‍🦲","👩🏾‍🦲","👩🏿‍🦲","🧑‍🦲","🧑🏻‍🦲","🧑🏼‍🦲","🧑🏽‍🦲","🧑🏾‍🦲","🧑🏿‍🦲","👱‍♀️","👱🏻‍♀️","👱🏼‍♀️","👱🏽‍♀️","👱🏾‍♀️","👱🏿‍♀️","👱‍♂️","👱🏻‍♂️","👱🏼‍♂️","👱🏽‍♂️","👱🏾‍♂️","👱🏿‍♂️","🧓","🧓🏻","🧓🏼","🧓🏽","🧓🏾","🧓🏿","👴","👴🏻","👴🏼","👴🏽","👴🏾","👴🏿","👵","👵🏻","👵🏼","👵🏽","👵🏾","👵🏿","🙍","🙍🏻","🙍🏼","🙍🏽","🙍🏾","🙍🏿","🙍‍♂️","🙍🏻‍♂️","🙍🏼‍♂️","🙍🏽‍♂️","🙍🏾‍♂️","🙍🏿‍♂️","🙍‍♀️","🙍🏻‍♀️","🙍🏼‍♀️","🙍🏽‍♀️","🙍🏾‍♀️","🙍🏿‍♀️","🙎","🙎🏻","🙎🏼","🙎🏽","🙎🏾","🙎🏿","🙎‍♂️","🙎🏻‍♂️","🙎🏼‍♂️","🙎🏽‍♂️","🙎🏾‍♂️","🙎🏿‍♂️","🙎‍♀️","🙎🏻‍♀️","🙎🏼‍♀️","🙎🏽‍♀️","🙎🏾‍♀️","🙎🏿‍♀️","🙅","🙅🏻","🙅🏼","🙅🏽","🙅🏾","🙅🏿","🙅‍♂️","🙅🏻‍♂️","🙅🏼‍♂️","🙅🏽‍♂️","🙅🏾‍♂️","🙅🏿‍♂️","🙅‍♀️","🙅🏻‍♀️","🙅🏼‍♀️","🙅🏽‍♀️","🙅🏾‍♀️","🙅🏿‍♀️","🙆","🙆🏻","🙆🏼","🙆🏽","🙆🏾","🙆🏿","🙆‍♂️","🙆🏻‍♂️","🙆🏼‍♂️","🙆🏽‍♂️","🙆🏾‍♂️","🙆🏿‍♂️","🙆‍♀️","🙆🏻‍♀️","🙆🏼‍♀️","🙆🏽‍♀️","🙆🏾‍♀️","🙆🏿‍♀️","💁","💁🏻","💁🏼","💁🏽","💁🏾","💁🏿","💁‍♂️","💁🏻‍♂️","💁🏼‍♂️","💁🏽‍♂️","💁🏾‍♂️","💁🏿‍♂️","💁‍♀️","💁🏻‍♀️","💁🏼‍♀️","💁🏽‍♀️","💁🏾‍♀️","💁🏿‍♀️","🙋","🙋🏻","🙋🏼","🙋🏽","🙋🏾","🙋🏿","🙋‍♂️","🙋🏻‍♂️","🙋🏼‍♂️","🙋🏽‍♂️","🙋🏾‍♂️","🙋🏿‍♂️","🙋‍♀️","🙋🏻‍♀️","🙋🏼‍♀️","🙋🏽‍♀️","🙋🏾‍♀️","🙋🏿‍♀️","🧏","🧏🏻","🧏🏼","🧏🏽","🧏🏾","🧏🏿","🧏‍♂️","🧏🏻‍♂️","🧏🏼‍♂️","🧏🏽‍♂️","🧏🏾‍♂️","🧏🏿‍♂️","🧏‍♀️","🧏🏻‍♀️","🧏🏼‍♀️","🧏🏽‍♀️","🧏🏾‍♀️","🧏🏿‍♀️","🙇","🙇🏻","🙇🏼","🙇🏽","🙇🏾","🙇🏿","🙇‍♂️","🙇🏻‍♂️","🙇🏼‍♂️","🙇🏽‍♂️","🙇🏾‍♂️","🙇🏿‍♂️","🙇‍♀️","🙇🏻‍♀️","🙇🏼‍♀️","🙇🏽‍♀️","🙇🏾‍♀️","🙇🏿‍♀️","🤦","🤦🏻","🤦🏼","🤦🏽","🤦🏾","🤦🏿","🤦‍♂️","🤦🏻‍♂️","🤦🏼‍♂️","🤦🏽‍♂️","🤦🏾‍♂️","🤦🏿‍♂️","🤦‍♀️","🤦🏻‍♀️","🤦🏼‍♀️","🤦🏽‍♀️","🤦🏾‍♀️","🤦🏿‍♀️","🤷","🤷🏻","🤷🏼","🤷🏽","🤷🏾","🤷🏿","🤷‍♂️","🤷🏻‍♂️","🤷🏼‍♂️","🤷🏽‍♂️","🤷🏾‍♂️","🤷🏿‍♂️","🤷‍♀️","🤷🏻‍♀️","🤷🏼‍♀️","🤷🏽‍♀️","🤷🏾‍♀️","🤷🏿‍♀️","🧑‍⚕️","🧑🏻‍⚕️","🧑🏼‍⚕️","🧑🏽‍⚕️","🧑🏾‍⚕️","🧑🏿‍⚕️","👨‍⚕️","👨🏻‍⚕️","👨🏼‍⚕️","👨🏽‍⚕️","👨🏾‍⚕️","👨🏿‍⚕️","👩‍⚕️","👩🏻‍⚕️","👩🏼‍⚕️","👩🏽‍⚕️","👩🏾‍⚕️","👩🏿‍⚕️","🧑‍🎓","🧑🏻‍🎓","🧑🏼‍🎓","🧑🏽‍🎓","🧑🏾‍🎓","🧑🏿‍🎓","👨‍🎓","👨🏻‍🎓","👨🏼‍🎓","👨🏽‍🎓","👨🏾‍🎓","👨🏿‍🎓","👩‍🎓","👩🏻‍🎓","👩🏼‍🎓","👩🏽‍🎓","👩🏾‍🎓","👩🏿‍🎓","🧑‍🏫","🧑🏻‍🏫","🧑🏼‍🏫","🧑🏽‍🏫","🧑🏾‍🏫","🧑🏿‍🏫","👨‍🏫","👨🏻‍🏫","👨🏼‍🏫","👨🏽‍🏫","👨🏾‍🏫","👨🏿‍🏫","👩‍🏫","👩🏻‍🏫","👩🏼‍🏫","👩🏽‍🏫","👩🏾‍🏫","👩🏿‍🏫","🧑‍⚖️","🧑🏻‍⚖️","🧑🏼‍⚖️","🧑🏽‍⚖️","🧑🏾‍⚖️","🧑🏿‍⚖️","👨‍⚖️","👨🏻‍⚖️","👨🏼‍⚖️","👨🏽‍⚖️","👨🏾‍⚖️","👨🏿‍⚖️","👩‍⚖️","👩🏻‍⚖️","👩🏼‍⚖️","👩🏽‍⚖️","👩🏾‍⚖️","👩🏿‍⚖️","🧑‍🌾","🧑🏻‍🌾","🧑🏼‍🌾","🧑🏽‍🌾","🧑🏾‍🌾","🧑🏿‍🌾","👨‍🌾","👨🏻‍🌾","👨🏼‍🌾","👨🏽‍🌾","👨🏾‍🌾","👨🏿‍🌾","👩‍🌾","👩🏻‍🌾","👩🏼‍🌾","👩🏽‍🌾","👩🏾‍🌾","👩🏿‍🌾","🧑‍🍳","🧑🏻‍🍳","🧑🏼‍🍳","🧑🏽‍🍳","🧑🏾‍🍳","🧑🏿‍🍳","👨‍🍳","👨🏻‍🍳","👨🏼‍🍳","👨🏽‍🍳","👨🏾‍🍳","👨🏿‍🍳","👩‍🍳","👩🏻‍🍳","👩🏼‍🍳","👩🏽‍🍳","👩🏾‍🍳","👩🏿‍🍳","🧑‍🔧","🧑🏻‍🔧","🧑🏼‍🔧","🧑🏽‍🔧","🧑🏾‍🔧","🧑🏿‍🔧","👨‍🔧","👨🏻‍🔧","👨🏼‍🔧","👨🏽‍🔧","👨🏾‍🔧","👨🏿‍🔧","👩‍🔧","👩🏻‍🔧","👩🏼‍🔧","👩🏽‍🔧","👩🏾‍🔧","👩🏿‍🔧","🧑‍🏭","🧑🏻‍🏭","🧑🏼‍🏭","🧑🏽‍🏭","🧑🏾‍🏭","🧑🏿‍🏭","👨‍🏭","👨🏻‍🏭","👨🏼‍🏭","👨🏽‍🏭","👨🏾‍🏭","👨🏿‍🏭","👩‍🏭","👩🏻‍🏭","👩🏼‍🏭","👩🏽‍🏭","👩🏾‍🏭","👩🏿‍🏭","🧑‍💼","🧑🏻‍💼","🧑🏼‍💼","🧑🏽‍💼","🧑🏾‍💼","🧑🏿‍💼","👨‍💼","👨🏻‍💼","👨🏼‍💼","👨🏽‍💼","👨🏾‍💼","👨🏿‍💼","👩‍💼","👩🏻‍💼","👩🏼‍💼","👩🏽‍💼","👩🏾‍💼","👩🏿‍💼","🧑‍🔬","🧑🏻‍🔬","🧑🏼‍🔬","🧑🏽‍🔬","🧑🏾‍🔬","🧑🏿‍🔬","👨‍🔬","👨🏻‍🔬","👨🏼‍🔬","👨🏽‍🔬","👨🏾‍🔬","👨🏿‍🔬","👩‍🔬","👩🏻‍🔬","👩🏼‍🔬","👩🏽‍🔬","👩🏾‍🔬","👩🏿‍🔬","🧑‍💻","🧑🏻‍💻","🧑🏼‍💻","🧑🏽‍💻","🧑🏾‍💻","🧑🏿‍💻","👨‍💻","👨🏻‍💻","👨🏼‍💻","👨🏽‍💻","👨🏾‍💻","👨🏿‍💻","👩‍💻","👩🏻‍💻","👩🏼‍💻","👩🏽‍💻","👩🏾‍💻","👩🏿‍💻","🧑‍🎤","🧑🏻‍🎤","🧑🏼‍🎤","🧑🏽‍🎤","🧑🏾‍🎤","🧑🏿‍🎤","👨‍🎤","👨🏻‍🎤","👨🏼‍🎤","👨🏽‍🎤","👨🏾‍🎤","👨🏿‍🎤","👩‍🎤","👩🏻‍🎤","👩🏼‍🎤","👩🏽‍🎤","👩🏾‍🎤","👩🏿‍🎤","🧑‍🎨","🧑🏻‍🎨","🧑🏼‍🎨","🧑🏽‍🎨","🧑🏾‍🎨","🧑🏿‍🎨","👨‍🎨","👨🏻‍🎨","👨🏼‍🎨","👨🏽‍🎨","👨🏾‍🎨","👨🏿‍🎨","👩‍🎨","👩🏻‍🎨","👩🏼‍🎨","👩🏽‍🎨","👩🏾‍🎨","👩🏿‍🎨","🧑‍✈️","🧑🏻‍✈️","🧑🏼‍✈️","🧑🏽‍✈️","🧑🏾‍✈️","🧑🏿‍✈️","👨‍✈️","👨🏻‍✈️","👨🏼‍✈️","👨🏽‍✈️","👨🏾‍✈️","👨🏿‍✈️","👩‍✈️","👩🏻‍✈️","👩🏼‍✈️","👩🏽‍✈️","👩🏾‍✈️","👩🏿‍✈️","🧑‍🚀","🧑🏻‍🚀","🧑🏼‍🚀","🧑🏽‍🚀","🧑🏾‍🚀","🧑🏿‍🚀","👨‍🚀","👨🏻‍🚀","👨🏼‍🚀","👨🏽‍🚀","👨🏾‍🚀","👨🏿‍🚀","👩‍🚀","👩🏻‍🚀","👩🏼‍🚀","👩🏽‍🚀","👩🏾‍🚀","👩🏿‍🚀","🧑‍🚒","🧑🏻‍🚒","🧑🏼‍🚒","🧑🏽‍🚒","🧑🏾‍🚒","🧑🏿‍🚒","👨‍🚒","👨🏻‍🚒","👨🏼‍🚒","👨🏽‍🚒","👨🏾‍🚒","👨🏿‍🚒","👩‍🚒","👩🏻‍🚒","👩🏼‍🚒","👩🏽‍🚒","👩🏾‍🚒","👩🏿‍🚒","👮","👮🏻","👮🏼","👮🏽","👮🏾","👮🏿","👮‍♂️","👮🏻‍♂️","👮🏼‍♂️","👮🏽‍♂️","👮🏾‍♂️","👮🏿‍♂️","👮‍♀️","👮🏻‍♀️","👮🏼‍♀️","👮🏽‍♀️","👮🏾‍♀️","👮🏿‍♀️","🕵️","🕵🏻","🕵🏼","🕵🏽","🕵🏾","🕵🏿","🕵️‍♂️","🕵🏻‍♂️","🕵🏼‍♂️","🕵🏽‍♂️","🕵🏾‍♂️","🕵🏿‍♂️","🕵️‍♀️","🕵🏻‍♀️","🕵🏼‍♀️","🕵🏽‍♀️","🕵🏾‍♀️","🕵🏿‍♀️","💂","💂🏻","💂🏼","💂🏽","💂🏾","💂🏿","💂‍♂️","💂🏻‍♂️","💂🏼‍♂️","💂🏽‍♂️","💂🏾‍♂️","💂🏿‍♂️","💂‍♀️","💂🏻‍♀️","💂🏼‍♀️","💂🏽‍♀️","💂🏾‍♀️","💂🏿‍♀️","🥷","🥷🏻","🥷🏼","🥷🏽","🥷🏾","🥷🏿","👷","👷🏻","👷🏼","👷🏽","👷🏾","👷🏿","👷‍♂️","👷🏻‍♂️","👷🏼‍♂️","👷🏽‍♂️","👷🏾‍♂️","👷🏿‍♂️","👷‍♀️","👷🏻‍♀️","👷🏼‍♀️","👷🏽‍♀️","👷🏾‍♀️","👷🏿‍♀️","🤴","🤴🏻","🤴🏼","🤴🏽","🤴🏾","🤴🏿","👸","👸🏻","👸🏼","👸🏽","👸🏾","👸🏿","👳","👳🏻","👳🏼","👳🏽","👳🏾","👳🏿","👳‍♂️","👳🏻‍♂️","👳🏼‍♂️","👳🏽‍♂️","👳🏾‍♂️","👳🏿‍♂️","👳‍♀️","👳🏻‍♀️","👳🏼‍♀️","👳🏽‍♀️","👳🏾‍♀️","👳🏿‍♀️","👲","👲🏻","👲🏼","👲🏽","👲🏾","👲🏿","🧕","🧕🏻","🧕🏼","🧕🏽","🧕🏾","🧕🏿","🤵","🤵🏻","🤵🏼","🤵🏽","🤵🏾","🤵🏿","🤵‍♂️","🤵🏻‍♂️","🤵🏼‍♂️","🤵🏽‍♂️","🤵🏾‍♂️","🤵🏿‍♂️","🤵‍♀️","🤵🏻‍♀️","🤵🏼‍♀️","🤵🏽‍♀️","🤵🏾‍♀️","🤵🏿‍♀️","👰","👰🏻","👰🏼","👰🏽","👰🏾","👰🏿","👰‍♂️","👰🏻‍♂️","👰🏼‍♂️","👰🏽‍♂️","👰🏾‍♂️","👰🏿‍♂️","👰‍♀️","👰🏻‍♀️","👰🏼‍♀️","👰🏽‍♀️","👰🏾‍♀️","👰🏿‍♀️","🤰","🤰🏻","🤰🏼","🤰🏽","🤰🏾","🤰🏿","🤱","🤱🏻","🤱🏼","🤱🏽","🤱🏾","🤱🏿","👩‍🍼","👩🏻‍🍼","👩🏼‍🍼","👩🏽‍🍼","👩🏾‍🍼","👩🏿‍🍼","👨‍🍼","👨🏻‍🍼","👨🏼‍🍼","👨🏽‍🍼","👨🏾‍🍼","👨🏿‍🍼","🧑‍🍼","🧑🏻‍🍼","🧑🏼‍🍼","🧑🏽‍🍼","🧑🏾‍🍼","🧑🏿‍🍼","👼","👼🏻","👼🏼","👼🏽","👼🏾","👼🏿","🎅","🎅🏻","🎅🏼","🎅🏽","🎅🏾","🎅🏿","🤶","🤶🏻","🤶🏼","🤶🏽","🤶🏾","🤶🏿","🧑‍🎄","🧑🏻‍🎄","🧑🏼‍🎄","🧑🏽‍🎄","🧑🏾‍🎄","🧑🏿‍🎄","🦸","🦸🏻","🦸🏼","🦸🏽","🦸🏾","🦸🏿","🦸‍♂️","🦸🏻‍♂️","🦸🏼‍♂️","🦸🏽‍♂️","🦸🏾‍♂️","🦸🏿‍♂️","🦸‍♀️","🦸🏻‍♀️","🦸🏼‍♀️","🦸🏽‍♀️","🦸🏾‍♀️","🦸🏿‍♀️","🦹","🦹🏻","🦹🏼","🦹🏽","🦹🏾","🦹🏿","🦹‍♂️","🦹🏻‍♂️","🦹🏼‍♂️","🦹🏽‍♂️","🦹🏾‍♂️","🦹🏿‍♂️","🦹‍♀️","🦹🏻‍♀️","🦹🏼‍♀️","🦹🏽‍♀️","🦹🏾‍♀️","🦹🏿‍♀️","🧙","🧙🏻","🧙🏼","🧙🏽","🧙🏾","🧙🏿","🧙‍♂️","🧙🏻‍♂️","🧙🏼‍♂️","🧙🏽‍♂️","🧙🏾‍♂️","🧙🏿‍♂️","🧙‍♀️","🧙🏻‍♀️","🧙🏼‍♀️","🧙🏽‍♀️","🧙🏾‍♀️","🧙🏿‍♀️","🧚","🧚🏻","🧚🏼","🧚🏽","🧚🏾","🧚🏿","🧚‍♂️","🧚🏻‍♂️","🧚🏼‍♂️","🧚🏽‍♂️","🧚🏾‍♂️","🧚🏿‍♂️","🧚‍♀️","🧚🏻‍♀️","🧚🏼‍♀️","🧚🏽‍♀️","🧚🏾‍♀️","🧚🏿‍♀️","🧛","🧛🏻","🧛🏼","🧛🏽","🧛🏾","🧛🏿","🧛‍♂️","🧛🏻‍♂️","🧛🏼‍♂️","🧛🏽‍♂️","🧛🏾‍♂️","🧛🏿‍♂️","🧛‍♀️","🧛🏻‍♀️","🧛🏼‍♀️","🧛🏽‍♀️","🧛🏾‍♀️","🧛🏿‍♀️","🧜","🧜🏻","🧜🏼","🧜🏽","🧜🏾","🧜🏿","🧜‍♂️","🧜🏻‍♂️","🧜🏼‍♂️","🧜🏽‍♂️","🧜🏾‍♂️","🧜🏿‍♂️","🧜‍♀️","🧜🏻‍♀️","🧜🏼‍♀️","🧜🏽‍♀️","🧜🏾‍♀️","🧜🏿‍♀️","🧝","🧝🏻","🧝🏼","🧝🏽","🧝🏾","🧝🏿","🧝‍♂️","🧝🏻‍♂️","🧝🏼‍♂️","🧝🏽‍♂️","🧝🏾‍♂️","🧝🏿‍♂️","🧝‍♀️","🧝🏻‍♀️","🧝🏼‍♀️","🧝🏽‍♀️","🧝🏾‍♀️","🧝🏿‍♀️","🧞","🧞‍♂️","🧞‍♀️","🧟","🧟‍♂️","🧟‍♀️","💆","💆🏻","💆🏼","💆🏽","💆🏾","💆🏿","💆‍♂️","💆🏻‍♂️","💆🏼‍♂️","💆🏽‍♂️","💆🏾‍♂️","💆🏿‍♂️","💆‍♀️","💆🏻‍♀️","💆🏼‍♀️","💆🏽‍♀️","💆🏾‍♀️","💆🏿‍♀️","💇","💇🏻","💇🏼","💇🏽","💇🏾","💇🏿","💇‍♂️","💇🏻‍♂️","💇🏼‍♂️","💇🏽‍♂️","💇🏾‍♂️","💇🏿‍♂️","💇‍♀️","💇🏻‍♀️","💇🏼‍♀️","💇🏽‍♀️","💇🏾‍♀️","💇🏿‍♀️","🚶","🚶🏻","🚶🏼","🚶🏽","🚶🏾","🚶🏿","🚶‍♂️","🚶🏻‍♂️","🚶🏼‍♂️","🚶🏽‍♂️","🚶🏾‍♂️","🚶🏿‍♂️","🚶‍♀️","🚶🏻‍♀️","🚶🏼‍♀️","🚶🏽‍♀️","🚶🏾‍♀️","🚶🏿‍♀️","🧍","🧍🏻","🧍🏼","🧍🏽","🧍🏾","🧍🏿","🧍‍♂️","🧍🏻‍♂️","🧍🏼‍♂️","🧍🏽‍♂️","🧍🏾‍♂️","🧍🏿‍♂️","🧍‍♀️","🧍🏻‍♀️","🧍🏼‍♀️","🧍🏽‍♀️","🧍🏾‍♀️","🧍🏿‍♀️","🧎","🧎🏻","🧎🏼","🧎🏽","🧎🏾","🧎🏿","🧎‍♂️","🧎🏻‍♂️","🧎🏼‍♂️","🧎🏽‍♂️","🧎🏾‍♂️","🧎🏿‍♂️","🧎‍♀️","🧎🏻‍♀️","🧎🏼‍♀️","🧎🏽‍♀️","🧎🏾‍♀️","🧎🏿‍♀️","🧑‍🦯","🧑🏻‍🦯","🧑🏼‍🦯","🧑🏽‍🦯","🧑🏾‍🦯","🧑🏿‍🦯","👨‍🦯","👨🏻‍🦯","👨🏼‍🦯","👨🏽‍🦯","👨🏾‍🦯","👨🏿‍🦯","👩‍🦯","👩🏻‍🦯","👩🏼‍🦯","👩🏽‍🦯","👩🏾‍🦯","👩🏿‍🦯","🧑‍🦼","🧑🏻‍🦼","🧑🏼‍🦼","🧑🏽‍🦼","🧑🏾‍🦼","🧑🏿‍🦼","👨‍🦼","👨🏻‍🦼","👨🏼‍🦼","👨🏽‍🦼","👨🏾‍🦼","👨🏿‍🦼","👩‍🦼","👩🏻‍🦼","👩🏼‍🦼","👩🏽‍🦼","👩🏾‍🦼","👩🏿‍🦼","🧑‍🦽","🧑🏻‍🦽","🧑🏼‍🦽","🧑🏽‍🦽","🧑🏾‍🦽","🧑🏿‍🦽","👨‍🦽","👨🏻‍🦽","👨🏼‍🦽","👨🏽‍🦽","👨🏾‍🦽","👨🏿‍🦽","👩‍🦽","👩🏻‍🦽","👩🏼‍🦽","👩🏽‍🦽","👩🏾‍🦽","👩🏿‍🦽","🏃","🏃🏻","🏃🏼","🏃🏽","🏃🏾","🏃🏿","🏃‍♂️","🏃🏻‍♂️","🏃🏼‍♂️","🏃🏽‍♂️","🏃🏾‍♂️","🏃🏿‍♂️","🏃‍♀️","🏃🏻‍♀️","🏃🏼‍♀️","🏃🏽‍♀️","🏃🏾‍♀️","🏃🏿‍♀️","💃","💃🏻","💃🏼","💃🏽","💃🏾","💃🏿","🕺","🕺🏻","🕺🏼","🕺🏽","🕺🏾","🕺🏿","🕴️","🕴🏻","🕴🏼","🕴🏽","🕴🏾","🕴🏿","👯","👯‍♂️","👯‍♀️","🧖","🧖🏻","🧖🏼","🧖🏽","🧖🏾","🧖🏿","🧖‍♂️","🧖🏻‍♂️","🧖🏼‍♂️","🧖🏽‍♂️","🧖🏾‍♂️","🧖🏿‍♂️","🧖‍♀️","🧖🏻‍♀️","🧖🏼‍♀️","🧖🏽‍♀️","🧖🏾‍♀️","🧖🏿‍♀️","🧗","🧗🏻","🧗🏼","🧗🏽","🧗🏾","🧗🏿","🧗‍♂️","🧗🏻‍♂️","🧗🏼‍♂️","🧗🏽‍♂️","🧗🏾‍♂️","🧗🏿‍♂️","🧗‍♀️","🧗🏻‍♀️","🧗🏼‍♀️","🧗🏽‍♀️","🧗🏾‍♀️","🧗🏿‍♀️","🤺","🏇","🏇🏻","🏇🏼","🏇🏽","🏇🏾","🏇🏿","⛷️","🏂","🏂🏻","🏂🏼","🏂🏽","🏂🏾","🏂🏿","🏌️","🏌🏻","🏌🏼","🏌🏽","🏌🏾","🏌🏿","🏌️‍♂️","🏌🏻‍♂️","🏌🏼‍♂️","🏌🏽‍♂️","🏌🏾‍♂️","🏌🏿‍♂️","🏌️‍♀️","🏌🏻‍♀️","🏌🏼‍♀️","🏌🏽‍♀️","🏌🏾‍♀️","🏌🏿‍♀️","🏄","🏄🏻","🏄🏼","🏄🏽","🏄🏾","🏄🏿","🏄‍♂️","🏄🏻‍♂️","🏄🏼‍♂️","🏄🏽‍♂️","🏄🏾‍♂️","🏄🏿‍♂️","🏄‍♀️","🏄🏻‍♀️","🏄🏼‍♀️","🏄🏽‍♀️","🏄🏾‍♀️","🏄🏿‍♀️","🚣","🚣🏻","🚣🏼","🚣🏽","🚣🏾","🚣🏿","🚣‍♂️","🚣🏻‍♂️","🚣🏼‍♂️","🚣🏽‍♂️","🚣🏾‍♂️","🚣🏿‍♂️","🚣‍♀️","🚣🏻‍♀️","🚣🏼‍♀️","🚣🏽‍♀️","🚣🏾‍♀️","🚣🏿‍♀️","🏊","🏊🏻","🏊🏼","🏊🏽","🏊🏾","🏊🏿","🏊‍♂️","🏊🏻‍♂️","🏊🏼‍♂️","🏊🏽‍♂️","🏊🏾‍♂️","🏊🏿‍♂️","🏊‍♀️","🏊🏻‍♀️","🏊🏼‍♀️","🏊🏽‍♀️","🏊🏾‍♀️","🏊🏿‍♀️","⛹️","⛹🏻","⛹🏼","⛹🏽","⛹🏾","⛹🏿","⛹️‍♂️","⛹🏻‍♂️","⛹🏼‍♂️","⛹🏽‍♂️","⛹🏾‍♂️","⛹🏿‍♂️","⛹️‍♀️","⛹🏻‍♀️","⛹🏼‍♀️","⛹🏽‍♀️","⛹🏾‍♀️","⛹🏿‍♀️","🏋️","🏋🏻","🏋🏼","🏋🏽","🏋🏾","🏋🏿","🏋️‍♂️","🏋🏻‍♂️","🏋🏼‍♂️","🏋🏽‍♂️","🏋🏾‍♂️","🏋🏿‍♂️","🏋️‍♀️","🏋🏻‍♀️","🏋🏼‍♀️","🏋🏽‍♀️","🏋🏾‍♀️","🏋🏿‍♀️","🚴","🚴🏻","🚴🏼","🚴🏽","🚴🏾","🚴🏿","🚴‍♂️","🚴🏻‍♂️","🚴🏼‍♂️","🚴🏽‍♂️","🚴🏾‍♂️","🚴🏿‍♂️","🚴‍♀️","🚴🏻‍♀️","🚴🏼‍♀️","🚴🏽‍♀️","🚴🏾‍♀️","🚴🏿‍♀️","🚵","🚵🏻","🚵🏼","🚵🏽","🚵🏾","🚵🏿","🚵‍♂️","🚵🏻‍♂️","🚵🏼‍♂️","🚵🏽‍♂️","🚵🏾‍♂️","🚵🏿‍♂️","🚵‍♀️","🚵🏻‍♀️","🚵🏼‍♀️","🚵🏽‍♀️","🚵🏾‍♀️","🚵🏿‍♀️","🤸","🤸🏻","🤸🏼","🤸🏽","🤸🏾","🤸🏿","🤸‍♂️","🤸🏻‍♂️","🤸🏼‍♂️","🤸🏽‍♂️","🤸🏾‍♂️","🤸🏿‍♂️","🤸‍♀️","🤸🏻‍♀️","🤸🏼‍♀️","🤸🏽‍♀️","🤸🏾‍♀️","🤸🏿‍♀️","🤼","🤼‍♂️","🤼‍♀️","🤽","🤽🏻","🤽🏼","🤽🏽","🤽🏾","🤽🏿","🤽‍♂️","🤽🏻‍♂️","🤽🏼‍♂️","🤽🏽‍♂️","🤽🏾‍♂️","🤽🏿‍♂️","🤽‍♀️","🤽🏻‍♀️","🤽🏼‍♀️","🤽🏽‍♀️","🤽🏾‍♀️","🤽🏿‍♀️","🤾","🤾🏻","🤾🏼","🤾🏽","🤾🏾","🤾🏿","🤾‍♂️","🤾🏻‍♂️","🤾🏼‍♂️","🤾🏽‍♂️","🤾🏾‍♂️","🤾🏿‍♂️","🤾‍♀️","🤾🏻‍♀️","🤾🏼‍♀️","🤾🏽‍♀️","🤾🏾‍♀️","🤾🏿‍♀️","🤹","🤹🏻","🤹🏼","🤹🏽","🤹🏾","🤹🏿","🤹‍♂️","🤹🏻‍♂️","🤹🏼‍♂️","🤹🏽‍♂️","🤹🏾‍♂️","🤹🏿‍♂️","🤹‍♀️","🤹🏻‍♀️","🤹🏼‍♀️","🤹🏽‍♀️","🤹🏾‍♀️","🤹🏿‍♀️","🧘","🧘🏻","🧘🏼","🧘🏽","🧘🏾","🧘🏿","🧘‍♂️","🧘🏻‍♂️","🧘🏼‍♂️","🧘🏽‍♂️","🧘🏾‍♂️","🧘🏿‍♂️","🧘‍♀️","🧘🏻‍♀️","🧘🏼‍♀️","🧘🏽‍♀️","🧘🏾‍♀️","🧘🏿‍♀️","🛀","🛀🏻","🛀🏼","🛀🏽","🛀🏾","🛀🏿","🛌","🛌🏻","🛌🏼","🛌🏽","🛌🏾","🛌🏿","🧑‍🤝‍🧑","🧑🏻‍🤝‍🧑🏻","🧑🏻‍🤝‍🧑🏼","🧑🏻‍🤝‍🧑🏽","🧑🏻‍🤝‍🧑🏾","🧑🏻‍🤝‍🧑🏿","🧑🏼‍🤝‍🧑🏻","🧑🏼‍🤝‍🧑🏼","🧑🏼‍🤝‍🧑🏽","🧑🏼‍🤝‍🧑🏾","🧑🏼‍🤝‍🧑🏿","🧑🏽‍🤝‍🧑🏻","🧑🏽‍🤝‍🧑🏼","🧑🏽‍🤝‍🧑🏽","🧑🏽‍🤝‍🧑🏾","🧑🏽‍🤝‍🧑🏿","🧑🏾‍🤝‍🧑🏻","🧑🏾‍🤝‍🧑🏼","🧑🏾‍🤝‍🧑🏽","🧑🏾‍🤝‍🧑🏾","🧑🏾‍🤝‍🧑🏿","🧑🏿‍🤝‍🧑🏻","🧑🏿‍🤝‍🧑🏼","🧑🏿‍🤝‍🧑🏽","🧑🏿‍🤝‍🧑🏾","🧑🏿‍🤝‍🧑🏿","👭","👭🏻","👩🏻‍🤝‍👩🏼","👩🏻‍🤝‍👩🏽","👩🏻‍🤝‍👩🏾","👩🏻‍🤝‍👩🏿","👩🏼‍🤝‍👩🏻","👭🏼","👩🏼‍🤝‍👩🏽","👩🏼‍🤝‍👩🏾","👩🏼‍🤝‍👩🏿","👩🏽‍🤝‍👩🏻","👩🏽‍🤝‍👩🏼","👭🏽","👩🏽‍🤝‍👩🏾","👩🏽‍🤝‍👩🏿","👩🏾‍🤝‍👩🏻","👩🏾‍🤝‍👩🏼","👩🏾‍🤝‍👩🏽","👭🏾","👩🏾‍🤝‍👩🏿","👩🏿‍🤝‍👩🏻","👩🏿‍🤝‍👩🏼","👩🏿‍🤝‍👩🏽","👩🏿‍🤝‍👩🏾","👭🏿","👫","👫🏻","👩🏻‍🤝‍👨🏼","👩🏻‍🤝‍👨🏽","👩🏻‍🤝‍👨🏾","👩🏻‍🤝‍👨🏿","👩🏼‍🤝‍👨🏻","👫🏼","👩🏼‍🤝‍👨🏽","👩🏼‍🤝‍👨🏾","👩🏼‍🤝‍👨🏿","👩🏽‍🤝‍👨🏻","👩🏽‍🤝‍👨🏼","👫🏽","👩🏽‍🤝‍👨🏾","👩🏽‍🤝‍👨🏿","👩🏾‍🤝‍👨🏻","👩🏾‍🤝‍👨🏼","👩🏾‍🤝‍👨🏽","👫🏾","👩🏾‍🤝‍👨🏿","👩🏿‍🤝‍👨🏻","👩🏿‍🤝‍👨🏼","👩🏿‍🤝‍👨🏽","👩🏿‍🤝‍👨🏾","👫🏿","👬","👬🏻","👨🏻‍🤝‍👨🏼","👨🏻‍🤝‍👨🏽","👨🏻‍🤝‍👨🏾","👨🏻‍🤝‍👨🏿","👨🏼‍🤝‍👨🏻","👬🏼","👨🏼‍🤝‍👨🏽","👨🏼‍🤝‍👨🏾","👨🏼‍🤝‍👨🏿","👨🏽‍🤝‍👨🏻","👨🏽‍🤝‍👨🏼","👬🏽","👨🏽‍🤝‍👨🏾","👨🏽‍🤝‍👨🏿","👨🏾‍🤝‍👨🏻","👨🏾‍🤝‍👨🏼","👨🏾‍🤝‍👨🏽","👬🏾","👨🏾‍🤝‍👨🏿","👨🏿‍🤝‍👨🏻","👨🏿‍🤝‍👨🏼","👨🏿‍🤝‍👨🏽","👨🏿‍🤝‍👨🏾","👬🏿","💏","💏🏻","💏🏼","💏🏽","💏🏾","💏🏿","🧑🏻‍❤️‍💋‍🧑🏼","🧑🏻‍❤️‍💋‍🧑🏽","🧑🏻‍❤️‍💋‍🧑🏾","🧑🏻‍❤️‍💋‍🧑🏿","🧑🏼‍❤️‍💋‍🧑🏻","🧑🏼‍❤️‍💋‍🧑🏽","🧑🏼‍❤️‍💋‍🧑🏾","🧑🏼‍❤️‍💋‍🧑🏿","🧑🏽‍❤️‍💋‍🧑🏻","🧑🏽‍❤️‍💋‍🧑🏼","🧑🏽‍❤️‍💋‍🧑🏾","🧑🏽‍❤️‍💋‍🧑🏿","🧑🏾‍❤️‍💋‍🧑🏻","🧑🏾‍❤️‍💋‍🧑🏼","🧑🏾‍❤️‍💋‍🧑🏽","🧑🏾‍❤️‍💋‍🧑🏿","🧑🏿‍❤️‍💋‍🧑🏻","🧑🏿‍❤️‍💋‍🧑🏼","🧑🏿‍❤️‍💋‍🧑🏽","🧑🏿‍❤️‍💋‍🧑🏾","👩‍❤️‍💋‍👨","👩🏻‍❤️‍💋‍👨🏻","👩🏻‍❤️‍💋‍👨🏼","👩🏻‍❤️‍💋‍👨🏽","👩🏻‍❤️‍💋‍👨🏾","👩🏻‍❤️‍💋‍👨🏿","👩🏼‍❤️‍💋‍👨🏻","👩🏼‍❤️‍💋‍👨🏼","👩🏼‍❤️‍💋‍👨🏽","👩🏼‍❤️‍💋‍👨🏾","👩🏼‍❤️‍💋‍👨🏿","👩🏽‍❤️‍💋‍👨🏻","👩🏽‍❤️‍💋‍👨🏼","👩🏽‍❤️‍💋‍👨🏽","👩🏽‍❤️‍💋‍👨🏾","👩🏽‍❤️‍💋‍👨🏿","👩🏾‍❤️‍💋‍👨🏻","👩🏾‍❤️‍💋‍👨🏼","👩🏾‍❤️‍💋‍👨🏽","👩🏾‍❤️‍💋‍👨🏾","👩🏾‍❤️‍💋‍👨🏿","👩🏿‍❤️‍💋‍👨🏻","👩🏿‍❤️‍💋‍👨🏼","👩🏿‍❤️‍💋‍👨🏽","👩🏿‍❤️‍💋‍👨🏾","👩🏿‍❤️‍💋‍👨🏿","👨‍❤️‍💋‍👨","👨🏻‍❤️‍💋‍👨🏻","👨🏻‍❤️‍💋‍👨🏼","👨🏻‍❤️‍💋‍👨🏽","👨🏻‍❤️‍💋‍👨🏾","👨🏻‍❤️‍💋‍👨🏿","👨🏼‍❤️‍💋‍👨🏻","👨🏼‍❤️‍💋‍👨🏼","👨🏼‍❤️‍💋‍👨🏽","👨🏼‍❤️‍💋‍👨🏾","👨🏼‍❤️‍💋‍👨🏿","👨🏽‍❤️‍💋‍👨🏻","👨🏽‍❤️‍💋‍👨🏼","👨🏽‍❤️‍💋‍👨🏽","👨🏽‍❤️‍💋‍👨🏾","👨🏽‍❤️‍💋‍👨🏿","👨🏾‍❤️‍💋‍👨🏻","👨🏾‍❤️‍💋‍👨🏼","👨🏾‍❤️‍💋‍👨🏽","👨🏾‍❤️‍💋‍👨🏾","👨🏾‍❤️‍💋‍👨🏿","👨🏿‍❤️‍💋‍👨🏻","👨🏿‍❤️‍💋‍👨🏼","👨🏿‍❤️‍💋‍👨🏽","👨🏿‍❤️‍💋‍👨🏾","👨🏿‍❤️‍💋‍👨🏿","👩‍❤️‍💋‍👩","👩🏻‍❤️‍💋‍👩🏻","👩🏻‍❤️‍💋‍👩🏼","👩🏻‍❤️‍💋‍👩🏽","👩🏻‍❤️‍💋‍👩🏾","👩🏻‍❤️‍💋‍👩🏿","👩🏼‍❤️‍💋‍👩🏻","👩🏼‍❤️‍💋‍👩🏼","👩🏼‍❤️‍💋‍👩🏽","👩🏼‍❤️‍💋‍👩🏾","👩🏼‍❤️‍💋‍👩🏿","👩🏽‍❤️‍💋‍👩🏻","👩🏽‍❤️‍💋‍👩🏼","👩🏽‍❤️‍💋‍👩🏽","👩🏽‍❤️‍💋‍👩🏾","👩🏽‍❤️‍💋‍👩🏿","👩🏾‍❤️‍💋‍👩🏻","👩🏾‍❤️‍💋‍👩🏼","👩🏾‍❤️‍💋‍👩🏽","👩🏾‍❤️‍💋‍👩🏾","👩🏾‍❤️‍💋‍👩🏿","👩🏿‍❤️‍💋‍👩🏻","👩🏿‍❤️‍💋‍👩🏼","👩🏿‍❤️‍💋‍👩🏽","👩🏿‍❤️‍💋‍👩🏾","👩🏿‍❤️‍💋‍👩🏿","💑","💑🏻","💑🏼","💑🏽","💑🏾","💑🏿","🧑🏻‍❤️‍🧑🏼","🧑🏻‍❤️‍🧑🏽","🧑🏻‍❤️‍🧑🏾","🧑🏻‍❤️‍🧑🏿","🧑🏼‍❤️‍🧑🏻","🧑🏼‍❤️‍🧑🏽","🧑🏼‍❤️‍🧑🏾","🧑🏼‍❤️‍🧑🏿","🧑🏽‍❤️‍🧑🏻","🧑🏽‍❤️‍🧑🏼","🧑🏽‍❤️‍🧑🏾","🧑🏽‍❤️‍🧑🏿","🧑🏾‍❤️‍🧑🏻","🧑🏾‍❤️‍🧑🏼","🧑🏾‍❤️‍🧑🏽","🧑🏾‍❤️‍🧑🏿","🧑🏿‍❤️‍🧑🏻","🧑🏿‍❤️‍🧑🏼","🧑🏿‍❤️‍🧑🏽","🧑🏿‍❤️‍🧑🏾","👩‍❤️‍👨","👩🏻‍❤️‍👨🏻","👩🏻‍❤️‍👨🏼","👩🏻‍❤️‍👨🏽","👩🏻‍❤️‍👨🏾","👩🏻‍❤️‍👨🏿","👩🏼‍❤️‍👨🏻","👩🏼‍❤️‍👨🏼","👩🏼‍❤️‍👨🏽","👩🏼‍❤️‍👨🏾","👩🏼‍❤️‍👨🏿","👩🏽‍❤️‍👨🏻","👩🏽‍❤️‍👨🏼","👩🏽‍❤️‍👨🏽","👩🏽‍❤️‍👨🏾","👩🏽‍❤️‍👨🏿","👩🏾‍❤️‍👨🏻","👩🏾‍❤️‍👨🏼","👩🏾‍❤️‍👨🏽","👩🏾‍❤️‍👨🏾","👩🏾‍❤️‍👨🏿","👩🏿‍❤️‍👨🏻","👩🏿‍❤️‍👨🏼","👩🏿‍❤️‍👨🏽","👩🏿‍❤️‍👨🏾","👩🏿‍❤️‍👨🏿","👨‍❤️‍👨","👨🏻‍❤️‍👨🏻","👨🏻‍❤️‍👨🏼","👨🏻‍❤️‍👨🏽","👨🏻‍❤️‍👨🏾","👨🏻‍❤️‍👨🏿","👨🏼‍❤️‍👨🏻","👨🏼‍❤️‍👨🏼","👨🏼‍❤️‍👨🏽","👨🏼‍❤️‍👨🏾","👨🏼‍❤️‍👨🏿","👨🏽‍❤️‍👨🏻","👨🏽‍❤️‍👨🏼","👨🏽‍❤️‍👨🏽","👨🏽‍❤️‍👨🏾","👨🏽‍❤️‍👨🏿","👨🏾‍❤️‍👨🏻","👨🏾‍❤️‍👨🏼","👨🏾‍❤️‍👨🏽","👨🏾‍❤️‍👨🏾","👨🏾‍❤️‍👨🏿","👨🏿‍❤️‍👨🏻","👨🏿‍❤️‍👨🏼","👨🏿‍❤️‍👨🏽","👨🏿‍❤️‍👨🏾","👨🏿‍❤️‍👨🏿","👩‍❤️‍👩","👩🏻‍❤️‍👩🏻","👩🏻‍❤️‍👩🏼","👩🏻‍❤️‍👩🏽","👩🏻‍❤️‍👩🏾","👩🏻‍❤️‍👩🏿","👩🏼‍❤️‍👩🏻","👩🏼‍❤️‍👩🏼","👩🏼‍❤️‍👩🏽","👩🏼‍❤️‍👩🏾","👩🏼‍❤️‍👩🏿","👩🏽‍❤️‍👩🏻","👩🏽‍❤️‍👩🏼","👩🏽‍❤️‍👩🏽","👩🏽‍❤️‍👩🏾","👩🏽‍❤️‍👩🏿","👩🏾‍❤️‍👩🏻","👩🏾‍❤️‍👩🏼","👩🏾‍❤️‍👩🏽","👩🏾‍❤️‍👩🏾","👩🏾‍❤️‍👩🏿","👩🏿‍❤️‍👩🏻","👩🏿‍❤️‍👩🏼","👩🏿‍❤️‍👩🏽","👩🏿‍❤️‍👩🏾","👩🏿‍❤️‍👩🏿","👪","👨‍👩‍👦","👨‍👩‍👧","👨‍👩‍👧‍👦","👨‍👩‍👦‍👦","👨‍👩‍👧‍👧","👨‍👨‍👦","👨‍👨‍👧","👨‍👨‍👧‍👦","👨‍👨‍👦‍👦","👨‍👨‍👧‍👧","👩‍👩‍👦","👩‍👩‍👧","👩‍👩‍👧‍👦","👩‍👩‍👦‍👦","👩‍👩‍👧‍👧","👨‍👦","👨‍👦‍👦","👨‍👧","👨‍👧‍👦","👨‍👧‍👧","👩‍👦","👩‍👦‍👦","👩‍👧","👩‍👧‍👦","👩‍👧‍👧","🗣️","👤","👥","🫂","👣"],nature:["🐵","🐒","🦍","🦧","🐶","🐕","🦮","🐕‍🦺","🐩","🐺","🦊","🦝","🐱","🐈","🐈‍⬛","🦁","🐯","🐅","🐆","🐴","🐎","🦄","🦓","🦌","🦬","🐮","🐂","🐃","🐄","🐷","🐖","🐗","🐽","🐏","🐑","🐐","🐪","🐫","🦙","🦒","🐘","🦣","🦏","🦛","🐭","🐁","🐀","🐹","🐰","🐇","🐿️","🦫","🦔","🦇","🐻","🐻‍❄️","🐨","🐼","🦥","🦦","🦨","🦘","🦡","🐾","🦃","🐔","🐓","🐣","🐤","🐥","🐦","🐧","🕊️","🦅","🦆","🦢","🦉","🦤","🪶","🦩","🦚","🦜","🐸","🐊","🐢","🦎","🐍","🐲","🐉","🦕","🦖","🐳","🐋","🐬","🦭","🐟","🐠","🐡","🦈","🐙","🐚","🐌","🦋","🐛","🐜","🐝","🪲","🐞","🦗","🪳","🕷️","🕸️","🦂","🦟","🪰","🪱","🦠","💐","🌸","💮","🏵️","🌹","🥀","🌺","🌻","🌼","🌷","🌱","🪴","🌲","🌳","🌴","🌵","🌾","🌿","☘️","🍀","🍁","🍂","🍃"],food:["🍇","🍈","🍉","🍊","🍋","🍌","🍍","🥭","🍎","🍏","🍐","🍑","🍒","🍓","🫐","🥝","🍅","🫒","🥥","🥑","🍆","🥔","🥕","🌽","🌶️","🫑","🥒","🥬","🥦","🧄","🧅","🍄","🥜","🌰","🍞","🥐","🥖","🫓","🥨","🥯","🥞","🧇","🧀","🍖","🍗","🥩","🥓","🍔","🍟","🍕","🌭","🥪","🌮","🌯","🫔","🥙","🧆","🥚","🍳","🥘","🍲","🫕","🥣","🥗","🍿","🧈","🧂","🥫","🍱","🍘","🍙","🍚","🍛","🍜","🍝","🍠","🍢","🍣","🍤","🍥","🥮","🍡","🥟","🥠","🥡","🦀","🦞","🦐","🦑","🦪","🍦","🍧","🍨","🍩","🍪","🎂","🍰","🧁","🥧","🍫","🍬","🍭","🍮","🍯","🍼","🥛","☕","🫖","🍵","🍶","🍾","🍷","🍸","🍹","🍺","🍻","🥂","🥃","🥤","🧋","🧃","🧉","🧊","🥢","🍽️","🍴","🥄","🔪","🏺"],travel:["🌍","🌎","🌏","🌐","🗺️","🗾","🧭","🏔️","⛰️","🌋","🗻","🏕️","🏖️","🏜️","🏝️","🏞️","🏟️","🏛️","🏗️","🧱","🪨","🪵","🛖","🏘️","🏚️","🏠","🏡","🏢","🏣","🏤","🏥","🏦","🏨","🏩","🏪","🏫","🏬","🏭","🏯","🏰","💒","🗼","🗽","⛪","🕌","🛕","🕍","⛩️","🕋","⛲","⛺","🌁","🌃","🏙️","🌄","🌅","🌆","🌇","🌉","♨️","🎠","🎡","🎢","💈","🎪","🚂","🚃","🚄","🚅","🚆","🚇","🚈","🚉","🚊","🚝","🚞","🚋","🚌","🚍","🚎","🚐","🚑","🚒","🚓","🚔","🚕","🚖","🚗","🚘","🚙","🛻","🚚","🚛","🚜","🏎️","🏍️","🛵","🦽","🦼","🛺","🚲","🛴","🛹","🛼","🚏","🛣️","🛤️","🛢️","⛽","🚨","🚥","🚦","🛑","🚧","⚓","⛵","🛶","🚤","🛳️","⛴️","🛥️","🚢","✈️","🛩️","🛫","🛬","🪂","💺","🚁","🚟","🚠","🚡","🛰️","🚀","🛸","🛎️","🧳","⌛","⏳","⌚","⏰","⏱️","⏲️","🕰️","🕛","🕧","🕐","🕜","🕑","🕝","🕒","🕞","🕓","🕟","🕔","🕠","🕕","🕡","🕖","🕢","🕗","🕣","🕘","🕤","🕙","🕥","🕚","🕦","🌑","🌒","🌓","🌔","🌕","🌖","🌗","🌘","🌙","🌚","🌛","🌜","🌡️","☀️","🌝","🌞","🪐","⭐","🌟","🌠","🌌","☁️","⛅","⛈️","🌤️","🌥️","🌦️","🌧️","🌨️","🌩️","🌪️","🌫️","🌬️","🌀","🌈","🌂","☂️","☔","⛱️","⚡","❄️","☃️","⛄","☄️","🔥","💧","🌊"],activity:["🎃","🎄","🎆","🎇","🧨","✨","🎈","🎉","🎊","🎋","🎍","🎎","🎏","🎐","🎑","🧧","🎀","🎁","🎗️","🎟️","🎫","🎖️","🏆","🏅","🥇","🥈","🥉","⚽","⚾","🥎","🏀","🏐","🏈","🏉","🎾","🥏","🎳","🏏","🏑","🏒","🥍","🏓","🏸","🥊","🥋","🥅","⛳","⛸️","🎣","🤿","🎽","🎿","🛷","🥌","🎯","🪀","🪁","🎱","🔮","🪄","🧿","🎮","🕹️","🎰","🎲","🧩","🧸","🪅","🪆","♠️","♥️","♦️","♣️","♟️","🃏","🀄","🎴","🎭","🖼️","🎨","🧵","🪡","🧶","🪢"],object:["👓","🕶️","🥽","🥼","🦺","👔","👕","👖","🧣","🧤","🧥","🧦","👗","👘","🥻","🩱","🩲","🩳","👙","👚","👛","👜","👝","🛍️","🎒","🩴","👞","👟","🥾","🥿","👠","👡","🩰","👢","👑","👒","🎩","🎓","🧢","🪖","⛑️","📿","💄","💍","💎","🔇","🔈","🔉","🔊","📢","📣","📯","🔔","🔕","🎼","🎵","🎶","🎙️","🎚️","🎛️","🎤","🎧","📻","🎷","🪗","🎸","🎹","🎺","🎻","🪕","🥁","🪘","📱","📲","☎️","📞","📟","📠","🔋","🔌","💻","🖥️","🖨️","⌨️","🖱️","🖲️","💽","💾","💿","📀","🧮","🎥","🎞️","📽️","🎬","📺","📷","📸","📹","📼","🔍","🔎","🕯️","💡","🔦","🏮","🪔","📔","📕","📖","📗","📘","📙","📚","📓","📒","📃","📜","📄","📰","🗞️","📑","🔖","🏷️","💰","🪙","💴","💵","💶","💷","💸","💳","🧾","💹","✉️","📧","📨","📩","📤","📥","📦","📫","📪","📬","📭","📮","🗳️","✏️","✒️","🖋️","🖊️","🖌️","🖍️","📝","💼","📁","📂","🗂️","📅","📆","🗒️","🗓️","📇","📈","📉","📊","📋","📌","📍","📎","🖇️","📏","📐","✂️","🗃️","🗄️","🗑️","🔒","🔓","🔏","🔐","🔑","🗝️","🔨","🪓","⛏️","⚒️","🛠️","🗡️","⚔️","🔫","🪃","🏹","🛡️","🪚","🔧","🪛","🔩","⚙️","🗜️","⚖️","🦯","🔗","⛓️","🪝","🧰","🧲","🪜","⚗️","🧪","🧫","🧬","🔬","🔭","📡","💉","🩸","💊","🩹","🩺","🚪","🛗","🪞","🪟","🛏️","🛋️","🪑","🚽","🪠","🚿","🛁","🪤","🪒","🧴","🧷","🧹","🧺","🧻","🪣","🧼","🪥","🧽","🧯","🛒","🚬","⚰️","🪦","⚱️","🗿","🪧"],symbol:["🏧","🚮","🚰","♿","🚹","🚺","🚻","🚼","🚾","🛂","🛃","🛄","🛅","⚠️","🚸","⛔","🚫","🚳","🚭","🚯","🚱","🚷","📵","🔞","☢️","☣️","⬆️","↗️","➡️","↘️","⬇️","↙️","⬅️","↖️","↕️","↔️","↩️","↪️","⤴️","⤵️","🔃","🔄","🔙","🔚","🔛","🔜","🔝","🛐","⚛️","🕉️","✡️","☸️","☯️","✝️","☦️","☪️","☮️","🕎","🔯","♈","♉","♊","♋","♌","♍","♎","♏","♐","♑","♒","♓","⛎","🔀","🔁","🔂","▶️","⏩","⏭️","⏯️","◀️","⏪","⏮️","🔼","⏫","🔽","⏬","⏸️","⏹️","⏺️","⏏️","🎦","🔅","🔆","📶","📳","📴","♀️","♂️","⚧️","✖️","➕","➖","➗","♾️","‼️","⁉️","❓","❔","❕","❗","〰️","💱","💲","⚕️","♻️","⚜️","🔱","📛","🔰","⭕","✅","☑️","✔️","❌","❎","➰","➿","〽️","✳️","✴️","❇️","©️","®️","™️","#️⃣","*️⃣","0️⃣","1️⃣","2️⃣","3️⃣","4️⃣","5️⃣","6️⃣","7️⃣","8️⃣","9️⃣","🔟","🔠","🔡","🔢","🔣","🔤","🅰️","🆎","🅱️","🆑","🆒","🆓","ℹ️","🆔","Ⓜ️","🆕","🆖","🅾️","🆗","🅿️","🆘","🆙","🆚","🈁","🈂️","🈷️","🈶","🈯","🉐","🈹","🈚","🈲","🉑","🈸","🈴","🈳","㊗️","㊙️","🈺","🈵","🔴","🟠","🟡","🟢","🔵","🟣","🟤","⚫","⚪","🟥","🟧","🟨","🟩","🟦","🟪","🟫","⬛","⬜","◼️","◻️","◾","◽","▪️","▫️","🔶","🔷","🔸","🔹","🔺","🔻","💠","🔘","🔳","🔲"],flag:["🏁","🚩","🎌","🏴","🏳️","🏳️‍🌈","🏳️‍⚧️","🏴‍☠️","🇦🇨","🇦🇩","🇦🇪","🇦🇫","🇦🇬","🇦🇮","🇦🇱","🇦🇲","🇦🇴","🇦🇶","🇦🇷","🇦🇸","🇦🇹","🇦🇺","🇦🇼","🇦🇽","🇦🇿","🇧🇦","🇧🇧","🇧🇩","🇧🇪","🇧🇫","🇧🇬","🇧🇭","🇧🇮","🇧🇯","🇧🇱","🇧🇲","🇧🇳","🇧🇴","🇧🇶","🇧🇷","🇧🇸","🇧🇹","🇧🇻","🇧🇼","🇧🇾","🇧🇿","🇨🇦","🇨🇨","🇨🇩","🇨🇫","🇨🇬","🇨🇭","🇨🇮","🇨🇰","🇨🇱","🇨🇲","🇨🇳","🇨🇴","🇨🇵","🇨🇷","🇨🇺","🇨🇻","🇨🇼","🇨🇽","🇨🇾","🇨🇿","🇩🇪","🇩🇬","🇩🇯","🇩🇰","🇩🇲","🇩🇴","🇩🇿","🇪🇦","🇪🇨","🇪🇪","🇪🇬","🇪🇭","🇪🇷","🇪🇸","🇪🇹","🇪🇺","🇫🇮","🇫🇯","🇫🇰","🇫🇲","🇫🇴","🇫🇷","🇬🇦","🇬🇧","🇬🇩","🇬🇪","🇬🇫","🇬🇬","🇬🇭","🇬🇮","🇬🇱","🇬🇲","🇬🇳","🇬🇵","🇬🇶","🇬🇷","🇬🇸","🇬🇹","🇬🇺","🇬🇼","🇬🇾","🇭🇰","🇭🇲","🇭🇳","🇭🇷","🇭🇹","🇭🇺","🇮🇨","🇮🇩","🇮🇪","🇮🇱","🇮🇲","🇮🇳","🇮🇴","🇮🇶","🇮🇷","🇮🇸","🇮🇹","🇯🇪","🇯🇲","🇯🇴","🇯🇵","🇰🇪","🇰🇬","🇰🇭","🇰🇮","🇰🇲","🇰🇳","🇰🇵","🇰🇷","🇰🇼","🇰🇾","🇰🇿","🇱🇦","🇱🇧","🇱🇨","🇱🇮","🇱🇰","🇱🇷","🇱🇸","🇱🇹","🇱🇺","🇱🇻","🇱🇾","🇲🇦","🇲🇨","🇲🇩","🇲🇪","🇲🇫","🇲🇬","🇲🇭","🇲🇰","🇲🇱","🇲🇲","🇲🇳","🇲🇴","🇲🇵","🇲🇶","🇲🇷","🇲🇸","🇲🇹","🇲🇺","🇲🇻","🇲🇼","🇲🇽","🇲🇾","🇲🇿","🇳🇦","🇳🇨","🇳🇪","🇳🇫","🇳🇬","🇳🇮","🇳🇱","🇳🇴","🇳🇵","🇳🇷","🇳🇺","🇳🇿","🇴🇲","🇵🇦","🇵🇪","🇵🇫","🇵🇬","🇵🇭","🇵🇰","🇵🇱","🇵🇲","🇵🇳","🇵🇷","🇵🇸","🇵🇹","🇵🇼","🇵🇾","🇶🇦","🇷🇪","🇷🇴","🇷🇸","🇷🇺","🇷🇼","🇸🇦","🇸🇧","🇸🇨","🇸🇩","🇸🇪","🇸🇬","🇸🇭","🇸🇮","🇸🇯","🇸🇰","🇸🇱","🇸🇲","🇸🇳","🇸🇴","🇸🇷","🇸🇸","🇸🇹","🇸🇻","🇸🇽","🇸🇾","🇸🇿","🇹🇦","🇹🇨","🇹🇩","🇹🇫","🇹🇬","🇹🇭","🇹🇯","🇹🇰","🇹🇱","🇹🇲","🇹🇳","🇹🇴","🇹🇷","🇹🇹","🇹🇻","🇹🇼","🇹🇿","🇺🇦","🇺🇬","🇺🇲","🇺🇳","🇺🇸","🇺🇾","🇺🇿","🇻🇦","🇻🇨","🇻🇪","🇻🇬","🇻🇮","🇻🇳","🇻🇺","🇼🇫","🇼🇸","🇽🇰","🇾🇪","🇾🇹","🇿🇦","🇿🇲","🇿🇼"]},Fn={informational:[100,101,102,103],success:[200,201,202,203,204,205,206,207,208,226],redirection:[300,301,302,303,304,305,306,307,308],clientError:[400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,421,422,423,424,425,426,428,429,431,451],serverError:[500,501,502,503,504,505,506,507,508,510,511]},zn={emoji:Wn,http_status_code:Fn},In=zn,On=[{alpha2:"AD",alpha3:"AND",numeric:"020"},{alpha2:"AE",alpha3:"ARE",numeric:"784"},{alpha2:"AF",alpha3:"AFG",numeric:"004"},{alpha2:"AG",alpha3:"ATG",numeric:"028"},{alpha2:"AI",alpha3:"AIA",numeric:"660"},{alpha2:"AL",alpha3:"ALB",numeric:"008"},{alpha2:"AM",alpha3:"ARM",numeric:"051"},{alpha2:"AO",alpha3:"AGO",numeric:"024"},{alpha2:"AQ",alpha3:"ATA",numeric:"010"},{alpha2:"AR",alpha3:"ARG",numeric:"032"},{alpha2:"AS",alpha3:"ASM",numeric:"016"},{alpha2:"AT",alpha3:"AUT",numeric:"040"},{alpha2:"AU",alpha3:"AUS",numeric:"036"},{alpha2:"AW",alpha3:"ABW",numeric:"533"},{alpha2:"AX",alpha3:"ALA",numeric:"248"},{alpha2:"AZ",alpha3:"AZE",numeric:"031"},{alpha2:"BA",alpha3:"BIH",numeric:"070"},{alpha2:"BB",alpha3:"BRB",numeric:"052"},{alpha2:"BD",alpha3:"BGD",numeric:"050"},{alpha2:"BE",alpha3:"BEL",numeric:"056"},{alpha2:"BF",alpha3:"BFA",numeric:"854"},{alpha2:"BG",alpha3:"BGR",numeric:"100"},{alpha2:"BH",alpha3:"BHR",numeric:"048"},{alpha2:"BI",alpha3:"BDI",numeric:"108"},{alpha2:"BJ",alpha3:"BEN",numeric:"204"},{alpha2:"BL",alpha3:"BLM",numeric:"652"},{alpha2:"BM",alpha3:"BMU",numeric:"060"},{alpha2:"BN",alpha3:"BRN",numeric:"096"},{alpha2:"BO",alpha3:"BOL",numeric:"068"},{alpha2:"BQ",alpha3:"BES",numeric:"535"},{alpha2:"BR",alpha3:"BRA",numeric:"076"},{alpha2:"BS",alpha3:"BHS",numeric:"044"},{alpha2:"BT",alpha3:"BTN",numeric:"064"},{alpha2:"BV",alpha3:"BVT",numeric:"074"},{alpha2:"BW",alpha3:"BWA",numeric:"072"},{alpha2:"BY",alpha3:"BLR",numeric:"112"},{alpha2:"BZ",alpha3:"BLZ",numeric:"084"},{alpha2:"CA",alpha3:"CAN",numeric:"124"},{alpha2:"CC",alpha3:"CCK",numeric:"166"},{alpha2:"CD",alpha3:"COD",numeric:"180"},{alpha2:"CF",alpha3:"CAF",numeric:"140"},{alpha2:"CG",alpha3:"COG",numeric:"178"},{alpha2:"CH",alpha3:"CHE",numeric:"756"},{alpha2:"CI",alpha3:"CIV",numeric:"384"},{alpha2:"CK",alpha3:"COK",numeric:"184"},{alpha2:"CL",alpha3:"CHL",numeric:"152"},{alpha2:"CM",alpha3:"CMR",numeric:"120"},{alpha2:"CN",alpha3:"CHN",numeric:"156"},{alpha2:"CO",alpha3:"COL",numeric:"170"},{alpha2:"CR",alpha3:"CRI",numeric:"188"},{alpha2:"CU",alpha3:"CUB",numeric:"192"},{alpha2:"CV",alpha3:"CPV",numeric:"132"},{alpha2:"CW",alpha3:"CUW",numeric:"531"},{alpha2:"CX",alpha3:"CXR",numeric:"162"},{alpha2:"CY",alpha3:"CYP",numeric:"196"},{alpha2:"CZ",alpha3:"CZE",numeric:"203"},{alpha2:"DE",alpha3:"DEU",numeric:"276"},{alpha2:"DJ",alpha3:"DJI",numeric:"262"},{alpha2:"DK",alpha3:"DNK",numeric:"208"},{alpha2:"DM",alpha3:"DMA",numeric:"212"},{alpha2:"DO",alpha3:"DOM",numeric:"214"},{alpha2:"DZ",alpha3:"DZA",numeric:"012"},{alpha2:"EC",alpha3:"ECU",numeric:"218"},{alpha2:"EE",alpha3:"EST",numeric:"233"},{alpha2:"EG",alpha3:"EGY",numeric:"818"},{alpha2:"EH",alpha3:"ESH",numeric:"732"},{alpha2:"ER",alpha3:"ERI",numeric:"232"},{alpha2:"ES",alpha3:"ESP",numeric:"724"},{alpha2:"ET",alpha3:"ETH",numeric:"231"},{alpha2:"FI",alpha3:"FIN",numeric:"246"},{alpha2:"FJ",alpha3:"FJI",numeric:"242"},{alpha2:"FK",alpha3:"FLK",numeric:"238"},{alpha2:"FM",alpha3:"FSM",numeric:"583"},{alpha2:"FO",alpha3:"FRO",numeric:"234"},{alpha2:"FR",alpha3:"FRA",numeric:"250"},{alpha2:"GA",alpha3:"GAB",numeric:"266"},{alpha2:"GB",alpha3:"GBR",numeric:"826"},{alpha2:"GD",alpha3:"GRD",numeric:"308"},{alpha2:"GE",alpha3:"GEO",numeric:"268"},{alpha2:"GF",alpha3:"GUF",numeric:"254"},{alpha2:"GG",alpha3:"GGY",numeric:"831"},{alpha2:"GH",alpha3:"GHA",numeric:"288"},{alpha2:"GI",alpha3:"GIB",numeric:"292"},{alpha2:"GL",alpha3:"GRL",numeric:"304"},{alpha2:"GM",alpha3:"GMB",numeric:"270"},{alpha2:"GN",alpha3:"GIN",numeric:"324"},{alpha2:"GP",alpha3:"GLP",numeric:"312"},{alpha2:"GQ",alpha3:"GNQ",numeric:"226"},{alpha2:"GR",alpha3:"GRC",numeric:"300"},{alpha2:"GS",alpha3:"SGS",numeric:"239"},{alpha2:"GT",alpha3:"GTM",numeric:"320"},{alpha2:"GU",alpha3:"GUM",numeric:"316"},{alpha2:"GW",alpha3:"GNB",numeric:"624"},{alpha2:"GY",alpha3:"GUY",numeric:"328"},{alpha2:"HK",alpha3:"HKG",numeric:"344"},{alpha2:"HM",alpha3:"HMD",numeric:"334"},{alpha2:"HN",alpha3:"HND",numeric:"340"},{alpha2:"HR",alpha3:"HRV",numeric:"191"},{alpha2:"HT",alpha3:"HTI",numeric:"332"},{alpha2:"HU",alpha3:"HUN",numeric:"348"},{alpha2:"ID",alpha3:"IDN",numeric:"360"},{alpha2:"IE",alpha3:"IRL",numeric:"372"},{alpha2:"IL",alpha3:"ISR",numeric:"376"},{alpha2:"IM",alpha3:"IMN",numeric:"833"},{alpha2:"IN",alpha3:"IND",numeric:"356"},{alpha2:"IO",alpha3:"IOT",numeric:"086"},{alpha2:"IQ",alpha3:"IRQ",numeric:"368"},{alpha2:"IR",alpha3:"IRN",numeric:"364"},{alpha2:"IS",alpha3:"ISL",numeric:"352"},{alpha2:"IT",alpha3:"ITA",numeric:"380"},{alpha2:"JE",alpha3:"JEY",numeric:"832"},{alpha2:"JM",alpha3:"JAM",numeric:"388"},{alpha2:"JO",alpha3:"JOR",numeric:"400"},{alpha2:"JP",alpha3:"JPN",numeric:"392"},{alpha2:"KE",alpha3:"KEN",numeric:"404"},{alpha2:"KG",alpha3:"KGZ",numeric:"417"},{alpha2:"KH",alpha3:"KHM",numeric:"116"},{alpha2:"KI",alpha3:"KIR",numeric:"296"},{alpha2:"KM",alpha3:"COM",numeric:"174"},{alpha2:"KN",alpha3:"KNA",numeric:"659"},{alpha2:"KP",alpha3:"PRK",numeric:"408"},{alpha2:"KR",alpha3:"KOR",numeric:"410"},{alpha2:"KW",alpha3:"KWT",numeric:"414"},{alpha2:"KY",alpha3:"CYM",numeric:"136"},{alpha2:"KZ",alpha3:"KAZ",numeric:"398"},{alpha2:"LA",alpha3:"LAO",numeric:"418"},{alpha2:"LB",alpha3:"LBN",numeric:"422"},{alpha2:"LC",alpha3:"LCA",numeric:"662"},{alpha2:"LI",alpha3:"LIE",numeric:"438"},{alpha2:"LK",alpha3:"LKA",numeric:"144"},{alpha2:"LR",alpha3:"LBR",numeric:"430"},{alpha2:"LS",alpha3:"LSO",numeric:"426"},{alpha2:"LT",alpha3:"LTU",numeric:"440"},{alpha2:"LU",alpha3:"LUX",numeric:"442"},{alpha2:"LV",alpha3:"LVA",numeric:"428"},{alpha2:"LY",alpha3:"LBY",numeric:"434"},{alpha2:"MA",alpha3:"MAR",numeric:"504"},{alpha2:"MC",alpha3:"MCO",numeric:"492"},{alpha2:"MD",alpha3:"MDA",numeric:"498"},{alpha2:"ME",alpha3:"MNE",numeric:"499"},{alpha2:"MF",alpha3:"MAF",numeric:"663"},{alpha2:"MG",alpha3:"MDG",numeric:"450"},{alpha2:"MH",alpha3:"MHL",numeric:"584"},{alpha2:"MK",alpha3:"MKD",numeric:"807"},{alpha2:"ML",alpha3:"MLI",numeric:"466"},{alpha2:"MM",alpha3:"MMR",numeric:"104"},{alpha2:"MN",alpha3:"MNG",numeric:"496"},{alpha2:"MO",alpha3:"MAC",numeric:"446"},{alpha2:"MP",alpha3:"MNP",numeric:"580"},{alpha2:"MQ",alpha3:"MTQ",numeric:"474"},{alpha2:"MR",alpha3:"MRT",numeric:"478"},{alpha2:"MS",alpha3:"MSR",numeric:"500"},{alpha2:"MT",alpha3:"MLT",numeric:"470"},{alpha2:"MU",alpha3:"MUS",numeric:"480"},{alpha2:"MV",alpha3:"MDV",numeric:"462"},{alpha2:"MW",alpha3:"MWI",numeric:"454"},{alpha2:"MX",alpha3:"MEX",numeric:"484"},{alpha2:"MY",alpha3:"MYS",numeric:"458"},{alpha2:"MZ",alpha3:"MOZ",numeric:"508"},{alpha2:"NA",alpha3:"NAM",numeric:"516"},{alpha2:"NC",alpha3:"NCL",numeric:"540"},{alpha2:"NE",alpha3:"NER",numeric:"562"},{alpha2:"NF",alpha3:"NFK",numeric:"574"},{alpha2:"NG",alpha3:"NGA",numeric:"566"},{alpha2:"NI",alpha3:"NIC",numeric:"558"},{alpha2:"NL",alpha3:"NLD",numeric:"528"},{alpha2:"NO",alpha3:"NOR",numeric:"578"},{alpha2:"NP",alpha3:"NPL",numeric:"524"},{alpha2:"NR",alpha3:"NRU",numeric:"520"},{alpha2:"NU",alpha3:"NIU",numeric:"570"},{alpha2:"NZ",alpha3:"NZL",numeric:"554"},{alpha2:"OM",alpha3:"OMN",numeric:"512"},{alpha2:"PA",alpha3:"PAN",numeric:"591"},{alpha2:"PE",alpha3:"PER",numeric:"604"},{alpha2:"PF",alpha3:"PYF",numeric:"258"},{alpha2:"PG",alpha3:"PNG",numeric:"598"},{alpha2:"PH",alpha3:"PHL",numeric:"608"},{alpha2:"PK",alpha3:"PAK",numeric:"586"},{alpha2:"PL",alpha3:"POL",numeric:"616"},{alpha2:"PM",alpha3:"SPM",numeric:"666"},{alpha2:"PN",alpha3:"PCN",numeric:"612"},{alpha2:"PR",alpha3:"PRI",numeric:"630"},{alpha2:"PS",alpha3:"PSE",numeric:"275"},{alpha2:"PT",alpha3:"PRT",numeric:"620"},{alpha2:"PW",alpha3:"PLW",numeric:"585"},{alpha2:"PY",alpha3:"PRY",numeric:"600"},{alpha2:"QA",alpha3:"QAT",numeric:"634"},{alpha2:"RE",alpha3:"REU",numeric:"638"},{alpha2:"RO",alpha3:"ROU",numeric:"642"},{alpha2:"RS",alpha3:"SRB",numeric:"688"},{alpha2:"RU",alpha3:"RUS",numeric:"643"},{alpha2:"RW",alpha3:"RWA",numeric:"646"},{alpha2:"SA",alpha3:"SAU",numeric:"682"},{alpha2:"SB",alpha3:"SLB",numeric:"090"},{alpha2:"SC",alpha3:"SYC",numeric:"690"},{alpha2:"SD",alpha3:"SDN",numeric:"729"},{alpha2:"SE",alpha3:"SWE",numeric:"752"},{alpha2:"SG",alpha3:"SGP",numeric:"702"},{alpha2:"SH",alpha3:"SHN",numeric:"654"},{alpha2:"SI",alpha3:"SVN",numeric:"705"},{alpha2:"SJ",alpha3:"SJM",numeric:"744"},{alpha2:"SK",alpha3:"SVK",numeric:"703"},{alpha2:"SL",alpha3:"SLE",numeric:"694"},{alpha2:"SM",alpha3:"SMR",numeric:"674"},{alpha2:"SN",alpha3:"SEN",numeric:"686"},{alpha2:"SO",alpha3:"SOM",numeric:"706"},{alpha2:"SR",alpha3:"SUR",numeric:"740"},{alpha2:"SS",alpha3:"SSD",numeric:"728"},{alpha2:"ST",alpha3:"STP",numeric:"678"},{alpha2:"SV",alpha3:"SLV",numeric:"222"},{alpha2:"SX",alpha3:"SXM",numeric:"534"},{alpha2:"SY",alpha3:"SYR",numeric:"760"},{alpha2:"SZ",alpha3:"SWZ",numeric:"748"},{alpha2:"TC",alpha3:"TCA",numeric:"796"},{alpha2:"TD",alpha3:"TCD",numeric:"148"},{alpha2:"TF",alpha3:"ATF",numeric:"260"},{alpha2:"TG",alpha3:"TGO",numeric:"768"},{alpha2:"TH",alpha3:"THA",numeric:"764"},{alpha2:"TJ",alpha3:"TJK",numeric:"762"},{alpha2:"TK",alpha3:"TKL",numeric:"772"},{alpha2:"TL",alpha3:"TLS",numeric:"626"},{alpha2:"TM",alpha3:"TKM",numeric:"795"},{alpha2:"TN",alpha3:"TUN",numeric:"788"},{alpha2:"TO",alpha3:"TON",numeric:"776"},{alpha2:"TR",alpha3:"TUR",numeric:"792"},{alpha2:"TT",alpha3:"TTO",numeric:"780"},{alpha2:"TV",alpha3:"TUV",numeric:"798"},{alpha2:"TW",alpha3:"TWN",numeric:"158"},{alpha2:"TZ",alpha3:"TZA",numeric:"834"},{alpha2:"UA",alpha3:"UKR",numeric:"804"},{alpha2:"UG",alpha3:"UGA",numeric:"800"},{alpha2:"UM",alpha3:"UMI",numeric:"581"},{alpha2:"US",alpha3:"USA",numeric:"840"},{alpha2:"UY",alpha3:"URY",numeric:"858"},{alpha2:"UZ",alpha3:"UZB",numeric:"860"},{alpha2:"VA",alpha3:"VAT",numeric:"336"},{alpha2:"VC",alpha3:"VCT",numeric:"670"},{alpha2:"VE",alpha3:"VEN",numeric:"862"},{alpha2:"VG",alpha3:"VGB",numeric:"092"},{alpha2:"VI",alpha3:"VIR",numeric:"850"},{alpha2:"VN",alpha3:"VNM",numeric:"704"},{alpha2:"VU",alpha3:"VUT",numeric:"548"},{alpha2:"WF",alpha3:"WLF",numeric:"876"},{alpha2:"WS",alpha3:"WSM",numeric:"882"},{alpha2:"YE",alpha3:"YEM",numeric:"887"},{alpha2:"YT",alpha3:"MYT",numeric:"175"},{alpha2:"ZA",alpha3:"ZAF",numeric:"710"},{alpha2:"ZM",alpha3:"ZMB",numeric:"894"},{alpha2:"ZW",alpha3:"ZWE",numeric:"716"}],_n=["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Fort_Nelson","America/Fortaleza","America/Glace_Bay","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Inuvik","America/Iqaluit","America/Jamaica","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montserrat","America/Nassau","America/New_York","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Nuuk","America/Ojinaga","America/Panama","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Chita","Asia/Choibalsan","Asia/Colombo","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kathmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qostanay","Asia/Qyzylorda","Asia/Riyadh","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ulaanbaatar","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faroe","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/Perth","Australia/Sydney","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kirov","Europe/Kyiv","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Ulyanovsk","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zurich","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Kanton","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Wake","Pacific/Wallis"],Kn={country_code:On,time_zone:_n},Jn=Kn,jn={title:"Base",code:"base"},$n=jn,Vn=["/Applications","/bin","/boot","/boot/defaults","/dev","/etc","/etc/defaults","/etc/mail","/etc/namedb","/etc/periodic","/etc/ppp","/home","/home/user","/home/user/dir","/lib","/Library","/lost+found","/media","/mnt","/net","/Network","/opt","/opt/bin","/opt/include","/opt/lib","/opt/sbin","/opt/share","/private","/private/tmp","/private/var","/proc","/rescue","/root","/sbin","/selinux","/srv","/sys","/System","/tmp","/Users","/usr","/usr/X11R6","/usr/bin","/usr/include","/usr/lib","/usr/libdata","/usr/libexec","/usr/local/bin","/usr/local/src","/usr/obj","/usr/ports","/usr/sbin","/usr/share","/usr/src","/var","/var/log","/var/mail","/var/spool","/var/tmp","/var/yp"],Un={"application/epub+zip":{extensions:["epub"]},"application/gzip":{extensions:["gz"]},"application/java-archive":{extensions:["jar","war","ear"]},"application/json":{extensions:["json","map"]},"application/ld+json":{extensions:["jsonld"]},"application/msword":{extensions:["doc","dot"]},"application/octet-stream":{extensions:["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/ogg":{extensions:["ogx"]},"application/pdf":{extensions:["pdf"]},"application/rtf":{extensions:["rtf"]},"application/vnd.amazon.ebook":{extensions:["azw"]},"application/vnd.apple.installer+xml":{extensions:["mpkg"]},"application/vnd.mozilla.xul+xml":{extensions:["xul"]},"application/vnd.ms-excel":{extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-fontobject":{extensions:["eot"]},"application/vnd.ms-powerpoint":{extensions:["ppt","pps","pot"]},"application/vnd.oasis.opendocument.presentation":{extensions:["odp"]},"application/vnd.oasis.opendocument.spreadsheet":{extensions:["ods"]},"application/vnd.oasis.opendocument.text":{extensions:["odt"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{extensions:["docx"]},"application/vnd.rar":{extensions:["rar"]},"application/vnd.visio":{extensions:["vsd","vst","vss","vsw"]},"application/x-7z-compressed":{extensions:["7z"]},"application/x-abiword":{extensions:["abw"]},"application/x-bzip":{extensions:["bz"]},"application/x-bzip2":{extensions:["bz2","boz"]},"application/x-csh":{extensions:["csh"]},"application/x-freearc":{extensions:["arc"]},"application/x-httpd-php":{extensions:["php"]},"application/x-sh":{extensions:["sh"]},"application/x-tar":{extensions:["tar"]},"application/xhtml+xml":{extensions:["xhtml","xht"]},"application/xml":{extensions:["xml","xsl","xsd","rng"]},"application/zip":{extensions:["zip"]},"audio/3gpp":{extensions:["3gpp"]},"audio/3gpp2":{extensions:["3g2"]},"audio/aac":{extensions:["aac"]},"audio/midi":{extensions:["mid","midi","kar","rmi"]},"audio/mpeg":{extensions:["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/ogg":{extensions:["oga","ogg","spx","opus"]},"audio/opus":{extensions:["opus"]},"audio/wav":{extensions:["wav"]},"audio/webm":{extensions:["weba"]},"font/otf":{extensions:["otf"]},"font/ttf":{extensions:["ttf"]},"font/woff":{extensions:["woff"]},"font/woff2":{extensions:["woff2"]},"image/avif":{extensions:["avif"]},"image/bmp":{extensions:["bmp"]},"image/gif":{extensions:["gif"]},"image/jpeg":{extensions:["jpeg","jpg","jpe"]},"image/png":{extensions:["png"]},"image/svg+xml":{extensions:["svg","svgz"]},"image/tiff":{extensions:["tif","tiff"]},"image/vnd.microsoft.icon":{extensions:["ico"]},"image/webp":{extensions:["webp"]},"text/calendar":{extensions:["ics","ifb"]},"text/css":{extensions:["css"]},"text/csv":{extensions:["csv"]},"text/html":{extensions:["html","htm","shtml"]},"text/javascript":{extensions:["js","mjs"]},"text/plain":{extensions:["txt","text","conf","def","list","log","in","ini"]},"video/3gpp":{extensions:["3gp","3gpp"]},"video/3gpp2":{extensions:["3g2"]},"video/mp2t":{extensions:["ts"]},"video/mp4":{extensions:["mp4","mp4v","mpg4"]},"video/mpeg":{extensions:["mpeg","mpg","mpe","m1v","m2v"]},"video/ogg":{extensions:["ogv"]},"video/webm":{extensions:["webm"]},"video/x-msvideo":{extensions:["avi"]}},Yn={directoryPaths:Vn,mimeTypes:Un},qn=Yn,Zn={color:xn,database:Dn,hacker:Gn,internet:In,location:Jn,metadata:$n,system:qn},Xn=Zn,Qn=new Mn({locale:[Dr,tr,Xn]})},2644:function(e,a,r){if(r.d(a,{A:function(){return n}}),524==r.j)var t=r(6768);function n(e,a){return(0,t.uX)(),(0,t.CE)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[(0,t.Lk)("path",{"fill-rule":"evenodd",d:"M4.755 10.059a7.5 7.5 0 0 1 12.548-3.364l1.903 1.903h-3.183a.75.75 0 1 0 0 1.5h4.992a.75.75 0 0 0 .75-.75V4.356a.75.75 0 0 0-1.5 0v3.18l-1.9-1.9A9 9 0 0 0 3.306 9.67a.75.75 0 1 0 1.45.388Zm15.408 3.352a.75.75 0 0 0-.919.53 7.5 7.5 0 0 1-12.548 3.364l-1.902-1.903h3.183a.75.75 0 0 0 0-1.5H2.984a.75.75 0 0 0-.75.75v4.992a.75.75 0 0 0 1.5 0v-3.18l1.9 1.9a9 9 0 0 0 15.059-4.035.75.75 0 0 0-.53-.918Z","clip-rule":"evenodd"})])}},4725:function(e,a,r){if(r.d(a,{A:function(){return n}}),524==r.j)var t=r(6768);function n(e,a){return(0,t.uX)(),(0,t.CE)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[(0,t.Lk)("path",{"fill-rule":"evenodd",d:"M14.615 1.595a.75.75 0 0 1 .359.852L12.982 9.75h7.268a.75.75 0 0 1 .548 1.262l-10.5 11.25a.75.75 0 0 1-1.272-.71l1.992-7.302H3.75a.75.75 0 0 1-.548-1.262l10.5-11.25a.75.75 0 0 1 .913-.143Z","clip-rule":"evenodd"})])}},1326:function(e,a,r){if(r.d(a,{A:function(){return n}}),524==r.j)var t=r(6768);function n(e,a){return(0,t.uX)(),(0,t.CE)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[(0,t.Lk)("path",{d:"m11.645 20.91-.007-.003-.022-.012a15.247 15.247 0 0 1-.383-.218 25.18 25.18 0 0 1-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0 1 12 5.052 5.5 5.5 0 0 1 16.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 0 1-4.244 3.17 15.247 15.247 0 0 1-.383.219l-.022.012-.007.004-.003.001a.752.752 0 0 1-.704 0l-.003-.001Z"})])}},3682:function(e,a,r){if(r.d(a,{A:function(){return n}}),524==r.j)var t=r(6768);function n(e,a){return(0,t.uX)(),(0,t.CE)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[(0,t.Lk)("path",{d:"M3.478 2.404a.75.75 0 0 0-.926.941l2.432 7.905H13.5a.75.75 0 0 1 0 1.5H4.984l-2.432 7.905a.75.75 0 0 0 .926.94 60.519 60.519 0 0 0 18.445-8.986.75.75 0 0 0 0-1.218A60.517 60.517 0 0 0 3.478 2.404Z"})])}},4828:function(e,a,r){if(r.d(a,{A:function(){return n}}),524==r.j)var t=r(6768);function n(e,a){return(0,t.uX)(),(0,t.CE)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[(0,t.Lk)("path",{d:"M2.25 2.25a.75.75 0 0 0 0 1.5h1.386c.17 0 .318.114.362.278l2.558 9.592a3.752 3.752 0 0 0-2.806 3.63c0 .414.336.75.75.75h15.75a.75.75 0 0 0 0-1.5H5.378A2.25 2.25 0 0 1 7.5 15h11.218a.75.75 0 0 0 .674-.421 60.358 60.358 0 0 0 2.96-7.228.75.75 0 0 0-.525-.965A60.864 60.864 0 0 0 5.68 4.509l-.232-.867A1.875 1.875 0 0 0 3.636 2.25H2.25ZM3.75 20.25a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 20.25a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"})])}},9318:function(e,a,r){if(r.d(a,{A:function(){return n}}),524==r.j)var t=r(6768);function n(e,a){return(0,t.uX)(),(0,t.CE)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[(0,t.Lk)("path",{d:"M6 3a3 3 0 0 0-3 3v2.25a3 3 0 0 0 3 3h2.25a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3H6ZM15.75 3a3 3 0 0 0-3 3v2.25a3 3 0 0 0 3 3H18a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3h-2.25ZM6 12.75a3 3 0 0 0-3 3V18a3 3 0 0 0 3 3h2.25a3 3 0 0 0 3-3v-2.25a3 3 0 0 0-3-3H6ZM17.625 13.5a.75.75 0 0 0-1.5 0v2.625H13.5a.75.75 0 0 0 0 1.5h2.625v2.625a.75.75 0 0 0 1.5 0v-2.625h2.625a.75.75 0 0 0 0-1.5h-2.625V13.5Z"})])}},8789:function(e,a,r){if(r.d(a,{A:function(){return n}}),524==r.j)var t=r(6768);function n(e,a){return(0,t.uX)(),(0,t.CE)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true","data-slot":"icon"},[(0,t.Lk)("path",{"fill-rule":"evenodd",d:"M18.685 19.097A9.723 9.723 0 0 0 21.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 0 0 3.065 7.097A9.716 9.716 0 0 0 12 21.75a9.716 9.716 0 0 0 6.685-2.653Zm-12.54-1.285A7.486 7.486 0 0 1 12 15a7.486 7.486 0 0 1 5.855 2.812A8.224 8.224 0 0 1 12 20.25a8.224 8.224 0 0 1-5.855-2.438ZM15.75 9a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z","clip-rule":"evenodd"})])}},772:function(e,a,r){r.d(a,{A:function(){return Ee}});r(4114);var t=r(6768),n=r(5130),i=r(144),o=r(4232),l=Object.defineProperty,s=Object.defineProperties,c=Object.getOwnPropertyDescriptors,u=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable,p=(e,a,r)=>a in e?l(e,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[a]=r,m=(e,a)=>{for(var r in a||(a={}))d.call(a,r)&&p(e,r,a[r]);if(u)for(var r of u(a))h.call(a,r)&&p(e,r,a[r]);return e},y=(e,a)=>s(e,c(a)),g=(e,a)=>{const r=e.__vccOpts||e;for(const[t,n]of a)r[t]=n;return r};const f=e=>((0,t.Qi)("data-v-e0a0b7f0"),e=e(),(0,t.jt)(),e),b=["onClick"],k=["checked"],v=f((()=>(0,t.Lk)("label",{for:"checbox"},null,-1))),w=(0,t.pM)({__name:"MultipleSelectCheckBox",props:{status:{type:String,required:!0}},emits:["change"],setup(e,{emit:a}){const r=e;(0,n.$9)((e=>({"51ab8a49":(0,i.R1)(c)})));const l=(0,t.EW)((()=>"allSelected"===r.status)),s=()=>{a("change",!l.value)},c=(0,t.WQ)("themeColor");return(a,r)=>((0,t.uX)(),(0,t.CE)("div",{class:"easy-checkbox",onClick:(0,n.D$)(s,["stop","prevent"])},[(0,t.Lk)("input",{type:"checkbox",checked:(0,i.R1)(l),class:(0,o.C4)(e.status)},null,10,k),v],8,b))}});var C=g(w,[["__scopeId","data-v-e0a0b7f0"]]);const S=e=>((0,t.Qi)("data-v-7e69a276"),e=e(),(0,t.jt)(),e),A=["checked"],M=S((()=>(0,t.Lk)("label",{for:"checbox"},null,-1))),B=(0,t.pM)({__name:"SingleSelectCheckBox",props:{checked:{type:Boolean,required:!0}},emits:["change"],setup(e,{emit:a}){(0,n.$9)((e=>({fdaf7e9e:(0,i.R1)(r)})));const r=(0,t.WQ)("themeColor");return(r,i)=>((0,t.uX)(),(0,t.CE)("div",{class:"easy-checkbox",onClick:i[0]||(i[0]=(0,n.D$)((e=>a("change")),["stop","prevent"]))},[(0,t.Lk)("input",{type:"checkbox",checked:e.checked},null,8,A),M]))}});var T=g(B,[["__scopeId","data-v-7e69a276"]]);const x=e=>((0,t.Qi)("data-v-4ca5de3a"),e=e(),(0,t.jt)(),e),R={class:"easy-data-table__rows-selector"},L={class:"rows-input"},P=x((()=>(0,t.Lk)("div",{class:"triangle"},null,-1))),E=["onClick"],D=(0,t.pM)({__name:"RowsSelector",props:{modelValue:{type:Number,required:!0},rowsItems:{type:Array,required:!0}},emits:["update:modelValue"],setup(e,{emit:a}){const r=e;(0,n.$9)((e=>({"1b889342":(0,i.R1)(m)})));const l=(0,i.KR)(!1),s=(0,i.KR)(!1),c=(0,t.WQ)("dataTable");(0,t.wB)(l,(e=>{if(e&&c){const e=window.innerHeight,a=c.value.getBoundingClientRect().height,r=c.value.getBoundingClientRect().top;s.value=e-(a+r)<=100}}));const u=(0,t.EW)({get:()=>r.modelValue,set:e=>{a("update:modelValue",e)}}),d=e=>{u.value=e,l.value=!1},h=(e,a)=>{let r=e.parentNode;while(null!=r){if(r.classList&&r.classList.contains(a))return!0;r=r.parentNode}return!1},p=e=>{h(e.target,"easy-data-table__rows-selector")||(l.value=!1)};(0,t.sV)((()=>{document.addEventListener("click",p)})),(0,t.xo)((()=>{document.removeEventListener("click",p)}));const m=(0,t.WQ)("themeColor");return(a,r)=>((0,t.uX)(),(0,t.CE)("div",R,[(0,t.Lk)("div",{class:"rows-input__wrapper",onClick:r[0]||(r[0]=e=>l.value=!l.value)},[(0,t.Lk)("div",L,(0,o.v_)((0,i.R1)(u)),1),P]),(0,t.Lk)("ul",{class:(0,o.C4)(["select-items",{show:l.value,inside:s.value}])},[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)(e.rowsItems,(e=>((0,t.uX)(),(0,t.CE)("li",{key:e,class:(0,o.C4)({selected:e===(0,i.R1)(u)}),onClick:a=>d(e)},(0,o.v_)(e),11,E)))),128))],2)]))}});var N=g(D,[["__scopeId","data-v-4ca5de3a"]]);const H=e=>((0,t.Qi)("data-v-1fa3a520"),e=e(),(0,t.jt)(),e),G={class:"lds-ring"},W=H((()=>(0,t.Lk)("div",null,null,-1))),F=H((()=>(0,t.Lk)("div",null,null,-1))),z=H((()=>(0,t.Lk)("div",null,null,-1))),I=H((()=>(0,t.Lk)("div",null,null,-1))),O=[W,F,z,I],_=(0,t.pM)({__name:"Loading",setup(e){(0,n.$9)((e=>({26774109:(0,i.R1)(a)})));const a=(0,t.WQ)("themeColor");return(e,a)=>((0,t.uX)(),(0,t.CE)("div",G,O))}});var K=g(_,[["__scopeId","data-v-1fa3a520"]]);const J={class:"loader-line"},j=(0,t.pM)({__name:"LoadingLine",setup(e){(0,n.$9)((e=>({"0d327f57":(0,i.R1)(a)})));const a=(0,t.WQ)("themeColor");return(e,a)=>((0,t.uX)(),(0,t.CE)("div",J))}});var $=g(j,[["__scopeId","data-v-7d281cac"]]);const V={class:"buttons-pagination"},U=["onClick"],Y=(0,t.pM)({__name:"ButtonsPagination",props:{maxPaginationNumber:{type:Number,required:!0},currentPaginationNumber:{type:Number,required:!0}},emits:["updatePage"],setup(e,{emit:a}){const r=e;(0,n.$9)((e=>({"40dd4f07":(0,i.R1)(u)})));const l=7,s=e=>{"button"!==e.type||e.active||a("updatePage",e.page)},c=(0,t.EW)((()=>{const e=[];if(r.maxPaginationNumber<=l)for(let a=1;a<=r.maxPaginationNumber;a+=1)e.push({type:"button",page:a,active:a===r.currentPaginationNumber,activePrev:a+1===r.currentPaginationNumber});else if([1,2,r.maxPaginationNumber,r.maxPaginationNumber-1].includes(r.currentPaginationNumber))for(let a=1;a<=l;a+=1)if(a<=3)e.push({type:"button",page:a,active:a===r.currentPaginationNumber,activePrev:a+1===r.currentPaginationNumber});else if(4===a)e.push({type:"omission"});else{const t=r.maxPaginationNumber-(l-a);e.push({type:"button",page:t,active:t===r.currentPaginationNumber,activePrev:t+1===r.currentPaginationNumber})}else if([3,4].includes(r.currentPaginationNumber))for(let a=1;a<=l;a+=1)a<=5?e.push({type:"button",page:a,active:a===r.currentPaginationNumber,activePrev:a+1===r.currentPaginationNumber}):6===a?e.push({type:"omission"}):e.push({type:"button",page:r.maxPaginationNumber,active:r.maxPaginationNumber===r.currentPaginationNumber,activePrev:a+1===r.currentPaginationNumber});else if([r.maxPaginationNumber-2,r.maxPaginationNumber-3].includes(r.currentPaginationNumber))for(let a=1;a<=l;a+=1)if(1===a)e.push({type:"button",page:1,active:1===r.currentPaginationNumber,activePrev:a+1===r.currentPaginationNumber});else if(2===a)e.push({type:"omission"});else{const t=r.maxPaginationNumber-(l-a);e.push({type:"button",page:t,active:t===r.currentPaginationNumber,activePrev:t+1===r.currentPaginationNumber})}else for(let a=1;a<=l;a+=1)if(1===a)e.push({type:"button",page:1,active:1===r.currentPaginationNumber,activePrev:a+1===r.currentPaginationNumber});else if(2===a||6===a)e.push({type:"omission"});else if(7===a)e.push({type:"button",page:r.maxPaginationNumber,active:r.maxPaginationNumber===r.currentPaginationNumber,activePrev:a+1===r.currentPaginationNumber});else{const t=4-a,n=r.currentPaginationNumber-t;e.push({type:"button",page:n,active:n===r.currentPaginationNumber,activePrev:n+1===r.currentPaginationNumber})}return e})),u=(0,t.WQ)("themeColor");return(e,a)=>((0,t.uX)(),(0,t.CE)("div",V,[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)((0,i.R1)(c),((e,a)=>((0,t.uX)(),(0,t.CE)("div",{key:a,class:(0,o.C4)(["item",{button:"button"===e.type,active:"button"===e.type&&e.active,"active-prev":"button"===e.type&&e.activePrev,omission:"omission"===e.type}]),onClick:a=>s(e)},(0,o.v_)("button"===e.type?e.page:"..."),11,U)))),128))]))}});var q=g(Y,[["__scopeId","data-v-4c681fa2"]]);const Z=e=>((0,t.Qi)("data-v-c9da5286"),e=e(),(0,t.jt)(),e),X=Z((()=>(0,t.Lk)("span",{class:"arrow arrow-right"},null,-1))),Q=[X],ee=Z((()=>(0,t.Lk)("span",{class:"arrow arrow-left"},null,-1))),ae=[ee],re=(0,t.pM)({__name:"PaginationArrows",props:{isFirstPage:{type:Boolean,required:!1},isLastPage:{type:Boolean,required:!1}},emits:["clickPrevPage","clickNextPage"],setup(e,{emit:a}){const r=(0,t.Ht)();return(n,l)=>((0,t.uX)(),(0,t.CE)(t.FK,null,[(0,t.Lk)("div",{class:(0,o.C4)(["previous-page__click-button",{"first-page":e.isFirstPage}]),onClick:l[0]||(l[0]=e=>a("clickPrevPage"))},Q,2),(0,i.R1)(r).buttonsPagination?(0,t.RG)(n.$slots,"buttonsPagination",{key:0},void 0,!0):(0,t.Q3)("",!0),(0,t.Lk)("div",{class:(0,o.C4)(["next-page__click-button",{"last-page":e.isLastPage}]),onClick:l[1]||(l[1]=e=>a("clickNextPage"))},ae,2)],64))}});var te=g(re,[["__scopeId","data-v-c9da5286"]]);function ne(e,a,r,t){const n=(n,i,o)=>{if(e.value!==i)return;const l=m({},n);if(a.value){const{checkbox:e}=n;delete l.checkbox,l.isSelected=e}if(r.value){const{index:e}=n;delete l.index,l.indexInCurrentPage=e}t("clickRow",l,o)};return{clickRow:n}}function ie(e,a,r){const t=(0,i.KR)([]),n=(n,i,o)=>{o.stopPropagation();const l=t.value.indexOf(n);if(-1!==l)t.value.splice(l,1);else{const n=e.value.findIndex((e=>JSON.stringify(e)===JSON.stringify(i)));r("expandRow",a.value+n,i),t.value.push(a.value+n)}},o=()=>{t.value=[]};return{expandingItemIndexList:t,updateExpandingItemIndexList:n,clearExpandingItemIndexList:o}}function oe(e){const a=(0,t.EW)((()=>e.value.filter((e=>e.fixed)))),r=(0,t.EW)((()=>a.value.length?a.value[a.value.length-1].value:"")),n=(0,t.EW)((()=>{if(!a.value.length)return[];const e=a.value.map((e=>{var a;return null!=(a=e.width)?a:100}));return a.value.map(((a,r)=>{var t,n;return{value:a.value,fixed:null==(t=a.fixed)||t,width:null!=(n=a.width)?n:100,distance:0===r?0:e.reduce(((e,a,t)=>{let n=e;return t<r&&(n+=a),n}))}}))}));return{fixedHeaders:a,lastFixedColumn:r,fixedColumnsInfos:n}}function le(e,a,r,n,o,l,s,c,u,d,h,p,m,y,g,f,b,k,v){const w=(0,t.EW)((()=>-1!==s.value.findIndex((e=>e.fixed)))),C=(0,t.EW)((()=>w.value?s.value.filter((e=>e.fixed)):[])),S=(0,t.EW)((()=>s.value.filter((e=>!e.fixed)))),A=(e,a)=>Array.isArray(e)&&Array.isArray(a)?{sortBy:e,sortDesc:a.map((e=>"desc"===e))}:""!==e?{sortBy:g.value,sortDesc:"desc"===f.value}:null,M=(0,i.KR)(A(g.value,f.value)),B=(0,t.EW)((()=>{var t;const i=[...C.value,...S.value],s=i.map((e=>{const a=Object.assign(e);if(a.sortable&&(a.sortType="none"),m.value)if(Array.isArray(m.value.sortBy)&&Array.isArray(m.value.sortType)&&m.value.sortBy.includes(a.value)){const e=m.value.sortBy.indexOf(a.value);a.sortType=m.value.sortType[e]}else a.value===m.value.sortBy&&m.value.sortType&&(a.sortType=m.value.sortType);if(M.value&&Array.isArray(M.value.sortBy)&&Array.isArray(M.value.sortDesc)&&M.value.sortBy.includes(a.value)){const e=M.value.sortBy.indexOf(a.value);a.sortType=M.value.sortDesc[e]?"desc":"asc"}else M.value&&a.value===M.value.sortBy&&(a.sortType=M.value.sortDesc?"desc":"asc");return a}));let h=[];if(c.value){const e=o.value||w.value?{text:"",value:"expand",fixed:!0,width:r.value}:{text:"",value:"expand"};h=[e,...s]}else h=s;let p=[];if(y.value){const a=l.value||w.value?{text:e.value,value:"index",fixed:!0,width:u.value}:{text:e.value,value:"index"};p=[a,...h]}else p=h;let g=[];if(d.value){const e=n.value||w.value?{text:"checkbox",value:"checkbox",fixed:!0,width:null!=(t=a.value)?t:36}:{text:"checkbox",value:"checkbox"};g=[e,...p]}else g=p;return g})),T=(0,t.EW)((()=>B.value.map((e=>e.value)))),x=(e,a)=>{let r=null;if(r="none"===a?"asc":"asc"===a?"desc":p.value?"asc":null,h.value&&k(e,r),M.value&&Array.isArray(M.value.sortBy)&&Array.isArray(M.value.sortDesc)){const a=M.value.sortBy.indexOf(e);-1===a?null!==r&&(M.value.sortBy.push(e),M.value.sortDesc.push("desc"===r)):null===r?(M.value.sortDesc.splice(a,1),M.value.sortBy.splice(a,1)):M.value.sortDesc[a]="desc"===r}else M.value=null===r?null:{sortBy:e,sortDesc:"desc"===r};v("updateSort",{sortType:r,sortBy:e})},R=e=>m.value&&Array.isArray(m.value.sortBy)?m.value.sortBy.includes(e):!(!M.value||!Array.isArray(M.value.sortBy))&&M.value.sortBy.includes(e),L=e=>m.value&&Array.isArray(m.value.sortBy)?m.value.sortBy.indexOf(e)+1:!(!M.value||!Array.isArray(M.value.sortBy))&&M.value.sortBy.indexOf(e)+1;return{clientSortOptions:M,headerColumns:T,headersForRender:B,updateSortField:x,isMultiSorting:R,getMultiSortNumber:L}}function se(e,a,r,n,i,o,l,s,c){const u=(0,t.EW)((()=>(e.value-1)*i.value+1)),d=(0,t.EW)((()=>r.value?Math.min(c.value,e.value*i.value):Math.min(s.value.length,e.value*i.value))),h=(0,t.EW)((()=>r.value?n.value:s.value.slice(u.value-1,d.value))),p=(0,t.EW)((()=>l.value?h.value.map(((e,a)=>m({index:u.value+a},e))):h.value)),y=(0,t.EW)((()=>{if(0===o.value.length)return"noneSelected";const e=o.value.every((e=>-1===s.value.findIndex((a=>JSON.stringify(e)===JSON.stringify(a)))));if(e)return"noneSelected";if(o.value.length===s.value.length){const e=o.value.every((e=>-1!==s.value.findIndex((a=>JSON.stringify(e)===JSON.stringify(a)))));return e?"allSelected":"partSelected"}return"partSelected"})),g=(0,t.EW)((()=>a.value?"allSelected"===y.value?p.value.map((e=>m({checkbox:!0},e))):"noneSelected"===y.value?p.value.map((e=>m({checkbox:!1},e))):p.value.map((e=>{const a=-1!==o.value.findIndex((a=>{const r=m({},e);return delete r.index,JSON.stringify(a)===JSON.stringify(r)}));return m({checkbox:a},e)})):p.value));return{currentPageFirstIndex:u,currentPageLastIndex:d,multipleSelectStatus:y,pageItems:g}}function ce(e,a,r,n,o,l,s){const c=(0,i.KR)(l.value?l.value.page:e.value),u=(0,t.EW)((()=>Math.ceil(n.value/o.value))),d=(0,t.EW)((()=>0===u.value||c.value===u.value)),h=(0,t.EW)((()=>1===c.value)),p=()=>{if(0!==n.value&&!d.value&&!r.value)if(a.value){const e=c.value+1;s(e)}else c.value+=1},m=()=>{if(0!==n.value&&!h.value&&!r.value)if(a.value){const e=c.value-1;s(e)}else c.value-=1},y=e=>{r.value||(a.value?s(e):c.value=e)},g=e=>{c.value=e};return{currentPaginationNumber:c,maxPaginationNumber:u,isLastPage:d,isFirstPage:h,nextPage:p,prevPage:m,updatePage:y,updateCurrentPaginationNumber:g}}function ue(e,a,r,n){const o=(0,t.EW)((()=>e.value||-1!==a.value.findIndex((e=>e===n.value))?a.value:[n.value,...a.value])),l=(0,i.KR)(r.value?r.value.rowsPerPage:n.value),s=e=>{l.value=e};return{rowsItemsComputed:o,rowsPerPageRef:l,updateRowsPerPage:s}}function de(e,a,r){const n=(0,t.EW)({get:()=>{if(e.value){const{page:a,rowsPerPage:r,sortBy:t,sortType:n}=e.value;return{page:a,rowsPerPage:r,sortBy:null!=t?t:null,sortType:null!=n?n:null}}return null},set:e=>{r("update:serverOptions",e)}}),i=e=>{n.value&&(n.value=y(m({},n.value),{page:e}))},o=e=>{n.value&&(n.value=y(m({},n.value),{page:1,rowsPerPage:e}))},l=(e,r)=>{if(n.value)if(a.value&&Array.isArray(n.value.sortBy)&&Array.isArray(n.value.sortType)){const a=n.value.sortBy.findIndex((a=>a===e));-1===a&&null!==r&&(n.value.sortBy.push(e),n.value.sortType.push(r)),null===r?(n.value.sortBy.splice(a,1),n.value.sortType.splice(a,1)):n.value.sortType[a]=r}else n.value=y(m({},n.value),{sortBy:null!==r?e:null,sortType:r})};return{serverOptionsComputed:n,updateServerOptionsPage:i,updateServerOptionsSort:l,updateServerOptionsRowsPerPage:o}}function he(e,a){var r;if(e.includes(".")){const r=e.split("."),{length:t}=r;let n,i=0;while(i<t){if(0===i)n=a[r[0]];else{if(!n||"object"!==typeof n){n="";break}n=n[r[i]]}i+=1}return null!=n?n:""}return null!=(r=a[e])?r:""}function pe(e,a){const r=he(e,a);return Array.isArray(r)?r.join(","):r}function me(e,a,r,n,i,o,l,s,c,u){const d=e=>{if("string"===typeof o.value&&""!==o.value)return he(o.value,e);if(Array.isArray(o.value)){let a="";return o.value.forEach((r=>{a+=he(r,e)})),a}return Object.values(e).join(" ")},h=(0,t.EW)((()=>{if(!r.value&&""!==l.value){const e=new RegExp(l.value,"i");return n.value.filter((a=>e.test(d(a))))}return n.value})),p=(0,t.EW)((()=>{let e=[...h.value];return a.value?(a.value.forEach((a=>{e=e.filter((e=>{const{field:r,comparison:t,criteria:n}=a;if("function"===typeof t)return t(he(r,e),n);const i=he(r,e);switch(t){case"=":return i===n;case"!=":return i!==n;case">":return i>n;case"<":return i<n;case"<=":return i<=n;case">=":return i>=n;case"between":return i>=Math.min(...n)&&i<=Math.max(...n);case"in":return n.includes(i);default:return i===n}}))})),e):h.value}));function m(e,a,r,t){const n=e[t],i=a[t],o=(0===t?r:m(e,a,r,t-1)).sort(((a,r)=>{let o=!0;for(let n=0;n<t;n+=1)if(he(e[n],a)!==he(e[n],r)){o=!1;break}return o?he(n,a)<he(n,r)?i?1:-1:he(n,a)>he(n,r)?i?-1:1:0:0}));return o}(0,t.wB)(p,(e=>{a.value&&u("updateFilter",e)}),{immediate:!0,deep:!0});const y=(0,t.EW)((()=>{if(r.value)return n.value;if(null===e.value)return p.value;const{sortBy:a,sortDesc:t}=e.value,i=[...p.value];return c&&Array.isArray(a)&&Array.isArray(t)?0===a.length?i:m(a,t,i,a.length-1):i.sort(((e,r)=>he(a,e)<he(a,r)?t?1:-1:he(a,e)>he(a,r)?t?-1:1:0))})),g=(0,t.EW)((()=>r.value?s.value:y.value.length)),f=(0,t.EW)({get:()=>{var e;return null!=(e=i.value)?e:[]},set:e=>{u("update:itemsSelected",e)}}),b=e=>{f.value=e?y.value:[],e&&u("selectAll")},k=e=>{const a=e.checkbox;if(delete e.checkbox,delete e.index,a)f.value=f.value.filter((a=>JSON.stringify(a)!==JSON.stringify(e))),u("deselectRow",e);else{const a=f.value;a.unshift(e),f.value=a,u("selectRow",e)}};return{totalItems:y,selectItemsComputed:f,totalItemsLength:g,toggleSelectAll:b,toggleSelectItem:k}}var ye={alternating:{type:Boolean,default:!1},buttonsPagination:{type:Boolean,default:!1},checkboxColumnWidth:{type:Number,default:null},currentPage:{type:Number,default:1},emptyMessage:{type:String,default:"No Available Data"},expandColumnWidth:{type:Number,default:36},filterOptions:{type:Array,default:null},fixedExpand:{type:Boolean,default:!1},fixedHeader:{type:Boolean,default:!0},fixedCheckbox:{type:Boolean,default:!1},fixedIndex:{type:Boolean,default:!1},headerTextDirection:{type:String,default:"left"},bodyTextDirection:{type:String,default:"left"},hideFooter:{type:Boolean,default:!1},hideRowsPerPage:{type:Boolean,default:!1},hideHeader:{type:Boolean,default:!1},indexColumnWidth:{type:Number,default:60},itemsSelected:{type:Array,default:null},loading:{type:Boolean,default:!1},rowsPerPage:{type:Number,default:25},rowsItems:{type:Array,default:()=>[25,50,100]},rowsPerPageMessage:{type:String,default:"rows per page:"},searchField:{type:[String,Array],default:""},searchValue:{type:String,default:""},serverOptions:{type:Object,default:null},serverItemsLength:{type:Number,default:0},showIndex:{type:Boolean,default:!1},sortBy:{type:[String,Array],default:""},sortType:{type:[String,Array],default:"asc"},multiSort:{type:Boolean,default:!1},tableMinHeight:{type:Number,default:180},tableHeight:{type:Number,default:null},themeColor:{type:String,default:"#42b883"},tableClassName:{type:String,default:""},headerClassName:{type:String,default:""},headerItemClassName:{type:[Function,String],default:""},bodyRowClassName:{type:[Function,String],default:""},bodyExpandRowClassName:{type:[Function,String],default:""},bodyItemClassName:{type:[Function,String],default:""},noHover:{type:Boolean,default:!1},borderCell:{type:Boolean,default:!1},mustSort:{type:Boolean,default:!1},rowsOfPageSeparatorMessage:{type:String,default:"of"},clickEventType:{type:String,default:"single"},clickRowToExpand:{type:Boolean,default:!1},tableNodeId:{type:String,default:""},showIndexSymbol:{type:String,default:"#"},preventContextMenuRow:{type:Boolean,default:!0}};const ge=e=>((0,t.Qi)("data-v-32683533"),e=e(),(0,t.jt)(),e),fe=["id"],be=["onClick"],ke={key:3,class:"header-text"},ve={key:5,class:"multi-sort__number"},we=["onClick","onDblclick","onContextmenu"],Ce=["onClick"],Se=["colspan"],Ae={key:0,class:"vue3-easy-data-table__loading"},Me=ge((()=>(0,t.Lk)("div",{class:"vue3-easy-data-table__loading-mask"},null,-1))),Be={class:"loading-entity"},Te={key:1,class:"vue3-easy-data-table__message"},xe={key:0,class:"vue3-easy-data-table__footer"},Re={key:0,class:"pagination__rows-per-page"},Le={class:"pagination__items-index"},Pe=(0,t.pM)({__name:"DataTable",props:y(m({},ye),{items:{type:Array,required:!0},headers:{type:Array,required:!0}}),emits:["clickRow","contextmenuRow","selectRow","deselectRow","expandRow","updateSort","updateFilter","update:itemsSelected","update:serverOptions","updatePageItems","updateTotalItems","selectAll"],setup(e,{expose:a,emit:r}){const l=e;(0,n.$9)((e=>({da0d4328:(0,i.R1)(U),"3037e504":(0,i.R1)(V)})));const{tableNodeId:s,clickEventType:c,bodyTextDirection:u,checkboxColumnWidth:d,currentPage:h,expandColumnWidth:p,filterOptions:m,fixedCheckbox:y,fixedExpand:g,fixedHeader:f,fixedIndex:b,headers:k,headerTextDirection:v,indexColumnWidth:w,items:S,itemsSelected:A,loading:M,mustSort:B,multiSort:x,rowsItems:R,rowsPerPage:L,searchField:P,searchValue:E,serverItemsLength:D,serverOptions:H,showIndex:G,sortBy:W,sortType:F,tableHeight:z,tableMinHeight:I,themeColor:O,rowsOfPageSeparatorMessage:_,showIndexSymbol:J,preventContextMenuRow:j}=(0,i.QW)(l),V=(0,t.EW)((()=>z.value?`${z.value}px`:null)),U=(0,t.EW)((()=>`${I.value}px`));(0,t.Gt)("themeColor",O.value);const Y=(0,t.Ht)(),Z=(0,t.EW)((()=>!!Y.pagination)),X=(0,t.EW)((()=>!!Y.loading)),Q=(0,t.EW)((()=>!!Y.expand)),ee=(0,t.EW)((()=>!!Y.body)),ae=(0,i.KR)(),re=(0,i.KR)();(0,t.Gt)("dataTable",ae);const he=(0,i.KR)(!1);(0,t.sV)((()=>{re.value.addEventListener("scroll",(()=>{he.value=re.value.scrollLeft>0}))}));const ye=(0,t.EW)((()=>null!==A.value)),ge=(0,t.EW)((()=>null!==H.value)),{serverOptionsComputed:Pe,updateServerOptionsPage:Ee,updateServerOptionsSort:De,updateServerOptionsRowsPerPage:Ne}=de(H,x,r),{clientSortOptions:He,headerColumns:Ge,headersForRender:We,updateSortField:Fe,isMultiSorting:ze,getMultiSortNumber:Ie}=le(J,d,p,y,g,b,k,Q,w,ye,ge,B,Pe,G,W,F,x,De,r),{rowsItemsComputed:Oe,rowsPerPageRef:_e,updateRowsPerPage:Ke}=ue(ge,R,H,L),{totalItems:Je,selectItemsComputed:je,totalItemsLength:$e,toggleSelectAll:Ve,toggleSelectItem:Ue}=me(He,m,ge,S,A,P,E,D,x,r),{currentPaginationNumber:Ye,maxPaginationNumber:qe,isLastPage:Ze,isFirstPage:Xe,nextPage:Qe,prevPage:ea,updatePage:aa,updateCurrentPaginationNumber:ra}=ce(h,ge,M,$e,_e,H,Ee),{currentPageFirstIndex:ta,currentPageLastIndex:na,multipleSelectStatus:ia,pageItems:oa}=se(Ye,ye,ge,S,_e,je,G,Je,$e),la=(0,t.EW)((()=>0===Ye.value?0:(Ye.value-1)*_e.value)),{expandingItemIndexList:sa,updateExpandingItemIndexList:ca,clearExpandingItemIndexList:ua}=ie(oa,la,r),{fixedHeaders:da,lastFixedColumn:ha,fixedColumnsInfos:pa}=oe(We),{clickRow:ma}=ne(c,ye,G,r),ya=(e,a)=>{j.value&&a.preventDefault(),r("contextmenuRow",e,a)},ga=e=>{var a;const r=null!=(a=e.width)?a:da.value.length?100:null;if(r)return`width: ${r}px; min-width: ${r}px;`},fa=(e,a="th")=>{if(!da.value.length)return;const r=pa.value.find((a=>a.value===e));return r?`left: ${r.distance}px;z-index: ${"th"===a?3:1};position: sticky;`:void 0};return(0,t.wB)(M,((e,a)=>{Pe.value&&!1===e&&!0===a&&(ra(Pe.value.page),ua())})),(0,t.wB)(_e,(e=>{ge.value?Ne(e):aa(1)})),(0,t.wB)([E,m],(()=>{ge.value||aa(1)})),(0,t.wB)([Ye,He,P,E,m],(()=>{ua()}),{deep:!0}),(0,t.wB)(oa,(e=>{r("updatePageItems",e)}),{deep:!0}),(0,t.wB)(Je,(e=>{r("updateTotalItems",e)}),{deep:!0}),a({currentPageFirstIndex:ta,currentPageLastIndex:na,clientItemsLength:$e,maxPaginationNumber:qe,currentPaginationNumber:Ye,isLastPage:Ze,isFirstPage:Xe,nextPage:Qe,prevPage:ea,updatePage:aa,rowsPerPageOptions:Oe,rowsPerPageActiveOption:_e,updateRowsPerPageActiveOption:Ke}),(e,a)=>((0,t.uX)(),(0,t.CE)("div",{ref_key:"dataTable",ref:ae,class:(0,o.C4)(["vue3-easy-data-table",[e.tableClassName]])},[(0,t.Lk)("div",{ref_key:"tableBody",ref:re,class:(0,o.C4)(["vue3-easy-data-table__main",{"fixed-header":(0,i.R1)(f),"fixed-height":(0,i.R1)(z),"show-shadow":he.value,"table-fixed":(0,i.R1)(da).length,hoverable:!e.noHover,"border-cell":e.borderCell}])},[(0,t.Lk)("table",{id:(0,i.R1)(s)},[(0,t.Lk)("colgroup",null,[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)((0,i.R1)(We),((e,a)=>((0,t.uX)(),(0,t.CE)("col",{key:a,style:(0,o.Tr)(ga(e))},null,4)))),128))]),(0,i.R1)(Y)["customize-headers"]?(0,t.RG)(e.$slots,"customize-headers",{key:0},void 0,!0):(0,i.R1)(We).length&&!e.hideHeader?((0,t.uX)(),(0,t.CE)("thead",{key:1,class:(0,o.C4)(["vue3-easy-data-table__header",[e.headerClassName]])},[(0,t.Lk)("tr",null,[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)((0,i.R1)(We),((a,r)=>((0,t.uX)(),(0,t.CE)("th",{key:r,class:(0,o.C4)([{sortable:a.sortable,none:a.sortable&&"none"===a.sortType,desc:a.sortable&&"desc"===a.sortType,asc:a.sortable&&"asc"===a.sortType,shadow:a.value===(0,i.R1)(ha)},"string"===typeof e.headerItemClassName?e.headerItemClassName:e.headerItemClassName(a,r+1)]),style:(0,o.Tr)(fa(a.value)),onClick:(0,n.D$)((e=>a.sortable&&a.sortType?(0,i.R1)(Fe)(a.value,a.sortType):null),["stop"])},["checkbox"===a.text?((0,t.uX)(),(0,t.Wv)(C,{key:(0,i.R1)(ia),status:(0,i.R1)(ia),onChange:(0,i.R1)(Ve)},null,8,["status","onChange"])):((0,t.uX)(),(0,t.CE)("span",{key:1,class:(0,o.C4)(["header",`direction-${(0,i.R1)(v)}`])},[(0,i.R1)(Y)[`header-${a.value}`]?(0,t.RG)(e.$slots,`header-${a.value}`,(0,o._B)((0,t.v6)({key:0},a)),void 0,!0):(0,i.R1)(Y)[`header-${a.value.toLowerCase()}`]?(0,t.RG)(e.$slots,`header-${a.value.toLowerCase()}`,(0,o._B)((0,t.v6)({key:1},a)),void 0,!0):(0,i.R1)(Y)["header"]?(0,t.RG)(e.$slots,"header",(0,o._B)((0,t.v6)({key:2},a)),void 0,!0):((0,t.uX)(),(0,t.CE)("span",ke,(0,o.v_)(a.text),1)),a.sortable?((0,t.uX)(),(0,t.CE)("i",{key:a.sortType?a.sortType:"none",class:(0,o.C4)(["sortType-icon",{desc:"desc"===a.sortType}])},null,2)):(0,t.Q3)("",!0),(0,i.R1)(x)&&(0,i.R1)(ze)(a.value)?((0,t.uX)(),(0,t.CE)("span",ve,(0,o.v_)((0,i.R1)(Ie)(a.value)),1)):(0,t.Q3)("",!0)],2))],14,be)))),128))])],2)):(0,t.Q3)("",!0),(0,i.R1)(ee)?(0,t.RG)(e.$slots,"body",(0,o._B)((0,t.v6)({key:2},(0,i.R1)(oa))),void 0,!0):(0,i.R1)(Ge).length?((0,t.uX)(),(0,t.CE)("tbody",{key:3,class:(0,o.C4)(["vue3-easy-data-table__body",{"row-alternation":e.alternating}])},[(0,t.RG)(e.$slots,"body-prepend",(0,o._B)((0,t.Ng)({items:(0,i.R1)(oa),pagination:{isFirstPage:(0,i.R1)(Xe),isLastPage:(0,i.R1)(Ze),currentPaginationNumber:(0,i.R1)(Ye),maxPaginationNumber:(0,i.R1)(qe),nextPage:(0,i.R1)(Qe),prevPage:(0,i.R1)(ea)},headers:(0,i.R1)(We)})),void 0,!0),((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)((0,i.R1)(oa),((a,r)=>((0,t.uX)(),(0,t.CE)(t.FK,{key:r},[(0,t.Lk)("tr",{class:(0,o.C4)([{"even-row":(r+1)%2===0},"string"===typeof e.bodyRowClassName?e.bodyRowClassName:e.bodyRowClassName(a,r+1)]),onClick:t=>{(0,i.R1)(ma)(a,"single",t),e.clickRowToExpand&&(0,i.R1)(ca)(r+(0,i.R1)(la),a,t)},onDblclick:e=>{(0,i.R1)(ma)(a,"double",e)},onContextmenu:e=>{ya(a,e)}},[((0,t.uX)(!0),(0,t.CE)(t.FK,null,(0,t.pI)((0,i.R1)(Ge),((n,l)=>((0,t.uX)(),(0,t.CE)("td",{key:l,style:(0,o.Tr)(fa(n,"td")),class:(0,o.C4)([{shadow:n===(0,i.R1)(ha),"can-expand":"expand"===n},"string"===typeof e.bodyItemClassName?e.bodyItemClassName:e.bodyItemClassName(n,r+1),`direction-${(0,i.R1)(u)}`]),onClick:e=>"expand"===n?(0,i.R1)(ca)(r+(0,i.R1)(la),a,e):null},[(0,i.R1)(Y)[`item-${n}`]?(0,t.RG)(e.$slots,`item-${n}`,(0,o._B)((0,t.v6)({key:0},a)),void 0,!0):(0,i.R1)(Y)[`item-${n.toLowerCase()}`]?(0,t.RG)(e.$slots,`item-${n.toLowerCase()}`,(0,o._B)((0,t.v6)({key:1},a)),void 0,!0):"expand"===n?((0,t.uX)(),(0,t.CE)("i",{key:2,class:(0,o.C4)(["expand-icon",{expanding:(0,i.R1)(sa).includes((0,i.R1)(la)+r)}])},null,2)):"checkbox"===n?((0,t.uX)(),(0,t.Wv)(T,{key:3,checked:a[n],onChange:e=>(0,i.R1)(Ue)(a)},null,8,["checked","onChange"])):(0,i.R1)(Y)["item"]?(0,t.RG)(e.$slots,"item",(0,o._B)((0,t.v6)({key:4},{column:n,item:a})),void 0,!0):((0,t.uX)(),(0,t.CE)(t.FK,{key:5},[(0,t.eW)((0,o.v_)((0,i.R1)(pe)(n,a)),1)],64))],14,Ce)))),128))],42,we),(0,i.R1)(Q)&&(0,i.R1)(sa).includes(r+(0,i.R1)(la))?((0,t.uX)(),(0,t.CE)("tr",{key:0,class:(0,o.C4)([{"even-row":(r+1)%2===0},"string"===typeof e.bodyExpandRowClassName?e.bodyExpandRowClassName:e.bodyExpandRowClassName(a,r+1)])},[(0,t.Lk)("td",{colspan:(0,i.R1)(We).length,class:"expand"},[a.expandLoading?((0,t.uX)(),(0,t.Wv)($,{key:0,class:"expand-loading"})):(0,t.Q3)("",!0),(0,t.RG)(e.$slots,"expand",(0,o._B)((0,t.Ng)(a)),void 0,!0)],8,Se)],2)):(0,t.Q3)("",!0)],64)))),128)),(0,t.RG)(e.$slots,"body-append",(0,o._B)((0,t.Ng)({items:(0,i.R1)(oa),pagination:{isFirstPage:(0,i.R1)(Xe),isLastPage:(0,i.R1)(Ze),currentPaginationNumber:(0,i.R1)(Ye),maxPaginationNumber:(0,i.R1)(qe),nextPage:(0,i.R1)(Qe),prevPage:(0,i.R1)(ea),updatePage:(0,i.R1)(aa)},headers:(0,i.R1)(We)})),void 0,!0)],2)):(0,t.Q3)("",!0)],8,fe),(0,i.R1)(M)?((0,t.uX)(),(0,t.CE)("div",Ae,[Me,(0,t.Lk)("div",Be,[(0,i.R1)(X)?(0,t.RG)(e.$slots,"loading",{key:0},void 0,!0):((0,t.uX)(),(0,t.Wv)(K,{key:1}))])])):(0,t.Q3)("",!0),(0,i.R1)(oa).length||(0,i.R1)(M)?(0,t.Q3)("",!0):((0,t.uX)(),(0,t.CE)("div",Te,[(0,t.RG)(e.$slots,"empty-message",{},(()=>[(0,t.eW)((0,o.v_)(e.emptyMessage),1)]),!0)]))],2),e.hideFooter?(0,t.Q3)("",!0):((0,t.uX)(),(0,t.CE)("div",xe,[e.hideRowsPerPage?(0,t.Q3)("",!0):((0,t.uX)(),(0,t.CE)("div",Re,[(0,t.eW)((0,o.v_)(e.rowsPerPageMessage)+" ",1),(0,t.bF)(N,{modelValue:(0,i.R1)(_e),"onUpdate:modelValue":a[0]||(a[0]=e=>(0,i.i9)(_e)?_e.value=e:null),"rows-items":(0,i.R1)(Oe)},null,8,["modelValue","rows-items"])])),(0,t.Lk)("div",Le,(0,o.v_)(`${(0,i.R1)(ta)}–${(0,i.R1)(na)}`)+" "+(0,o.v_)((0,i.R1)(_))+" "+(0,o.v_)((0,i.R1)($e)),1),(0,i.R1)(Z)?(0,t.RG)(e.$slots,"pagination",(0,o._B)((0,t.v6)({key:1},{isFirstPage:(0,i.R1)(Xe),isLastPage:(0,i.R1)(Ze),currentPaginationNumber:(0,i.R1)(Ye),maxPaginationNumber:(0,i.R1)(qe),nextPage:(0,i.R1)(Qe),prevPage:(0,i.R1)(ea)})),void 0,!0):((0,t.uX)(),(0,t.Wv)(te,{key:2,"is-first-page":(0,i.R1)(Xe),"is-last-page":(0,i.R1)(Ze),onClickNextPage:(0,i.R1)(Qe),onClickPrevPage:(0,i.R1)(ea)},(0,t.eX)({_:2},[e.buttonsPagination?{name:"buttonsPagination",fn:(0,t.k6)((()=>[(0,t.bF)(q,{"current-pagination-number":(0,i.R1)(Ye),"max-pagination-number":(0,i.R1)(qe),onUpdatePage:(0,i.R1)(aa)},null,8,["current-pagination-number","max-pagination-number","onUpdatePage"])])),key:"0"}:void 0]),1032,["is-first-page","is-last-page","onClickNextPage","onClickPrevPage"]))]))],2))}});var Ee=g(Pe,[["__scopeId","data-v-32683533"]]);"undefined"!==typeof window&&window.Vue&&window.Vue.createApp({}).component("Vue3EasyDataTable",Ee)}}]);
//# sourceMappingURL=chunk-vendors.b5d802d1.js.map